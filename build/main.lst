ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB95:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : RTC 9H
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "USER/user.c"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  55:Core/Src/main.c **** void SystemClock_Config(void);
  56:Core/Src/main.c **** static void MX_GPIO_Init(void);
  57:Core/Src/main.c **** static void MX_RTC_Init(void);
  58:Core/Src/main.c **** static void MX_TIM1_Init(void);
  59:Core/Src/main.c **** static void MX_IWDG_Init(void);
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Configure the system clock */
  89:Core/Src/main.c ****   SystemClock_Config();
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_RTC_Init();
  98:Core/Src/main.c ****   MX_TIM1_Init();
  99:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 100:Core/Src/main.c ****   MX_IWDG_Init();
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c **** user_init();
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c ****   while (1)
 108:Core/Src/main.c ****   {
 109:Core/Src/main.c ****     /* USER CODE END WHILE */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 112:Core/Src/main.c **** 	user_loop();
 113:Core/Src/main.c ****   }
 114:Core/Src/main.c ****   /* USER CODE END 3 */
 115:Core/Src/main.c **** }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** /**
 118:Core/Src/main.c ****   * @brief System Clock Configuration
 119:Core/Src/main.c ****   * @retval None
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c **** void SystemClock_Config(void)
 122:Core/Src/main.c **** {
 123:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 124:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 125:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 128:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     Error_Handler();
 141:Core/Src/main.c ****   }
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 146:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USB;
 157:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 158:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 159:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 160:Core/Src/main.c ****   {
 161:Core/Src/main.c ****     Error_Handler();
 162:Core/Src/main.c ****   }
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****   * @brief IWDG Initialization Function
 167:Core/Src/main.c ****   * @param None
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** static void MX_IWDG_Init(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 180:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 181:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 182:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 183:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c **** /**
 194:Core/Src/main.c ****   * @brief RTC Initialization Function
 195:Core/Src/main.c ****   * @param None
 196:Core/Src/main.c ****   * @retval None
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c **** static void MX_RTC_Init(void)
 199:Core/Src/main.c **** {
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 204:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 5


 205:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 206:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 209:Core/Src/main.c ****   hrtc.Instance = RTC;
 210:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 211:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 212:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
 213:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /** Initialize RTC Only
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c ****   hrtc.Instance = RTC;
 218:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 219:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 220:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 221:Core/Src/main.c ****   {
 222:Core/Src/main.c ****     Error_Handler();
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 226:Core/Src/main.c ****   } else
 227:Core/Src/main.c ****     {
 228:Core/Src/main.c **** 	  HAL_NVIC_SetPriority(RTC_IRQn,15,0);
 229:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(RTC_IRQn);
 230:Core/Src/main.c **** 	}
 231:Core/Src/main.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)!= 0x5051)
 232:Core/Src/main.c **** 	{
 233:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c ****   sTime.Hours = 0x0;
 238:Core/Src/main.c ****   sTime.Minutes = 0x0;
 239:Core/Src/main.c ****   sTime.Seconds = 0x0;
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 242:Core/Src/main.c ****   {
 243:Core/Src/main.c ****     Error_Handler();
 244:Core/Src/main.c ****   }
 245:Core/Src/main.c ****   DateToUpdate.WeekDay = RTC_WEEKDAY_MONDAY;
 246:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 247:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 248:Core/Src/main.c ****   DateToUpdate.Year = 0x0;
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &DateToUpdate, RTC_FORMAT_BCD) != HAL_OK)
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 255:Core/Src/main.c **** 	} // Kitame user code virsuje yra IF komanda. Cia ji uzsidaro.
 256:Core/Src/main.c ****   // LAIKAS BUVO ISSAUGOTAS, NES USER REGISTRAS TURI MAGIC skaiciu 0x5051
 257:Core/Src/main.c ****   
 258:Core/Src/main.c ****   
 259:Core/Src/main.c **** // LAIKRODZIO TIKRINIMAS  
 260:Core/Src/main.c ****   
 261:Core/Src/main.c **** /* read RTC for time */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 6


 262:Core/Src/main.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 263:Core/Src/main.c **** /* read time seconds for epoch */
 264:Core/Src/main.c **** // uint32_t nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*8640
 265:Core/Src/main.c **** 
 266:Core/Src/main.c **** //KALENDORIAUS TIKRINIMAS
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** 	//RTC kalendorius FAIL! Pas F103 jo ir nera. Cold boot su gyvu RTC
 269:Core/Src/main.c **** 	RTC_DateTypeDef dienos= {0};
 270:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 271:Core/Src/main.c **** 	if(dienos.Year < 20) {rtc_check_screwd_calendar();}
 272:Core/Src/main.c **** 	
 273:Core/Src/main.c **** //HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 274:Core/Src/main.c **** 
 275:Core/Src/main.c **** //Cia irasom MAGIC skaiciu. Jis po pilno reseto ir RTC mirties turi neislikti.
 276:Core/Src/main.c **** 	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x5051);//Write data to the specified backing area registe
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** //HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10);
 279:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c **** }
 282:Core/Src/main.c **** 
 283:Core/Src/main.c **** /**
 284:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 285:Core/Src/main.c ****   * @param None
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
 288:Core/Src/main.c **** static void MX_TIM1_Init(void)
 289:Core/Src/main.c **** {
 290:Core/Src/main.c **** 
 291:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 296:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 297:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 298:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 301:Core/Src/main.c **** 
 302:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 303:Core/Src/main.c ****   htim1.Instance = TIM1;
 304:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 305:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 306:Core/Src/main.c ****   htim1.Init.Period = 35535;
 307:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 308:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 309:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 310:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****     Error_Handler();
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 315:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 316:Core/Src/main.c ****   {
 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 7


 319:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 320:Core/Src/main.c ****   {
 321:Core/Src/main.c ****     Error_Handler();
 322:Core/Src/main.c ****   }
 323:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 324:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 325:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 326:Core/Src/main.c ****   {
 327:Core/Src/main.c ****     Error_Handler();
 328:Core/Src/main.c ****   }
 329:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 330:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 331:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 332:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 333:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 334:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 335:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 336:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 337:Core/Src/main.c ****   {
 338:Core/Src/main.c ****     Error_Handler();
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 341:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 342:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 343:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 344:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 345:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 346:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 347:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 348:Core/Src/main.c ****   {
 349:Core/Src/main.c ****     Error_Handler();
 350:Core/Src/main.c ****   }
 351:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 354:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 355:Core/Src/main.c **** 
 356:Core/Src/main.c **** }
 357:Core/Src/main.c **** 
 358:Core/Src/main.c **** /**
 359:Core/Src/main.c ****   * @brief GPIO Initialization Function
 360:Core/Src/main.c ****   * @param None
 361:Core/Src/main.c ****   * @retval None
 362:Core/Src/main.c ****   */
 363:Core/Src/main.c **** static void MX_GPIO_Init(void)
 364:Core/Src/main.c **** {
  26              		.loc 1 364 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 8


  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 365:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 365 3 view .LVU1
  40              		.loc 1 365 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 366:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 367:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 370:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  46              		.loc 1 370 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 370 3 view .LVU4
  49              		.loc 1 370 3 view .LVU5
  50 000e 124B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F02002 		orr	r2, r2, #32
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 370 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F02002 		and	r2, r2, #32
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 370 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 370 3 view .LVU8
 371:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 371 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 371 3 view .LVU10
  65              		.loc 1 371 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 371 3 view .LVU12
  70 002a 9B69     		ldr	r3, [r3, #24]
  71 002c 03F00403 		and	r3, r3, #4
  72 0030 0193     		str	r3, [sp, #4]
  73              		.loc 1 371 3 view .LVU13
  74 0032 019B     		ldr	r3, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 371 3 view .LVU14
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 374:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  77              		.loc 1 374 3 view .LVU15
  78 0034 094D     		ldr	r5, .L3+4
  79 0036 2246     		mov	r2, r4
  80 0038 0121     		movs	r1, #1
  81 003a 2846     		mov	r0, r5
  82 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 9


 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 377:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
  84              		.loc 1 377 3 view .LVU16
  85              		.loc 1 377 23 is_stmt 0 view .LVU17
  86 0040 0123     		movs	r3, #1
  87 0042 0293     		str	r3, [sp, #8]
 378:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 378 3 is_stmt 1 view .LVU18
  89              		.loc 1 378 24 is_stmt 0 view .LVU19
  90 0044 0393     		str	r3, [sp, #12]
 379:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  91              		.loc 1 379 3 is_stmt 1 view .LVU20
  92              		.loc 1 379 24 is_stmt 0 view .LVU21
  93 0046 0494     		str	r4, [sp, #16]
 380:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  94              		.loc 1 380 3 is_stmt 1 view .LVU22
  95              		.loc 1 380 25 is_stmt 0 view .LVU23
  96 0048 0223     		movs	r3, #2
  97 004a 0593     		str	r3, [sp, #20]
 381:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
  98              		.loc 1 381 3 is_stmt 1 view .LVU24
  99 004c 02A9     		add	r1, sp, #8
 100 004e 2846     		mov	r0, r5
 101 0050 FFF7FEFF 		bl	HAL_GPIO_Init
 102              	.LVL1:
 382:Core/Src/main.c **** 
 383:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 384:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 385:Core/Src/main.c **** }
 103              		.loc 1 385 1 is_stmt 0 view .LVU25
 104 0054 07B0     		add	sp, sp, #28
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 12
 107              		@ sp needed
 108 0056 30BD     		pop	{r4, r5, pc}
 109              	.L4:
 110              		.align	2
 111              	.L3:
 112 0058 00100240 		.word	1073876992
 113 005c 00080140 		.word	1073809408
 114              		.cfi_endproc
 115              	.LFE95:
 117              		.section	.text.rtc_clean,"ax",%progbits
 118              		.align	1
 119              		.global	rtc_clean
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	rtc_clean:
 125              	.LFB68:
 126              		.file 2 "Core/Src/USER/rtc.c"
   1:Core/Src/USER/rtc.c **** /* ********************************************* */
   2:Core/Src/USER/rtc.c **** /* (c)2022 by www.vabolis.lt, Kaunas             */
   3:Core/Src/USER/rtc.c **** /**
   4:Core/Src/USER/rtc.c ****   **********************************************
   5:Core/Src/USER/rtc.c ****   * @file           : rtc.c
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 10


   6:Core/Src/USER/rtc.c ****   * @version        : 1.0
   7:Core/Src/USER/rtc.c ****   * @brief          : generic RTC clock and calendar for STM32
   8:Core/Src/USER/rtc.c **** **/  
   9:Core/Src/USER/rtc.c **** /* ********************************************* */
  10:Core/Src/USER/rtc.c **** 
  11:Core/Src/USER/rtc.c **** #include "rtc.h"
  12:Core/Src/USER/rtc.c **** #include "user.h"
  13:Core/Src/USER/rtc.c **** #include "usbd_cdc_if.h"
  14:Core/Src/USER/rtc.c **** 
  15:Core/Src/USER/rtc.c **** //#include "epoch.c"
  16:Core/Src/USER/rtc.c **** 
  17:Core/Src/USER/rtc.c **** extern RTC_HandleTypeDef hrtc;
  18:Core/Src/USER/rtc.c **** 
  19:Core/Src/USER/rtc.c **** 
  20:Core/Src/USER/rtc.c **** // ****** pacioje pradzioje, globalus laikas. Galima persideklaruoti, bet ar verta?
  21:Core/Src/USER/rtc.c **** 
  22:Core/Src/USER/rtc.c **** RTC_TimeTypeDef currTime = {0};
  23:Core/Src/USER/rtc.c **** RTC_TimeTypeDef oldTime = {0xFF,0xFF,0xFF}; //del refresh
  24:Core/Src/USER/rtc.c **** volatile unsigned char LastHour=255;
  25:Core/Src/USER/rtc.c **** 
  26:Core/Src/USER/rtc.c **** /* instrukcijos kurias reikia ikelti i main.c */
  27:Core/Src/USER/rtc.c **** 
  28:Core/Src/USER/rtc.c **** //-  /* USER CODE BEGIN Check_RTC_BKUP */
  29:Core/Src/USER/rtc.c **** //-  
  30:Core/Src/USER/rtc.c **** //-  // CIA TIKRINAM AR RTC ir kiti RAM baitai isliko gyvi.
  31:Core/Src/USER/rtc.c **** //-    if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)!= 0x5051)
  32:Core/Src/USER/rtc.c **** //-	{
  33:Core/Src/USER/rtc.c **** //-  /* USER CODE END Check_RTC_BKUP */
  34:Core/Src/USER/rtc.c **** 
  35:Core/Src/USER/rtc.c **** 
  36:Core/Src/USER/rtc.c **** //- /* USER CODE BEGIN RTC_Init 2 */
  37:Core/Src/USER/rtc.c **** //-	} // Kitame user code virsuje yra IF komanda. Cia ji uzsidaro.
  38:Core/Src/USER/rtc.c **** //-  // LAIKAS BUVO ISSAUGOTAS, NES USER REGISTRAS TURI MAGIC skaiciu 0x5051
  39:Core/Src/USER/rtc.c **** //- 
  40:Core/Src/USER/rtc.c **** //- /* read RTC for time */
  41:Core/Src/USER/rtc.c **** //-	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
  42:Core/Src/USER/rtc.c **** //- /* read time seconds for epoch */
  43:Core/Src/USER/rtc.c **** //- // uint32_t nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*
  44:Core/Src/USER/rtc.c **** //-
  45:Core/Src/USER/rtc.c **** //- /* set time to RTC */
  46:Core/Src/USER/rtc.c **** //-	if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
  47:Core/Src/USER/rtc.c **** //-	{
  48:Core/Src/USER/rtc.c **** //-	Error_Handler();
  49:Core/Src/USER/rtc.c **** //-	}
  50:Core/Src/USER/rtc.c **** //-
  51:Core/Src/USER/rtc.c **** //- // DEMESIO! STM32F103 NETURI KALENDORIAUS ir panasu, kad neturi epoch skaitliuko.
  52:Core/Src/USER/rtc.c **** //-	//RTC_DateTypeDef dienos= {0};
  53:Core/Src/USER/rtc.c **** //-	//HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
  54:Core/Src/USER/rtc.c **** //-	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
  55:Core/Src/USER/rtc.c **** //-
  56:Core/Src/USER/rtc.c **** //- //Cia irasom MAGIC skaiciu. Jis po pilno reseto ir RTC mirties turi neislikti.
  57:Core/Src/USER/rtc.c **** //-	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x5051);//Write data to the specified backing area regi
  58:Core/Src/USER/rtc.c **** //-
  59:Core/Src/USER/rtc.c **** //- //HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10);
  60:Core/Src/USER/rtc.c **** //-   /* USER CODE END RTC_Init 2 */
  61:Core/Src/USER/rtc.c **** 
  62:Core/Src/USER/rtc.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 11


  63:Core/Src/USER/rtc.c **** // sunaikina sena laika. Naudojama LCD grafikos spartinimui
  64:Core/Src/USER/rtc.c **** void rtc_clean(void)
  65:Core/Src/USER/rtc.c **** {
 127              		.loc 2 65 1 is_stmt 1 view -0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
  66:Core/Src/USER/rtc.c **** 	oldTime.Hours = 60;
 132              		.loc 2 66 2 view .LVU27
 133              		.loc 2 66 16 is_stmt 0 view .LVU28
 134 0000 024B     		ldr	r3, .L6
 135 0002 3C22     		movs	r2, #60
 136 0004 1A70     		strb	r2, [r3]
  67:Core/Src/USER/rtc.c **** 	oldTime.Minutes = 60;
 137              		.loc 2 67 2 is_stmt 1 view .LVU29
 138              		.loc 2 67 18 is_stmt 0 view .LVU30
 139 0006 5A70     		strb	r2, [r3, #1]
  68:Core/Src/USER/rtc.c **** 	oldTime.Seconds = 60;
 140              		.loc 2 68 2 is_stmt 1 view .LVU31
 141              		.loc 2 68 18 is_stmt 0 view .LVU32
 142 0008 9A70     		strb	r2, [r3, #2]
  69:Core/Src/USER/rtc.c **** }
 143              		.loc 2 69 1 view .LVU33
 144 000a 7047     		bx	lr
 145              	.L7:
 146              		.align	2
 147              	.L6:
 148 000c 00000000 		.word	.LANCHOR0
 149              		.cfi_endproc
 150              	.LFE68:
 152              		.section	.text.filter_string,"ax",%progbits
 153              		.align	1
 154              		.global	filter_string
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 159              	filter_string:
 160              	.LVL2:
 161              	.LFB69:
  70:Core/Src/USER/rtc.c **** 
  71:Core/Src/USER/rtc.c **** 
  72:Core/Src/USER/rtc.c **** 
  73:Core/Src/USER/rtc.c **** 
  74:Core/Src/USER/rtc.c **** // teksto filtras laiko ir datos nustatymui.
  75:Core/Src/USER/rtc.c **** void filter_string(char *Buf)
  76:Core/Src/USER/rtc.c **** {
 162              		.loc 2 76 1 is_stmt 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		.loc 2 76 1 is_stmt 0 view .LVU35
 167 0000 00B5     		push	{lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 4
 170              		.cfi_offset 14, -4
 171 0002 0246     		mov	r2, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 12


  77:Core/Src/USER/rtc.c **** int i=0;
 172              		.loc 2 77 1 is_stmt 1 view .LVU36
 173              	.LVL3:
  78:Core/Src/USER/rtc.c **** int j=0;
 174              		.loc 2 78 1 view .LVU37
  79:Core/Src/USER/rtc.c **** 
  80:Core/Src/USER/rtc.c **** for(i=0;Buf[i] != 0; i++)
 175              		.loc 2 80 1 view .LVU38
 176              		.loc 2 80 6 is_stmt 0 view .LVU39
 177 0004 4FF0000C 		mov	ip, #0
 178              		.loc 2 80 1 view .LVU40
 179 0008 17E0     		b	.L9
 180              	.LVL4:
 181              	.L10:
  81:Core/Src/USER/rtc.c **** 	{
  82:Core/Src/USER/rtc.c **** 	while(!((Buf[i]>='0' && Buf[i]<='9') || Buf[i]==':' || Buf[i]=='.') && !(Buf[i]==0))
  83:Core/Src/USER/rtc.c **** 		{
  84:Core/Src/USER/rtc.c **** 			for(j=i;Buf[j] !=0; ++j)
  85:Core/Src/USER/rtc.c **** 				{
  86:Core/Src/USER/rtc.c **** 					Buf[j]=Buf[j+1];
 182              		.loc 2 86 6 is_stmt 1 discriminator 3 view .LVU41
 183              		.loc 2 86 16 is_stmt 0 discriminator 3 view .LVU42
 184 000a D118     		adds	r1, r2, r3
 185 000c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 186              		.loc 2 86 12 discriminator 3 view .LVU43
 187 000e D154     		strb	r1, [r2, r3]
  84:Core/Src/USER/rtc.c **** 				{
 188              		.loc 2 84 24 is_stmt 1 discriminator 3 view .LVU44
 189 0010 0133     		adds	r3, r3, #1
 190              	.LVL5:
 191              	.L12:
  84:Core/Src/USER/rtc.c **** 				{
 192              		.loc 2 84 12 discriminator 1 view .LVU45
  84:Core/Src/USER/rtc.c **** 				{
 193              		.loc 2 84 15 is_stmt 0 discriminator 1 view .LVU46
 194 0012 D018     		adds	r0, r2, r3
 195 0014 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
  84:Core/Src/USER/rtc.c **** 				{
 196              		.loc 2 84 4 discriminator 1 view .LVU47
 197 0016 0029     		cmp	r1, #0
 198 0018 F7D1     		bne	.L10
  87:Core/Src/USER/rtc.c **** 				}
  88:Core/Src/USER/rtc.c **** 			Buf[j]=0;
 199              		.loc 2 88 4 is_stmt 1 view .LVU48
 200              		.loc 2 88 10 is_stmt 0 view .LVU49
 201 001a 0023     		movs	r3, #0
 202              	.LVL6:
 203              		.loc 2 88 10 view .LVU50
 204 001c 0370     		strb	r3, [r0]
 205              	.L13:
  82:Core/Src/USER/rtc.c **** 		{
 206              		.loc 2 82 7 is_stmt 1 view .LVU51
  82:Core/Src/USER/rtc.c **** 		{
 207              		.loc 2 82 14 is_stmt 0 view .LVU52
 208 001e 9EF80010 		ldrb	r1, [lr]	@ zero_extendqisi2
  82:Core/Src/USER/rtc.c **** 		{
 209              		.loc 2 82 39 view .LVU53
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 13


 210 0022 A1F13003 		sub	r3, r1, #48
 211 0026 DBB2     		uxtb	r3, r3
  82:Core/Src/USER/rtc.c **** 		{
 212              		.loc 2 82 7 view .LVU54
 213 0028 0A2B     		cmp	r3, #10
 214 002a 04D9     		bls	.L11
  82:Core/Src/USER/rtc.c **** 		{
 215              		.loc 2 82 8 discriminator 1 view .LVU55
 216 002c 2E29     		cmp	r1, #46
 217 002e 02D0     		beq	.L11
  82:Core/Src/USER/rtc.c **** 		{
 218              		.loc 2 82 70 discriminator 2 view .LVU56
 219 0030 09B1     		cbz	r1, .L11
  84:Core/Src/USER/rtc.c **** 				{
 220              		.loc 2 84 9 view .LVU57
 221 0032 6346     		mov	r3, ip
 222 0034 EDE7     		b	.L12
 223              	.L11:
  80:Core/Src/USER/rtc.c **** 	{
 224              		.loc 2 80 22 is_stmt 1 discriminator 2 view .LVU58
  80:Core/Src/USER/rtc.c **** 	{
 225              		.loc 2 80 23 is_stmt 0 discriminator 2 view .LVU59
 226 0036 0CF1010C 		add	ip, ip, #1
 227              	.LVL7:
 228              	.L9:
  80:Core/Src/USER/rtc.c **** 	{
 229              		.loc 2 80 9 is_stmt 1 discriminator 1 view .LVU60
  80:Core/Src/USER/rtc.c **** 	{
 230              		.loc 2 80 12 is_stmt 0 discriminator 1 view .LVU61
 231 003a 02EB0C0E 		add	lr, r2, ip
 232 003e 12F80C30 		ldrb	r3, [r2, ip]	@ zero_extendqisi2
  80:Core/Src/USER/rtc.c **** 	{
 233              		.loc 2 80 1 discriminator 1 view .LVU62
 234 0042 002B     		cmp	r3, #0
 235 0044 EBD1     		bne	.L13
  89:Core/Src/USER/rtc.c **** 		}
  90:Core/Src/USER/rtc.c **** 	}
  91:Core/Src/USER/rtc.c **** }
 236              		.loc 2 91 1 view .LVU63
 237 0046 5DF804FB 		ldr	pc, [sp], #4
 238              		.cfi_endproc
 239              	.LFE69:
 241              		.section	.text.rtc_update,"ax",%progbits
 242              		.align	1
 243              		.global	rtc_update
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	rtc_update:
 249              	.LFB72:
  92:Core/Src/USER/rtc.c **** 
  93:Core/Src/USER/rtc.c **** //nustatyti kalendoriu.
  94:Core/Src/USER/rtc.c **** void rtc_set_date_text(char * Buf)
  95:Core/Src/USER/rtc.c **** {
  96:Core/Src/USER/rtc.c **** filter_string(Buf);
  97:Core/Src/USER/rtc.c **** //22.12.23
  98:Core/Src/USER/rtc.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 14


  99:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 100:Core/Src/USER/rtc.c **** 
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 103:Core/Src/USER/rtc.c **** 
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 106:Core/Src/USER/rtc.c **** 	
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 109:Core/Src/USER/rtc.c **** 	
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 112:Core/Src/USER/rtc.c **** 	
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 114:Core/Src/USER/rtc.c ****   {
 115:Core/Src/USER/rtc.c ****     Error_Handler();
 116:Core/Src/USER/rtc.c ****   }
 117:Core/Src/USER/rtc.c ****   
 118:Core/Src/USER/rtc.c ****   rtc_backup_date();
 119:Core/Src/USER/rtc.c **** }
 120:Core/Src/USER/rtc.c **** 
 121:Core/Src/USER/rtc.c **** //nustatyti laikrodi
 122:Core/Src/USER/rtc.c **** void rtc_set_time_text(char * Buf)
 123:Core/Src/USER/rtc.c **** {
 124:Core/Src/USER/rtc.c **** // echo ATT%TIME% >COMx
 125:Core/Src/USER/rtc.c **** //ATT19:14:32.94
 126:Core/Src/USER/rtc.c **** 
 127:Core/Src/USER/rtc.c **** 
 128:Core/Src/USER/rtc.c **** filter_string(Buf);
 129:Core/Src/USER/rtc.c **** 
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 131:Core/Src/USER/rtc.c **** 
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 133:Core/Src/USER/rtc.c **** 
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 136:Core/Src/USER/rtc.c **** 	
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 139:Core/Src/USER/rtc.c **** 	
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 142:Core/Src/USER/rtc.c **** 	
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 144:Core/Src/USER/rtc.c ****   {
 145:Core/Src/USER/rtc.c ****     Error_Handler();
 146:Core/Src/USER/rtc.c ****   }
 147:Core/Src/USER/rtc.c **** 
 148:Core/Src/USER/rtc.c **** }
 149:Core/Src/USER/rtc.c **** 
 150:Core/Src/USER/rtc.c **** // nuskaityti laika is hardwares.
 151:Core/Src/USER/rtc.c **** void rtc_update(void)
 152:Core/Src/USER/rtc.c **** {
 250              		.loc 2 152 1 is_stmt 1 view -0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 15


 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254 0000 08B5     		push	{r3, lr}
 255              	.LCFI4:
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 3, -8
 258              		.cfi_offset 14, -4
 153:Core/Src/USER/rtc.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 259              		.loc 2 153 2 view .LVU65
 260 0002 0022     		movs	r2, #0
 261 0004 0249     		ldr	r1, .L18
 262 0006 0348     		ldr	r0, .L18+4
 263 0008 FFF7FEFF 		bl	HAL_RTC_GetTime
 264              	.LVL8:
 154:Core/Src/USER/rtc.c **** }
 265              		.loc 2 154 1 is_stmt 0 view .LVU66
 266 000c 08BD     		pop	{r3, pc}
 267              	.L19:
 268 000e 00BF     		.align	2
 269              	.L18:
 270 0010 00000000 		.word	.LANCHOR1
 271 0014 00000000 		.word	.LANCHOR2
 272              		.cfi_endproc
 273              	.LFE72:
 275              		.section	.text.rtc_time_string,"ax",%progbits
 276              		.align	1
 277              		.global	rtc_time_string
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	rtc_time_string:
 283              	.LVL9:
 284              	.LFB73:
 155:Core/Src/USER/rtc.c **** 
 156:Core/Src/USER/rtc.c **** //rtc->tekstas
 157:Core/Src/USER/rtc.c **** void rtc_time_string(char * text)
 158:Core/Src/USER/rtc.c **** {
 285              		.loc 2 158 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		.loc 2 158 1 is_stmt 0 view .LVU68
 290 0000 38B5     		push	{r3, r4, r5, lr}
 291              	.LCFI5:
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 3, -16
 294              		.cfi_offset 4, -12
 295              		.cfi_offset 5, -8
 296              		.cfi_offset 14, -4
 297 0002 0446     		mov	r4, r0
 159:Core/Src/USER/rtc.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 298              		.loc 2 159 2 is_stmt 1 view .LVU69
 299 0004 1B4D     		ldr	r5, .L22
 300 0006 0022     		movs	r2, #0
 301 0008 2946     		mov	r1, r5
 302 000a 1B48     		ldr	r0, .L22+4
 303              	.LVL10:
 304              		.loc 2 159 2 is_stmt 0 view .LVU70
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 16


 305 000c FFF7FEFF 		bl	HAL_RTC_GetTime
 306              	.LVL11:
 160:Core/Src/USER/rtc.c **** 	text[0]=(currTime.Hours)/10+'0';
 307              		.loc 2 160 2 is_stmt 1 view .LVU71
 308              		.loc 2 160 19 is_stmt 0 view .LVU72
 309 0010 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 310              		.loc 2 160 29 view .LVU73
 311 0012 1A4B     		ldr	r3, .L22+8
 312 0014 A3FB0212 		umull	r1, r2, r3, r2
 313 0018 D208     		lsrs	r2, r2, #3
 314 001a 3032     		adds	r2, r2, #48
 315              		.loc 2 160 9 view .LVU74
 316 001c 2270     		strb	r2, [r4]
 161:Core/Src/USER/rtc.c **** 	text[1]=(currTime.Hours)%10+'0';
 317              		.loc 2 161 2 is_stmt 1 view .LVU75
 318              		.loc 2 161 19 is_stmt 0 view .LVU76
 319 001e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 320              		.loc 2 161 29 view .LVU77
 321 0020 A3FB0201 		umull	r0, r1, r3, r2
 322 0024 C908     		lsrs	r1, r1, #3
 323 0026 01EB8101 		add	r1, r1, r1, lsl #2
 324 002a A2EB4102 		sub	r2, r2, r1, lsl #1
 325 002e 3032     		adds	r2, r2, #48
 326              		.loc 2 161 9 view .LVU78
 327 0030 6270     		strb	r2, [r4, #1]
 162:Core/Src/USER/rtc.c **** 	text[2]=':';	
 328              		.loc 2 162 2 is_stmt 1 view .LVU79
 329              		.loc 2 162 9 is_stmt 0 view .LVU80
 330 0032 3A20     		movs	r0, #58
 331 0034 A070     		strb	r0, [r4, #2]
 163:Core/Src/USER/rtc.c **** 
 164:Core/Src/USER/rtc.c **** 	text[3]=(currTime.Minutes)/10+'0';
 332              		.loc 2 164 2 is_stmt 1 view .LVU81
 333              		.loc 2 164 19 is_stmt 0 view .LVU82
 334 0036 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 335              		.loc 2 164 31 view .LVU83
 336 0038 A3FB01C2 		umull	ip, r2, r3, r1
 337 003c D208     		lsrs	r2, r2, #3
 338 003e 02F1300C 		add	ip, r2, #48
 339              		.loc 2 164 9 view .LVU84
 340 0042 84F803C0 		strb	ip, [r4, #3]
 165:Core/Src/USER/rtc.c **** 	text[4]=(currTime.Minutes)%10+'0';
 341              		.loc 2 165 2 is_stmt 1 view .LVU85
 342              		.loc 2 165 31 is_stmt 0 view .LVU86
 343 0046 02EB8202 		add	r2, r2, r2, lsl #2
 344 004a A1EB4202 		sub	r2, r1, r2, lsl #1
 345 004e 3032     		adds	r2, r2, #48
 346              		.loc 2 165 9 view .LVU87
 347 0050 2271     		strb	r2, [r4, #4]
 166:Core/Src/USER/rtc.c **** 	text[5]=':';	
 348              		.loc 2 166 2 is_stmt 1 view .LVU88
 349              		.loc 2 166 9 is_stmt 0 view .LVU89
 350 0052 6071     		strb	r0, [r4, #5]
 167:Core/Src/USER/rtc.c **** 
 168:Core/Src/USER/rtc.c **** 	text[6]=(currTime.Seconds)/10+'0';
 351              		.loc 2 168 2 is_stmt 1 view .LVU90
 352              		.loc 2 168 19 is_stmt 0 view .LVU91
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 17


 353 0054 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 354              		.loc 2 168 31 view .LVU92
 355 0056 A3FB0213 		umull	r1, r3, r3, r2
 356 005a DB08     		lsrs	r3, r3, #3
 357 005c 03F13001 		add	r1, r3, #48
 358              		.loc 2 168 9 view .LVU93
 359 0060 A171     		strb	r1, [r4, #6]
 169:Core/Src/USER/rtc.c **** 	text[7]=(currTime.Seconds)%10+'0';
 360              		.loc 2 169 2 is_stmt 1 view .LVU94
 361              		.loc 2 169 31 is_stmt 0 view .LVU95
 362 0062 03EB8303 		add	r3, r3, r3, lsl #2
 363 0066 A2EB4303 		sub	r3, r2, r3, lsl #1
 364 006a 3033     		adds	r3, r3, #48
 365              		.loc 2 169 9 view .LVU96
 366 006c E371     		strb	r3, [r4, #7]
 170:Core/Src/USER/rtc.c **** 	text[8]=0;
 367              		.loc 2 170 2 is_stmt 1 view .LVU97
 368              		.loc 2 170 9 is_stmt 0 view .LVU98
 369 006e 0023     		movs	r3, #0
 370 0070 2372     		strb	r3, [r4, #8]
 171:Core/Src/USER/rtc.c **** }
 371              		.loc 2 171 1 view .LVU99
 372 0072 38BD     		pop	{r3, r4, r5, pc}
 373              	.LVL12:
 374              	.L23:
 375              		.loc 2 171 1 view .LVU100
 376              		.align	2
 377              	.L22:
 378 0074 00000000 		.word	.LANCHOR1
 379 0078 00000000 		.word	.LANCHOR2
 380 007c CDCCCCCC 		.word	-858993459
 381              		.cfi_endproc
 382              	.LFE73:
 384              		.section	.text.rtc_date_string,"ax",%progbits
 385              		.align	1
 386              		.global	rtc_date_string
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	rtc_date_string:
 392              	.LVL13:
 393              	.LFB74:
 172:Core/Src/USER/rtc.c **** void rtc_date_string(char * text)
 173:Core/Src/USER/rtc.c **** {
 394              		.loc 2 173 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 8
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		.loc 2 173 1 is_stmt 0 view .LVU102
 399 0000 10B5     		push	{r4, lr}
 400              	.LCFI6:
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 4, -8
 403              		.cfi_offset 14, -4
 404 0002 82B0     		sub	sp, sp, #8
 405              	.LCFI7:
 406              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 18


 407 0004 0446     		mov	r4, r0
 174:Core/Src/USER/rtc.c **** 	RTC_DateTypeDef dienos;
 408              		.loc 2 174 2 is_stmt 1 view .LVU103
 175:Core/Src/USER/rtc.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 409              		.loc 2 175 2 view .LVU104
 410 0006 0022     		movs	r2, #0
 411 0008 01A9     		add	r1, sp, #4
 412 000a 1B48     		ldr	r0, .L26
 413              	.LVL14:
 414              		.loc 2 175 2 is_stmt 0 view .LVU105
 415 000c FFF7FEFF 		bl	HAL_RTC_GetDate
 416              	.LVL15:
 176:Core/Src/USER/rtc.c **** 
 177:Core/Src/USER/rtc.c **** 	text[0]=(dienos.Year)/10+'0';
 417              		.loc 2 177 2 is_stmt 1 view .LVU106
 418              		.loc 2 177 17 is_stmt 0 view .LVU107
 419 0010 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 420              		.loc 2 177 26 view .LVU108
 421 0014 194B     		ldr	r3, .L26+4
 422 0016 A3FB0102 		umull	r0, r2, r3, r1
 423 001a D208     		lsrs	r2, r2, #3
 424 001c 02F13000 		add	r0, r2, #48
 425              		.loc 2 177 9 view .LVU109
 426 0020 2070     		strb	r0, [r4]
 178:Core/Src/USER/rtc.c **** 	text[1]=(dienos.Year)%10+'0';
 427              		.loc 2 178 2 is_stmt 1 view .LVU110
 428              		.loc 2 178 26 is_stmt 0 view .LVU111
 429 0022 02EB8202 		add	r2, r2, r2, lsl #2
 430 0026 A1EB4202 		sub	r2, r1, r2, lsl #1
 431 002a 3032     		adds	r2, r2, #48
 432              		.loc 2 178 9 view .LVU112
 433 002c 6270     		strb	r2, [r4, #1]
 179:Core/Src/USER/rtc.c **** 	text[2]='.';
 434              		.loc 2 179 2 is_stmt 1 view .LVU113
 435              		.loc 2 179 9 is_stmt 0 view .LVU114
 436 002e 2E20     		movs	r0, #46
 437 0030 A070     		strb	r0, [r4, #2]
 180:Core/Src/USER/rtc.c **** 	text[3]=(dienos.Month)/10+'0';
 438              		.loc 2 180 2 is_stmt 1 view .LVU115
 439              		.loc 2 180 17 is_stmt 0 view .LVU116
 440 0032 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 441              		.loc 2 180 27 view .LVU117
 442 0036 A3FB01C2 		umull	ip, r2, r3, r1
 443 003a D208     		lsrs	r2, r2, #3
 444 003c 02F1300C 		add	ip, r2, #48
 445              		.loc 2 180 9 view .LVU118
 446 0040 84F803C0 		strb	ip, [r4, #3]
 181:Core/Src/USER/rtc.c **** 	text[4]=(dienos.Month)%10+'0';
 447              		.loc 2 181 2 is_stmt 1 view .LVU119
 448              		.loc 2 181 27 is_stmt 0 view .LVU120
 449 0044 02EB8202 		add	r2, r2, r2, lsl #2
 450 0048 A1EB4202 		sub	r2, r1, r2, lsl #1
 451 004c 3032     		adds	r2, r2, #48
 452              		.loc 2 181 9 view .LVU121
 453 004e 2271     		strb	r2, [r4, #4]
 182:Core/Src/USER/rtc.c **** 	text[5]='.';
 454              		.loc 2 182 2 is_stmt 1 view .LVU122
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 19


 455              		.loc 2 182 9 is_stmt 0 view .LVU123
 456 0050 6071     		strb	r0, [r4, #5]
 183:Core/Src/USER/rtc.c **** 	text[6]=(dienos.Date)/10+'0';
 457              		.loc 2 183 2 is_stmt 1 view .LVU124
 458              		.loc 2 183 17 is_stmt 0 view .LVU125
 459 0052 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 460              		.loc 2 183 26 view .LVU126
 461 0056 A3FB0213 		umull	r1, r3, r3, r2
 462 005a DB08     		lsrs	r3, r3, #3
 463 005c 03F13001 		add	r1, r3, #48
 464              		.loc 2 183 9 view .LVU127
 465 0060 A171     		strb	r1, [r4, #6]
 184:Core/Src/USER/rtc.c **** 	text[7]=(dienos.Date)%10+'0';
 466              		.loc 2 184 2 is_stmt 1 view .LVU128
 467              		.loc 2 184 26 is_stmt 0 view .LVU129
 468 0062 03EB8303 		add	r3, r3, r3, lsl #2
 469 0066 A2EB4303 		sub	r3, r2, r3, lsl #1
 470 006a 3033     		adds	r3, r3, #48
 471              		.loc 2 184 9 view .LVU130
 472 006c E371     		strb	r3, [r4, #7]
 185:Core/Src/USER/rtc.c **** 	text[8]=0;
 473              		.loc 2 185 2 is_stmt 1 view .LVU131
 474              		.loc 2 185 9 is_stmt 0 view .LVU132
 475 006e 0023     		movs	r3, #0
 476 0070 2372     		strb	r3, [r4, #8]
 186:Core/Src/USER/rtc.c **** }
 477              		.loc 2 186 1 view .LVU133
 478 0072 02B0     		add	sp, sp, #8
 479              	.LCFI8:
 480              		.cfi_def_cfa_offset 8
 481              		@ sp needed
 482 0074 10BD     		pop	{r4, pc}
 483              	.LVL16:
 484              	.L27:
 485              		.loc 2 186 1 view .LVU134
 486 0076 00BF     		.align	2
 487              	.L26:
 488 0078 00000000 		.word	.LANCHOR2
 489 007c CDCCCCCC 		.word	-858993459
 490              		.cfi_endproc
 491              	.LFE74:
 493              		.section	.text.rtc_backup_date,"ax",%progbits
 494              		.align	1
 495              		.global	rtc_backup_date
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 500              	rtc_backup_date:
 501              	.LFB75:
 187:Core/Src/USER/rtc.c **** 
 188:Core/Src/USER/rtc.c **** void rtc_backup_date(void)
 189:Core/Src/USER/rtc.c **** {
 502              		.loc 2 189 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 8
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 20


 507              	.LCFI9:
 508              		.cfi_def_cfa_offset 12
 509              		.cfi_offset 4, -12
 510              		.cfi_offset 5, -8
 511              		.cfi_offset 14, -4
 512 0002 83B0     		sub	sp, sp, #12
 513              	.LCFI10:
 514              		.cfi_def_cfa_offset 24
 190:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 515              		.loc 2 190 1 view .LVU136
 191:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 516              		.loc 2 191 2 view .LVU137
 517              		.loc 2 191 5 is_stmt 0 view .LVU138
 518 0004 0121     		movs	r1, #1
 519 0006 1448     		ldr	r0, .L32
 520 0008 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 521              	.LVL17:
 522              		.loc 2 191 4 view .LVU139
 523 000c 45F25103 		movw	r3, #20561
 524 0010 9842     		cmp	r0, r3
 525 0012 01D0     		beq	.L31
 526              	.L28:
 192:Core/Src/USER/rtc.c **** 	{
 193:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 194:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR2, (uint16_t) (dienos.Year<<8) + dienos.Month);	
 196:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 197:Core/Src/USER/rtc.c **** 	}
 198:Core/Src/USER/rtc.c **** }
 527              		.loc 2 198 1 view .LVU140
 528 0014 03B0     		add	sp, sp, #12
 529              	.LCFI11:
 530              		.cfi_remember_state
 531              		.cfi_def_cfa_offset 12
 532              		@ sp needed
 533 0016 30BD     		pop	{r4, r5, pc}
 534              	.L31:
 535              	.LCFI12:
 536              		.cfi_restore_state
 193:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 537              		.loc 2 193 3 is_stmt 1 view .LVU141
 538 0018 0F4C     		ldr	r4, .L32
 539 001a 0022     		movs	r2, #0
 540 001c 01A9     		add	r1, sp, #4
 541 001e 2046     		mov	r0, r4
 542 0020 FFF7FEFF 		bl	HAL_RTC_GetDate
 543              	.LVL18:
 194:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR2, (uint16_t) (dienos.Year<<8) + dienos.Month);	
 544              		.loc 2 194 3 view .LVU142
 545 0024 0D4D     		ldr	r5, .L32+4
 546 0026 0022     		movs	r2, #0
 547 0028 2946     		mov	r1, r5
 548 002a 2046     		mov	r0, r4
 549 002c FFF7FEFF 		bl	HAL_RTC_GetTime
 550              	.LVL19:
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 551              		.loc 2 195 3 view .LVU143
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 21


 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 552              		.loc 2 195 61 is_stmt 0 view .LVU144
 553 0030 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 554              		.loc 2 195 79 view .LVU145
 555 0034 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 556              		.loc 2 195 3 view .LVU146
 557 0038 03EB0222 		add	r2, r3, r2, lsl #8
 558 003c 0221     		movs	r1, #2
 559 003e 2046     		mov	r0, r4
 560 0040 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 561              	.LVL20:
 196:Core/Src/USER/rtc.c **** 	}
 562              		.loc 2 196 3 is_stmt 1 view .LVU147
 196:Core/Src/USER/rtc.c **** 	}
 563              		.loc 2 196 61 is_stmt 0 view .LVU148
 564 0044 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 196:Core/Src/USER/rtc.c **** 	}
 565              		.loc 2 196 81 view .LVU149
 566 0048 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 196:Core/Src/USER/rtc.c **** 	}
 567              		.loc 2 196 3 view .LVU150
 568 004a 03EB0222 		add	r2, r3, r2, lsl #8
 569 004e 0321     		movs	r1, #3
 570 0050 2046     		mov	r0, r4
 571 0052 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 572              	.LVL21:
 573              		.loc 2 198 1 view .LVU151
 574 0056 DDE7     		b	.L28
 575              	.L33:
 576              		.align	2
 577              	.L32:
 578 0058 00000000 		.word	.LANCHOR2
 579 005c 00000000 		.word	.LANCHOR1
 580              		.cfi_endproc
 581              	.LFE75:
 583              		.section	.text.rtc_int_init,"ax",%progbits
 584              		.align	1
 585              		.global	rtc_int_init
 586              		.syntax unified
 587              		.thumb
 588              		.thumb_func
 590              	rtc_int_init:
 591              	.LFB77:
 199:Core/Src/USER/rtc.c **** 
 200:Core/Src/USER/rtc.c **** void rtc_check_screwd_calendar(void)
 201:Core/Src/USER/rtc.c **** {
 202:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 204:Core/Src/USER/rtc.c **** 	{
 205:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 206:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 208:Core/Src/USER/rtc.c **** 		
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 22


 211:Core/Src/USER/rtc.c **** 	
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 214:Core/Src/USER/rtc.c **** 			{
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 219:Core/Src/USER/rtc.c **** 			  {
 220:Core/Src/USER/rtc.c **** 				Error_Handler();
 221:Core/Src/USER/rtc.c **** 			  }
 222:Core/Src/USER/rtc.c **** 			 rtc_backup_date();
 223:Core/Src/USER/rtc.c **** 			}
 224:Core/Src/USER/rtc.c **** 	}
 225:Core/Src/USER/rtc.c **** }
 226:Core/Src/USER/rtc.c **** 
 227:Core/Src/USER/rtc.c **** 
 228:Core/Src/USER/rtc.c **** /* INT INT INT INT INT INT INT INT INT INT INT INT INT INT INT INT */
 229:Core/Src/USER/rtc.c **** 
 230:Core/Src/USER/rtc.c **** /* ijungti RTC pertraukimus */
 231:Core/Src/USER/rtc.c **** void rtc_int_init(void)
 232:Core/Src/USER/rtc.c **** {
 592              		.loc 2 232 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 233:Core/Src/USER/rtc.c **** 	__HAL_RTC_SECOND_ENABLE_IT(&hrtc,RTC_IT_SEC); //turn on RTC clock seconds interrupt
 597              		.loc 2 233 2 view .LVU153
 598 0000 034B     		ldr	r3, .L35
 599 0002 1A68     		ldr	r2, [r3]
 600 0004 1368     		ldr	r3, [r2]
 601 0006 43F00103 		orr	r3, r3, #1
 602 000a 1360     		str	r3, [r2]
 234:Core/Src/USER/rtc.c **** }
 603              		.loc 2 234 1 is_stmt 0 view .LVU154
 604 000c 7047     		bx	lr
 605              	.L36:
 606 000e 00BF     		.align	2
 607              	.L35:
 608 0010 00000000 		.word	.LANCHOR2
 609              		.cfi_endproc
 610              	.LFE77:
 612              		.section	.text.circle_reset,"ax",%progbits
 613              		.align	1
 614              		.global	circle_reset
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 619              	circle_reset:
 620              	.LVL22:
 621              	.LFB79:
 622              		.file 3 "Core/Src/USER/circular_buffer.c"
   1:Core/Src/USER/circular_buffer.c **** /* ********************************************* */
   2:Core/Src/USER/circular_buffer.c **** /* (c)2022 by www.vabolis.lt, Kaunas             */
   3:Core/Src/USER/circular_buffer.c **** /**
   4:Core/Src/USER/circular_buffer.c ****   **********************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 23


   5:Core/Src/USER/circular_buffer.c ****   * @file           : circular_buffer.c
   6:Core/Src/USER/circular_buffer.c ****   * @version        : 1.0
   7:Core/Src/USER/circular_buffer.c ****   * @brief          : circular buffer for uart/usb
   8:Core/Src/USER/circular_buffer.c **** **/  
   9:Core/Src/USER/circular_buffer.c **** /* ********************************************* */
  10:Core/Src/USER/circular_buffer.c **** 
  11:Core/Src/USER/circular_buffer.c **** #include "circular_buffer.h"
  12:Core/Src/USER/circular_buffer.c **** 
  13:Core/Src/USER/circular_buffer.c **** /* INSTRUKCIJA
  14:Core/Src/USER/circular_buffer.c **** #define BUFFER_SIZE 32
  15:Core/Src/USER/circular_buffer.c **** 
  16:Core/Src/USER/circular_buffer.c **** unsigned char testas[BUFFER_SIZE];
  17:Core/Src/USER/circular_buffer.c **** CCBuf cc; //struktura
  18:Core/Src/USER/circular_buffer.c **** //init
  19:Core/Src/USER/circular_buffer.c **** cc.buffer=testas;
  20:Core/Src/USER/circular_buffer.c **** circle_reset(&cc,BUFFER_SIZE);
  21:Core/Src/USER/circular_buffer.c **** 
  22:Core/Src/USER/circular_buffer.c **** //naudojimas
  23:Core/Src/USER/circular_buffer.c **** 
  24:Core/Src/USER/circular_buffer.c **** while(circle_available(&cc)>0) {a=circle_pull(&cc); naudoti duomenys}
  25:Core/Src/USER/circular_buffer.c **** 					
  26:Core/Src/USER/circular_buffer.c **** // uart callback
  27:Core/Src/USER/circular_buffer.c **** circle_push(&cc , baitinisbuferis); // push received byte to circular buffer
  28:Core/Src/USER/circular_buffer.c **** 					
  29:Core/Src/USER/circular_buffer.c **** 
  30:Core/Src/USER/circular_buffer.c **** ************* */
  31:Core/Src/USER/circular_buffer.c **** 
  32:Core/Src/USER/circular_buffer.c **** 
  33:Core/Src/USER/circular_buffer.c **** 
  34:Core/Src/USER/circular_buffer.c **** void circle_reset(CCBuf *c, size_t size)
  35:Core/Src/USER/circular_buffer.c **** {
 623              		.loc 3 35 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
  36:Core/Src/USER/circular_buffer.c **** 	c->head=0;
 628              		.loc 3 36 2 view .LVU156
 629              		.loc 3 36 9 is_stmt 0 view .LVU157
 630 0000 0023     		movs	r3, #0
 631 0002 4360     		str	r3, [r0, #4]
  37:Core/Src/USER/circular_buffer.c **** 	c->tail=0;
 632              		.loc 3 37 2 is_stmt 1 view .LVU158
 633              		.loc 3 37 9 is_stmt 0 view .LVU159
 634 0004 8360     		str	r3, [r0, #8]
  38:Core/Src/USER/circular_buffer.c **** 	c->max=size; //sizeof(c->buffer); <-- negauna sitos informacijos
 635              		.loc 3 38 2 is_stmt 1 view .LVU160
 636              		.loc 3 38 8 is_stmt 0 view .LVU161
 637 0006 0161     		str	r1, [r0, #16]
  39:Core/Src/USER/circular_buffer.c **** 	c->count=0;
 638              		.loc 3 39 2 is_stmt 1 view .LVU162
 639              		.loc 3 39 10 is_stmt 0 view .LVU163
 640 0008 C360     		str	r3, [r0, #12]
  40:Core/Src/USER/circular_buffer.c **** }
 641              		.loc 3 40 1 view .LVU164
 642 000a 7047     		bx	lr
 643              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 24


 644              	.LFE79:
 646              		.section	.text.circle_push,"ax",%progbits
 647              		.align	1
 648              		.global	circle_push
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 653              	circle_push:
 654              	.LVL23:
 655              	.LFB80:
  41:Core/Src/USER/circular_buffer.c **** 
  42:Core/Src/USER/circular_buffer.c **** void circle_push(CCBuf *c,unsigned char b)
  43:Core/Src/USER/circular_buffer.c **** {
 656              		.loc 3 43 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
  44:Core/Src/USER/circular_buffer.c **** 	c->buffer[c->head]=b;
 661              		.loc 3 44 2 view .LVU166
 662              		.loc 3 44 3 is_stmt 0 view .LVU167
 663 0000 0268     		ldr	r2, [r0]
 664              		.loc 3 44 13 view .LVU168
 665 0002 4368     		ldr	r3, [r0, #4]
 666              		.loc 3 44 20 view .LVU169
 667 0004 D154     		strb	r1, [r2, r3]
  45:Core/Src/USER/circular_buffer.c **** 	c->head++; if(c->head == c->max) {c->head=0;}
 668              		.loc 3 45 2 is_stmt 1 view .LVU170
 669              		.loc 3 45 3 is_stmt 0 view .LVU171
 670 0006 4368     		ldr	r3, [r0, #4]
 671              		.loc 3 45 9 view .LVU172
 672 0008 0133     		adds	r3, r3, #1
 673 000a 4360     		str	r3, [r0, #4]
 674              		.loc 3 45 13 is_stmt 1 view .LVU173
 675              		.loc 3 45 28 is_stmt 0 view .LVU174
 676 000c 0269     		ldr	r2, [r0, #16]
 677              		.loc 3 45 15 view .LVU175
 678 000e 9342     		cmp	r3, r2
 679 0010 03D0     		beq	.L40
 680              	.L39:
  46:Core/Src/USER/circular_buffer.c **** 	c->count++;
 681              		.loc 3 46 2 is_stmt 1 view .LVU176
 682              		.loc 3 46 3 is_stmt 0 view .LVU177
 683 0012 C368     		ldr	r3, [r0, #12]
 684              		.loc 3 46 10 view .LVU178
 685 0014 0133     		adds	r3, r3, #1
 686 0016 C360     		str	r3, [r0, #12]
  47:Core/Src/USER/circular_buffer.c **** 	//if(c->count == c->max) {c->count=c->max;} //error
  48:Core/Src/USER/circular_buffer.c **** }
 687              		.loc 3 48 1 view .LVU179
 688 0018 7047     		bx	lr
 689              	.L40:
  45:Core/Src/USER/circular_buffer.c **** 	c->count++;
 690              		.loc 3 45 36 is_stmt 1 discriminator 1 view .LVU180
  45:Core/Src/USER/circular_buffer.c **** 	c->count++;
 691              		.loc 3 45 43 is_stmt 0 discriminator 1 view .LVU181
 692 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 25


 693 001c 4360     		str	r3, [r0, #4]
 694 001e F8E7     		b	.L39
 695              		.cfi_endproc
 696              	.LFE80:
 698              		.section	.text.circle_pull,"ax",%progbits
 699              		.align	1
 700              		.global	circle_pull
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	circle_pull:
 706              	.LVL24:
 707              	.LFB81:
  49:Core/Src/USER/circular_buffer.c **** 
  50:Core/Src/USER/circular_buffer.c **** unsigned char circle_pull(CCBuf *c)
  51:Core/Src/USER/circular_buffer.c **** {
 708              		.loc 3 51 1 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 713              		.loc 3 51 1 is_stmt 0 view .LVU183
 714 0000 0346     		mov	r3, r0
  52:Core/Src/USER/circular_buffer.c **** unsigned char b;
 715              		.loc 3 52 1 is_stmt 1 view .LVU184
  53:Core/Src/USER/circular_buffer.c **** 	b=c->buffer[c->tail];
 716              		.loc 3 53 2 view .LVU185
 717              		.loc 3 53 5 is_stmt 0 view .LVU186
 718 0002 0168     		ldr	r1, [r0]
 719              		.loc 3 53 15 view .LVU187
 720 0004 8268     		ldr	r2, [r0, #8]
 721              		.loc 3 53 3 view .LVU188
 722 0006 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 723              	.LVL25:
  54:Core/Src/USER/circular_buffer.c **** 	c->tail++;
 724              		.loc 3 54 2 is_stmt 1 view .LVU189
 725              		.loc 3 54 9 is_stmt 0 view .LVU190
 726 0008 0132     		adds	r2, r2, #1
 727 000a 9A60     		str	r2, [r3, #8]
  55:Core/Src/USER/circular_buffer.c **** 	if(c->tail == c->max) {c->tail=0;}
 728              		.loc 3 55 2 is_stmt 1 view .LVU191
 729              		.loc 3 55 17 is_stmt 0 view .LVU192
 730 000c 1969     		ldr	r1, [r3, #16]
 731              		.loc 3 55 4 view .LVU193
 732 000e 8A42     		cmp	r2, r1
 733 0010 03D0     		beq	.L43
 734              	.L42:
  56:Core/Src/USER/circular_buffer.c **** 	c->count--;
 735              		.loc 3 56 2 is_stmt 1 view .LVU194
 736              		.loc 3 56 3 is_stmt 0 view .LVU195
 737 0012 DA68     		ldr	r2, [r3, #12]
 738              		.loc 3 56 10 view .LVU196
 739 0014 013A     		subs	r2, r2, #1
 740 0016 DA60     		str	r2, [r3, #12]
  57:Core/Src/USER/circular_buffer.c **** 	//if(c->count == c->max){c->count=0;} //error
  58:Core/Src/USER/circular_buffer.c **** return b;
 741              		.loc 3 58 1 is_stmt 1 view .LVU197
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 26


  59:Core/Src/USER/circular_buffer.c **** }
 742              		.loc 3 59 1 is_stmt 0 view .LVU198
 743 0018 7047     		bx	lr
 744              	.L43:
  55:Core/Src/USER/circular_buffer.c **** 	c->count--;
 745              		.loc 3 55 25 is_stmt 1 discriminator 1 view .LVU199
  55:Core/Src/USER/circular_buffer.c **** 	c->count--;
 746              		.loc 3 55 32 is_stmt 0 discriminator 1 view .LVU200
 747 001a 0022     		movs	r2, #0
 748 001c 9A60     		str	r2, [r3, #8]
 749 001e F8E7     		b	.L42
 750              		.cfi_endproc
 751              	.LFE81:
 753              		.section	.text.circle_push_buf,"ax",%progbits
 754              		.align	1
 755              		.global	circle_push_buf
 756              		.syntax unified
 757              		.thumb
 758              		.thumb_func
 760              	circle_push_buf:
 761              	.LVL26:
 762              	.LFB82:
  60:Core/Src/USER/circular_buffer.c **** 
  61:Core/Src/USER/circular_buffer.c **** void circle_push_buf(CCBuf *c, unsigned char *b, size_t len)
  62:Core/Src/USER/circular_buffer.c **** {
 763              		.loc 3 62 1 is_stmt 1 view -0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 0
 766              		@ frame_needed = 0, uses_anonymous_args = 0
 767              		.loc 3 62 1 is_stmt 0 view .LVU202
 768 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 769              	.LCFI13:
 770              		.cfi_def_cfa_offset 24
 771              		.cfi_offset 3, -24
 772              		.cfi_offset 4, -20
 773              		.cfi_offset 5, -16
 774              		.cfi_offset 6, -12
 775              		.cfi_offset 7, -8
 776              		.cfi_offset 14, -4
 777 0002 0746     		mov	r7, r0
 778 0004 0E46     		mov	r6, r1
 779 0006 1546     		mov	r5, r2
  63:Core/Src/USER/circular_buffer.c **** size_t i;
 780              		.loc 3 63 1 is_stmt 1 view .LVU203
  64:Core/Src/USER/circular_buffer.c **** for (i=0;i<len;i++){circle_push(c,b[i]);}
 781              		.loc 3 64 1 view .LVU204
 782              	.LVL27:
 783              		.loc 3 64 7 is_stmt 0 view .LVU205
 784 0008 0024     		movs	r4, #0
 785              		.loc 3 64 1 view .LVU206
 786 000a 04E0     		b	.L45
 787              	.LVL28:
 788              	.L46:
 789              		.loc 3 64 21 is_stmt 1 discriminator 3 view .LVU207
 790 000c 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 791 000e 3846     		mov	r0, r7
 792 0010 FFF7FEFF 		bl	circle_push
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 27


 793              	.LVL29:
 794              		.loc 3 64 16 discriminator 3 view .LVU208
 795              		.loc 3 64 17 is_stmt 0 discriminator 3 view .LVU209
 796 0014 0134     		adds	r4, r4, #1
 797              	.LVL30:
 798              	.L45:
 799              		.loc 3 64 10 is_stmt 1 discriminator 1 view .LVU210
 800              		.loc 3 64 1 is_stmt 0 discriminator 1 view .LVU211
 801 0016 AC42     		cmp	r4, r5
 802 0018 F8D3     		bcc	.L46
  65:Core/Src/USER/circular_buffer.c **** }
 803              		.loc 3 65 1 view .LVU212
 804 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 805              		.loc 3 65 1 view .LVU213
 806              		.cfi_endproc
 807              	.LFE82:
 809              		.section	.text.circle_available,"ax",%progbits
 810              		.align	1
 811              		.global	circle_available
 812              		.syntax unified
 813              		.thumb
 814              		.thumb_func
 816              	circle_available:
 817              	.LVL31:
 818              	.LFB83:
  66:Core/Src/USER/circular_buffer.c **** 
  67:Core/Src/USER/circular_buffer.c **** size_t circle_available(CCBuf *c)
  68:Core/Src/USER/circular_buffer.c **** {
 819              		.loc 3 68 1 is_stmt 1 view -0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 0
 822              		@ frame_needed = 0, uses_anonymous_args = 0
 823              		@ link register save eliminated.
  69:Core/Src/USER/circular_buffer.c **** return c->count;
 824              		.loc 3 69 1 view .LVU215
  70:Core/Src/USER/circular_buffer.c **** }
 825              		.loc 3 70 1 is_stmt 0 view .LVU216
 826 0000 C068     		ldr	r0, [r0, #12]
 827              	.LVL32:
 828              		.loc 3 70 1 view .LVU217
 829 0002 7047     		bx	lr
 830              		.cfi_endproc
 831              	.LFE83:
 833              		.section	.text.circle_free,"ax",%progbits
 834              		.align	1
 835              		.global	circle_free
 836              		.syntax unified
 837              		.thumb
 838              		.thumb_func
 840              	circle_free:
 841              	.LVL33:
 842              	.LFB84:
  71:Core/Src/USER/circular_buffer.c **** size_t circle_free(CCBuf *c)
  72:Core/Src/USER/circular_buffer.c **** {
 843              		.loc 3 72 1 is_stmt 1 view -0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 28


 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847              		@ link register save eliminated.
  73:Core/Src/USER/circular_buffer.c **** return c->max - c->count;
 848              		.loc 3 73 1 view .LVU219
 849              		.loc 3 73 9 is_stmt 0 view .LVU220
 850 0000 0269     		ldr	r2, [r0, #16]
 851              		.loc 3 73 18 view .LVU221
 852 0002 C068     		ldr	r0, [r0, #12]
 853              	.LVL34:
  74:Core/Src/USER/circular_buffer.c **** }
 854              		.loc 3 74 1 view .LVU222
 855 0004 101A     		subs	r0, r2, r0
 856 0006 7047     		bx	lr
 857              		.cfi_endproc
 858              	.LFE84:
 860              		.section	.text.user_usb_rx,"ax",%progbits
 861              		.align	1
 862              		.global	user_usb_rx
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 867              	user_usb_rx:
 868              	.LVL35:
 869              	.LFB85:
 870              		.file 4 "Core/Src/USER/user.c"
   1:Core/Src/USER/user.c **** /* ***********************************************
   2:Core/Src/USER/user.c **** **                                              **
   3:Core/Src/USER/user.c **** ** 40mA   RTC clock V1.0 www.vabolis.lt (c)2023 **
   4:Core/Src/USER/user.c **** **                                              **
   5:Core/Src/USER/user.c **** ************************************************ */
   6:Core/Src/USER/user.c **** 
   7:Core/Src/USER/user.c **** #include "user.h"
   8:Core/Src/USER/user.c **** 
   9:Core/Src/USER/user.c **** 
  10:Core/Src/USER/user.c **** #include "rtc.c"
  11:Core/Src/USER/user.c **** #include "circular_buffer.c"
  12:Core/Src/USER/user.c **** 
  13:Core/Src/USER/user.c **** extern IWDG_HandleTypeDef hiwdg;
  14:Core/Src/USER/user.c **** extern RTC_HandleTypeDef hrtc;
  15:Core/Src/USER/user.c **** extern TIM_HandleTypeDef htim1;
  16:Core/Src/USER/user.c **** 
  17:Core/Src/USER/user.c **** 
  18:Core/Src/USER/user.c **** #define BUFFER_SIZE 64
  19:Core/Src/USER/user.c **** unsigned char testas[BUFFER_SIZE];
  20:Core/Src/USER/user.c **** 
  21:Core/Src/USER/user.c **** CCBuf cc; //struktura
  22:Core/Src/USER/user.c **** 
  23:Core/Src/USER/user.c **** 
  24:Core/Src/USER/user.c **** 
  25:Core/Src/USER/user.c **** 
  26:Core/Src/USER/user.c **** void user_usb_rx(uint8_t* Buf, uint32_t *Len)
  27:Core/Src/USER/user.c **** {
 871              		.loc 4 27 1 is_stmt 1 view -0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		.loc 4 27 1 is_stmt 0 view .LVU224
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 29


 876 0000 70B5     		push	{r4, r5, r6, lr}
 877              	.LCFI14:
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883 0002 0646     		mov	r6, r0
 884 0004 0D46     		mov	r5, r1
  28:Core/Src/USER/user.c **** unsigned char i,a;
 885              		.loc 4 28 1 is_stmt 1 view .LVU225
  29:Core/Src/USER/user.c **** for (i=0;i<*Len;i++)
 886              		.loc 4 29 1 view .LVU226
 887              	.LVL36:
 888              		.loc 4 29 7 is_stmt 0 view .LVU227
 889 0006 0024     		movs	r4, #0
 890              		.loc 4 29 1 view .LVU228
 891 0008 01E0     		b	.L51
 892              	.LVL37:
 893              	.L52:
 894              		.loc 4 29 17 is_stmt 1 discriminator 2 view .LVU229
 895              		.loc 4 29 18 is_stmt 0 discriminator 2 view .LVU230
 896 000a 0134     		adds	r4, r4, #1
 897              	.LVL38:
 898              		.loc 4 29 18 discriminator 2 view .LVU231
 899 000c E4B2     		uxtb	r4, r4
 900              	.LVL39:
 901              	.L51:
 902              		.loc 4 29 10 is_stmt 1 discriminator 1 view .LVU232
 903              		.loc 4 29 12 is_stmt 0 discriminator 1 view .LVU233
 904 000e 2B68     		ldr	r3, [r5]
 905              		.loc 4 29 1 discriminator 1 view .LVU234
 906 0010 9C42     		cmp	r4, r3
 907 0012 06D2     		bcs	.L55
  30:Core/Src/USER/user.c **** 	{
  31:Core/Src/USER/user.c **** 		a=Buf[i];
 908              		.loc 4 31 3 is_stmt 1 view .LVU235
 909              		.loc 4 31 4 is_stmt 0 view .LVU236
 910 0014 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 911              	.LVL40:
  32:Core/Src/USER/user.c **** 		if (a>10) circle_push(&cc , a);
 912              		.loc 4 32 3 is_stmt 1 view .LVU237
 913              		.loc 4 32 6 is_stmt 0 view .LVU238
 914 0016 0A29     		cmp	r1, #10
 915 0018 F7D9     		bls	.L52
 916              		.loc 4 32 13 is_stmt 1 discriminator 1 view .LVU239
 917 001a 0248     		ldr	r0, .L56
 918 001c FFF7FEFF 		bl	circle_push
 919              	.LVL41:
 920              		.loc 4 32 13 is_stmt 0 discriminator 1 view .LVU240
 921 0020 F3E7     		b	.L52
 922              	.L55:
  33:Core/Src/USER/user.c **** 	}
  34:Core/Src/USER/user.c **** }
 923              		.loc 4 34 1 view .LVU241
 924 0022 70BD     		pop	{r4, r5, r6, pc}
 925              	.LVL42:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 30


 926              	.L57:
 927              		.loc 4 34 1 view .LVU242
 928              		.align	2
 929              	.L56:
 930 0024 00000000 		.word	.LANCHOR3
 931              		.cfi_endproc
 932              	.LFE85:
 934              		.section	.text.user_init,"ax",%progbits
 935              		.align	1
 936              		.global	user_init
 937              		.syntax unified
 938              		.thumb
 939              		.thumb_func
 941              	user_init:
 942              	.LFB86:
  35:Core/Src/USER/user.c **** 
  36:Core/Src/USER/user.c **** void user_init(void)
  37:Core/Src/USER/user.c **** {
 943              		.loc 4 37 1 is_stmt 1 view -0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 0
 946              		@ frame_needed = 0, uses_anonymous_args = 0
 947 0000 10B5     		push	{r4, lr}
 948              	.LCFI15:
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 4, -8
 951              		.cfi_offset 14, -4
  38:Core/Src/USER/user.c **** 	cc.buffer=testas;
 952              		.loc 4 38 2 view .LVU244
 953              		.loc 4 38 11 is_stmt 0 view .LVU245
 954 0002 0848     		ldr	r0, .L60
 955 0004 084B     		ldr	r3, .L60+4
 956 0006 0360     		str	r3, [r0]
  39:Core/Src/USER/user.c **** 	circle_reset(&cc,BUFFER_SIZE);			//init circle buffer
 957              		.loc 4 39 2 is_stmt 1 view .LVU246
 958 0008 4021     		movs	r1, #64
 959 000a FFF7FEFF 		bl	circle_reset
 960              	.LVL43:
  40:Core/Src/USER/user.c **** 	rtc_int_init();
 961              		.loc 4 40 2 view .LVU247
 962 000e FFF7FEFF 		bl	rtc_int_init
 963              	.LVL44:
  41:Core/Src/USER/user.c **** 	
  42:Core/Src/USER/user.c **** 	HAL_TIM_Base_Start_IT(&htim1);
 964              		.loc 4 42 2 view .LVU248
 965 0012 064C     		ldr	r4, .L60+8
 966 0014 2046     		mov	r0, r4
 967 0016 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 968              	.LVL45:
  43:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,55*255);
 969              		.loc 4 43 1 view .LVU249
 970 001a 2368     		ldr	r3, [r4]
 971 001c 43F2C962 		movw	r2, #14025
 972 0020 5A63     		str	r2, [r3, #52]
  44:Core/Src/USER/user.c **** 	//HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10); // du nuliai nes F1 nera. paskutinis- skaicius 0-7F, tik
  45:Core/Src/USER/user.c **** }
 973              		.loc 4 45 1 is_stmt 0 view .LVU250
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 31


 974 0022 10BD     		pop	{r4, pc}
 975              	.L61:
 976              		.align	2
 977              	.L60:
 978 0024 00000000 		.word	.LANCHOR3
 979 0028 00000000 		.word	.LANCHOR4
 980 002c 00000000 		.word	.LANCHOR5
 981              		.cfi_endproc
 982              	.LFE86:
 984              		.section	.text.user_seconds_job,"ax",%progbits
 985              		.align	1
 986              		.global	user_seconds_job
 987              		.syntax unified
 988              		.thumb
 989              		.thumb_func
 991              	user_seconds_job:
 992              	.LFB89:
  46:Core/Src/USER/user.c **** 
  47:Core/Src/USER/user.c **** 
  48:Core/Src/USER/user.c **** 
  49:Core/Src/USER/user.c **** void commandcom(char * txt) // network (UART,USB) command interpreter
  50:Core/Src/USER/user.c **** {
  51:Core/Src/USER/user.c **** 
  52:Core/Src/USER/user.c **** if (txt[0] !='A' || txt[1]!='T') return;
  53:Core/Src/USER/user.c **** 
  54:Core/Src/USER/user.c **** 	switch(txt[2])
  55:Core/Src/USER/user.c **** 	{
  56:Core/Src/USER/user.c **** 		case 'T':
  57:Core/Src/USER/user.c **** 			rtc_set_time_text(txt+3);
  58:Core/Src/USER/user.c **** 		break;
  59:Core/Src/USER/user.c **** 		case 'D':
  60:Core/Src/USER/user.c **** 			rtc_set_date_text(txt+3);		
  61:Core/Src/USER/user.c **** 		break;
  62:Core/Src/USER/user.c **** 		case 'I':
  63:Core/Src/USER/user.c **** 			CDC_Transmit_FS((uint8_t*) "9H CLOCK\r\n(c)2023 Vabolis.lt\r\n",33);
  64:Core/Src/USER/user.c **** 		break;
  65:Core/Src/USER/user.c **** 		case 'A':
  66:Core/Src/USER/user.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,55*255);
  67:Core/Src/USER/user.c **** 		break;
  68:Core/Src/USER/user.c **** 	}
  69:Core/Src/USER/user.c **** }
  70:Core/Src/USER/user.c **** 
  71:Core/Src/USER/user.c **** 
  72:Core/Src/USER/user.c **** void user_loop(void)
  73:Core/Src/USER/user.c **** {
  74:Core/Src/USER/user.c **** char a;
  75:Core/Src/USER/user.c **** char txt[32];
  76:Core/Src/USER/user.c **** unsigned char txtp=0;
  77:Core/Src/USER/user.c **** 
  78:Core/Src/USER/user.c **** while(1)
  79:Core/Src/USER/user.c **** 	{
  80:Core/Src/USER/user.c **** 	HAL_IWDG_Refresh(&hiwdg); //watchdogas
  81:Core/Src/USER/user.c **** 	while(circle_available(&cc)>0) 
  82:Core/Src/USER/user.c **** 		{
  83:Core/Src/USER/user.c **** 			a=circle_pull(&cc);
  84:Core/Src/USER/user.c **** 			
  85:Core/Src/USER/user.c **** 			if (a>=' ' && a<='z')
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 32


  86:Core/Src/USER/user.c **** 			{
  87:Core/Src/USER/user.c **** 				txt[txtp]=a;
  88:Core/Src/USER/user.c **** 				txtp++;
  89:Core/Src/USER/user.c **** 				txt[txtp]=0;
  90:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
  91:Core/Src/USER/user.c **** 			}
  92:Core/Src/USER/user.c **** 			else if (a<' ')
  93:Core/Src/USER/user.c **** 			{
  94:Core/Src/USER/user.c **** 				if (txtp>2)commandcom(txt);
  95:Core/Src/USER/user.c **** 				txt[0]=0;
  96:Core/Src/USER/user.c **** 				txtp=0;
  97:Core/Src/USER/user.c **** 			}
  98:Core/Src/USER/user.c **** 		}
  99:Core/Src/USER/user.c **** 	}
 100:Core/Src/USER/user.c **** } /* be isejimo is loop! */
 101:Core/Src/USER/user.c **** 
 102:Core/Src/USER/user.c **** 
 103:Core/Src/USER/user.c **** 
 104:Core/Src/USER/user.c **** void user_seconds_job(void)
 105:Core/Src/USER/user.c **** {
 993              		.loc 4 105 1 is_stmt 1 view -0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997 0000 08B5     		push	{r3, lr}
 998              	.LCFI16:
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 3, -8
 1001              		.cfi_offset 14, -4
 106:Core/Src/USER/user.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 1002              		.loc 4 106 2 view .LVU252
 1003 0002 0022     		movs	r2, #0
 1004 0004 0449     		ldr	r1, .L64
 1005 0006 0548     		ldr	r0, .L64+4
 1006 0008 FFF7FEFF 		bl	HAL_RTC_GetTime
 1007              	.LVL46:
 107:Core/Src/USER/user.c **** 
 108:Core/Src/USER/user.c **** 	HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 1008              		.loc 4 108 2 view .LVU253
 1009 000c 0121     		movs	r1, #1
 1010 000e 0448     		ldr	r0, .L64+8
 1011 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1012              	.LVL47:
 109:Core/Src/USER/user.c **** 
 110:Core/Src/USER/user.c **** }
 1013              		.loc 4 110 1 is_stmt 0 view .LVU254
 1014 0014 08BD     		pop	{r3, pc}
 1015              	.L65:
 1016 0016 00BF     		.align	2
 1017              	.L64:
 1018 0018 00000000 		.word	.LANCHOR1
 1019 001c 00000000 		.word	.LANCHOR2
 1020 0020 00080140 		.word	1073809408
 1021              		.cfi_endproc
 1022              	.LFE89:
 1024              		.section	.text.HAL_RTCEx_RTCEventCallback,"ax",%progbits
 1025              		.align	1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 33


 1026              		.global	HAL_RTCEx_RTCEventCallback
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1031              	HAL_RTCEx_RTCEventCallback:
 1032              	.LVL48:
 1033              	.LFB78:
 235:Core/Src/USER/rtc.c **** 
 236:Core/Src/USER/rtc.c **** 
 237:Core/Src/USER/rtc.c **** /**
 238:Core/Src/USER/rtc.c ****   * @brief  Second event callback.
 239:Core/Src/USER/rtc.c **** **/
 240:Core/Src/USER/rtc.c **** /* kas sekunde, turi buti ijungtas INT */
 241:Core/Src/USER/rtc.c **** void HAL_RTCEx_RTCEventCallback(RTC_HandleTypeDef *hrtc)
 242:Core/Src/USER/rtc.c **** {
 1034              		.loc 2 242 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              		.loc 2 242 1 is_stmt 0 view .LVU256
 1039 0000 08B5     		push	{r3, lr}
 1040              	.LCFI17:
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 243:Core/Src/USER/rtc.c **** 	user_seconds_job();
 1044              		.loc 2 243 2 is_stmt 1 view .LVU257
 1045 0002 FFF7FEFF 		bl	user_seconds_job
 1046              	.LVL49:
 244:Core/Src/USER/rtc.c **** 	//if(LastHour != currTime.Hours) {rtc_backup_date(); LastHour=currTime.Hours;}
 245:Core/Src/USER/rtc.c **** }...
 1047              		.loc 2 245 1 is_stmt 0 view .LVU258
 1048 0006 08BD     		pop	{r3, pc}
 1049              		.cfi_endproc
 1050              	.LFE78:
 1052              		.section	.text.Error_Handler,"ax",%progbits
 1053              		.align	1
 1054              		.global	Error_Handler
 1055              		.syntax unified
 1056              		.thumb
 1057              		.thumb_func
 1059              	Error_Handler:
 1060              	.LFB96:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 388:Core/Src/main.c **** 
 389:Core/Src/main.c **** /* USER CODE END 4 */
 390:Core/Src/main.c **** 
 391:Core/Src/main.c **** /**
 392:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 393:Core/Src/main.c ****   * @retval None
 394:Core/Src/main.c ****   */
 395:Core/Src/main.c **** void Error_Handler(void)
 396:Core/Src/main.c **** {
 1061              		.loc 1 396 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ Volatile: function does not return.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 34


 1064              		@ args = 0, pretend = 0, frame = 0
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
 397:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 398:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 399:Core/Src/main.c ****   __disable_irq();
 1067              		.loc 1 399 3 view .LVU260
 1068              	.LBB6:
 1069              	.LBI6:
 1070              		.file 5 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 35


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 36


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1071              		.loc 5 140 27 view .LVU261
 1072              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1073              		.loc 5 142 3 view .LVU262
 1074              		.syntax unified
 1075              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1076 0000 72B6     		cpsid i
 1077              	@ 0 "" 2
 1078              		.thumb
 1079              		.syntax unified
 1080              	.L69:
 1081              	.LBE7:
 1082              	.LBE6:
 400:Core/Src/main.c ****   while (1)
 1083              		.loc 1 400 3 discriminator 1 view .LVU263
 401:Core/Src/main.c ****   {
 402:Core/Src/main.c ****   }
 1084              		.loc 1 402 3 discriminator 1 view .LVU264
 400:Core/Src/main.c ****   while (1)
 1085              		.loc 1 400 9 discriminator 1 view .LVU265
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 37


 1086 0002 FEE7     		b	.L69
 1087              		.cfi_endproc
 1088              	.LFE96:
 1090              		.section	.text.rtc_set_date_text,"ax",%progbits
 1091              		.align	1
 1092              		.global	rtc_set_date_text
 1093              		.syntax unified
 1094              		.thumb
 1095              		.thumb_func
 1097              	rtc_set_date_text:
 1098              	.LVL50:
 1099              	.LFB70:
  95:Core/Src/USER/rtc.c **** {
 1100              		.loc 2 95 1 view -0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 8
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
  95:Core/Src/USER/rtc.c **** {
 1104              		.loc 2 95 1 is_stmt 0 view .LVU267
 1105 0000 10B5     		push	{r4, lr}
 1106              	.LCFI18:
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 4, -8
 1109              		.cfi_offset 14, -4
 1110 0002 82B0     		sub	sp, sp, #8
 1111              	.LCFI19:
 1112              		.cfi_def_cfa_offset 16
 1113 0004 0446     		mov	r4, r0
  96:Core/Src/USER/rtc.c **** filter_string(Buf);
 1114              		.loc 2 96 1 is_stmt 1 view .LVU268
 1115 0006 FFF7FEFF 		bl	filter_string
 1116              	.LVL51:
  99:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 1117              		.loc 2 99 1 view .LVU269
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 1118              		.loc 2 101 1 view .LVU270
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 1119              		.loc 2 101 4 is_stmt 0 view .LVU271
 1120 000a 2046     		mov	r0, r4
 1121 000c FFF7FEFF 		bl	strlen
 1122              	.LVL52:
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 1123              		.loc 2 101 3 view .LVU272
 1124 0010 0728     		cmp	r0, #7
 1125 0012 01D8     		bhi	.L75
 1126              	.L70:
 119:Core/Src/USER/rtc.c **** }
 1127              		.loc 2 119 1 view .LVU273
 1128 0014 02B0     		add	sp, sp, #8
 1129              	.LCFI20:
 1130              		.cfi_remember_state
 1131              		.cfi_def_cfa_offset 8
 1132              		@ sp needed
 1133 0016 10BD     		pop	{r4, pc}
 1134              	.LVL53:
 1135              	.L75:
 1136              	.LCFI21:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 38


 1137              		.cfi_restore_state
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 1138              		.loc 2 102 2 is_stmt 1 view .LVU274
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 1139              		.loc 2 102 7 is_stmt 0 view .LVU275
 1140 0018 2E23     		movs	r3, #46
 1141 001a ADF80030 		strh	r3, [sp]	@ movhi
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 1142              		.loc 2 104 2 is_stmt 1 view .LVU276
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 1143              		.loc 2 104 14 is_stmt 0 view .LVU277
 1144 001e 6946     		mov	r1, sp
 1145 0020 2046     		mov	r0, r4
 1146 0022 FFF7FEFF 		bl	strtok
 1147              	.LVL54:
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 1148              		.loc 2 105 2 is_stmt 1 view .LVU278
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 1149              		.loc 2 105 14 is_stmt 0 view .LVU279
 1150 0026 FFF7FEFF 		bl	atoi
 1151              	.LVL55:
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 1152              		.loc 2 105 13 view .LVU280
 1153 002a 8DF80700 		strb	r0, [sp, #7]
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1154              		.loc 2 107 2 is_stmt 1 view .LVU281
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1155              		.loc 2 107 8 is_stmt 0 view .LVU282
 1156 002e 6946     		mov	r1, sp
 1157 0030 0020     		movs	r0, #0
 1158 0032 FFF7FEFF 		bl	strtok
 1159              	.LVL56:
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 1160              		.loc 2 108 2 is_stmt 1 view .LVU283
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 1161              		.loc 2 108 15 is_stmt 0 view .LVU284
 1162 0036 FFF7FEFF 		bl	atoi
 1163              	.LVL57:
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 1164              		.loc 2 108 14 view .LVU285
 1165 003a 8DF80500 		strb	r0, [sp, #5]
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1166              		.loc 2 110 2 is_stmt 1 view .LVU286
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1167              		.loc 2 110 8 is_stmt 0 view .LVU287
 1168 003e 6946     		mov	r1, sp
 1169 0040 0020     		movs	r0, #0
 1170 0042 FFF7FEFF 		bl	strtok
 1171              	.LVL58:
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 1172              		.loc 2 111 2 is_stmt 1 view .LVU288
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 1173              		.loc 2 111 14 is_stmt 0 view .LVU289
 1174 0046 FFF7FEFF 		bl	atoi
 1175              	.LVL59:
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 1176              		.loc 2 111 13 view .LVU290
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 39


 1177 004a 8DF80600 		strb	r0, [sp, #6]
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 1178              		.loc 2 113 2 is_stmt 1 view .LVU291
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 1179              		.loc 2 113 6 is_stmt 0 view .LVU292
 1180 004e 0022     		movs	r2, #0
 1181 0050 01A9     		add	r1, sp, #4
 1182 0052 0448     		ldr	r0, .L77
 1183 0054 FFF7FEFF 		bl	HAL_RTC_SetDate
 1184              	.LVL60:
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 1185              		.loc 2 113 5 view .LVU293
 1186 0058 10B9     		cbnz	r0, .L76
 118:Core/Src/USER/rtc.c ****   rtc_backup_date();
 1187              		.loc 2 118 3 is_stmt 1 view .LVU294
 1188 005a FFF7FEFF 		bl	rtc_backup_date
 1189              	.LVL61:
 1190 005e D9E7     		b	.L70
 1191              	.L76:
 115:Core/Src/USER/rtc.c ****     Error_Handler();
 1192              		.loc 2 115 5 view .LVU295
 1193 0060 FFF7FEFF 		bl	Error_Handler
 1194              	.LVL62:
 1195              	.L78:
 1196              		.align	2
 1197              	.L77:
 1198 0064 00000000 		.word	.LANCHOR2
 1199              		.cfi_endproc
 1200              	.LFE70:
 1202              		.section	.text.rtc_set_time_text,"ax",%progbits
 1203              		.align	1
 1204              		.global	rtc_set_time_text
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1209              	rtc_set_time_text:
 1210              	.LVL63:
 1211              	.LFB71:
 123:Core/Src/USER/rtc.c **** {
 1212              		.loc 2 123 1 view -0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 8
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Core/Src/USER/rtc.c **** {
 1216              		.loc 2 123 1 is_stmt 0 view .LVU297
 1217 0000 10B5     		push	{r4, lr}
 1218              	.LCFI22:
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 4, -8
 1221              		.cfi_offset 14, -4
 1222 0002 82B0     		sub	sp, sp, #8
 1223              	.LCFI23:
 1224              		.cfi_def_cfa_offset 16
 1225 0004 0446     		mov	r4, r0
 128:Core/Src/USER/rtc.c **** filter_string(Buf);
 1226              		.loc 2 128 1 is_stmt 1 view .LVU298
 1227 0006 FFF7FEFF 		bl	filter_string
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 40


 1228              	.LVL64:
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 1229              		.loc 2 130 1 view .LVU299
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 1230              		.loc 2 130 4 is_stmt 0 view .LVU300
 1231 000a 2046     		mov	r0, r4
 1232 000c FFF7FEFF 		bl	strlen
 1233              	.LVL65:
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 1234              		.loc 2 130 3 view .LVU301
 1235 0010 0728     		cmp	r0, #7
 1236 0012 01D8     		bhi	.L84
 1237              	.LVL66:
 1238              	.L79:
 148:Core/Src/USER/rtc.c **** }
 1239              		.loc 2 148 1 view .LVU302
 1240 0014 02B0     		add	sp, sp, #8
 1241              	.LCFI24:
 1242              		.cfi_remember_state
 1243              		.cfi_def_cfa_offset 8
 1244              		@ sp needed
 1245 0016 10BD     		pop	{r4, pc}
 1246              	.LVL67:
 1247              	.L84:
 1248              	.LCFI25:
 1249              		.cfi_restore_state
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 1250              		.loc 2 132 2 is_stmt 1 view .LVU303
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 1251              		.loc 2 132 7 is_stmt 0 view .LVU304
 1252 0018 3A23     		movs	r3, #58
 1253 001a ADF80430 		strh	r3, [sp, #4]	@ movhi
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 1254              		.loc 2 134 2 is_stmt 1 view .LVU305
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 1255              		.loc 2 134 14 is_stmt 0 view .LVU306
 1256 001e 01A9     		add	r1, sp, #4
 1257 0020 2046     		mov	r0, r4
 1258 0022 FFF7FEFF 		bl	strtok
 1259              	.LVL68:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 1260              		.loc 2 135 2 is_stmt 1 view .LVU307
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 1261              		.loc 2 135 17 is_stmt 0 view .LVU308
 1262 0026 FFF7FEFF 		bl	atoi
 1263              	.LVL69:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 1264              		.loc 2 135 16 view .LVU309
 1265 002a 0C4C     		ldr	r4, .L85
 1266              	.LVL70:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 1267              		.loc 2 135 16 view .LVU310
 1268 002c 2070     		strb	r0, [r4]
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1269              		.loc 2 137 2 is_stmt 1 view .LVU311
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1270              		.loc 2 137 8 is_stmt 0 view .LVU312
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 41


 1271 002e 01A9     		add	r1, sp, #4
 1272 0030 0020     		movs	r0, #0
 1273 0032 FFF7FEFF 		bl	strtok
 1274              	.LVL71:
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 1275              		.loc 2 138 2 is_stmt 1 view .LVU313
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 1276              		.loc 2 138 19 is_stmt 0 view .LVU314
 1277 0036 FFF7FEFF 		bl	atoi
 1278              	.LVL72:
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 1279              		.loc 2 138 18 view .LVU315
 1280 003a 6070     		strb	r0, [r4, #1]
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1281              		.loc 2 140 2 is_stmt 1 view .LVU316
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 1282              		.loc 2 140 8 is_stmt 0 view .LVU317
 1283 003c 01A9     		add	r1, sp, #4
 1284 003e 0020     		movs	r0, #0
 1285 0040 FFF7FEFF 		bl	strtok
 1286              	.LVL73:
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 1287              		.loc 2 141 2 is_stmt 1 view .LVU318
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 1288              		.loc 2 141 19 is_stmt 0 view .LVU319
 1289 0044 FFF7FEFF 		bl	atoi
 1290              	.LVL74:
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 1291              		.loc 2 141 18 view .LVU320
 1292 0048 A070     		strb	r0, [r4, #2]
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 1293              		.loc 2 143 2 is_stmt 1 view .LVU321
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 1294              		.loc 2 143 6 is_stmt 0 view .LVU322
 1295 004a 0022     		movs	r2, #0
 1296 004c 2146     		mov	r1, r4
 1297 004e 0448     		ldr	r0, .L85+4
 1298 0050 FFF7FEFF 		bl	HAL_RTC_SetTime
 1299              	.LVL75:
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 1300              		.loc 2 143 5 view .LVU323
 1301 0054 0028     		cmp	r0, #0
 1302 0056 DDD0     		beq	.L79
 145:Core/Src/USER/rtc.c ****     Error_Handler();
 1303              		.loc 2 145 5 is_stmt 1 view .LVU324
 1304 0058 FFF7FEFF 		bl	Error_Handler
 1305              	.LVL76:
 1306              	.L86:
 1307              		.align	2
 1308              	.L85:
 1309 005c 00000000 		.word	.LANCHOR1
 1310 0060 00000000 		.word	.LANCHOR2
 1311              		.cfi_endproc
 1312              	.LFE71:
 1314              		.section	.rodata.commandcom.str1.4,"aMS",%progbits,1
 1315              		.align	2
 1316              	.LC0:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 42


 1317 0000 39482043 		.ascii	"9H CLOCK\015\012(c)2023 Vabolis.lt\015\012\000"
 1317      4C4F434B 
 1317      0D0A2863 
 1317      29323032 
 1317      33205661 
 1318              		.section	.text.commandcom,"ax",%progbits
 1319              		.align	1
 1320              		.global	commandcom
 1321              		.syntax unified
 1322              		.thumb
 1323              		.thumb_func
 1325              	commandcom:
 1326              	.LVL77:
 1327              	.LFB87:
  50:Core/Src/USER/user.c **** 
 1328              		.loc 4 50 1 view -0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
  50:Core/Src/USER/user.c **** 
 1332              		.loc 4 50 1 is_stmt 0 view .LVU326
 1333 0000 08B5     		push	{r3, lr}
 1334              	.LCFI26:
 1335              		.cfi_def_cfa_offset 8
 1336              		.cfi_offset 3, -8
 1337              		.cfi_offset 14, -4
  52:Core/Src/USER/user.c **** 
 1338              		.loc 4 52 1 is_stmt 1 view .LVU327
  52:Core/Src/USER/user.c **** 
 1339              		.loc 4 52 8 is_stmt 0 view .LVU328
 1340 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  52:Core/Src/USER/user.c **** 
 1341              		.loc 4 52 4 view .LVU329
 1342 0004 412B     		cmp	r3, #65
 1343 0006 15D1     		bne	.L87
  52:Core/Src/USER/user.c **** 
 1344              		.loc 4 52 24 discriminator 2 view .LVU330
 1345 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  52:Core/Src/USER/user.c **** 
 1346              		.loc 4 52 18 discriminator 2 view .LVU331
 1347 000a 542B     		cmp	r3, #84
 1348 000c 12D1     		bne	.L87
  54:Core/Src/USER/user.c **** 	{
 1349              		.loc 4 54 2 is_stmt 1 view .LVU332
  54:Core/Src/USER/user.c **** 	{
 1350              		.loc 4 54 12 is_stmt 0 view .LVU333
 1351 000e 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  54:Core/Src/USER/user.c **** 	{
 1352              		.loc 4 54 2 view .LVU334
 1353 0010 413B     		subs	r3, r3, #65
 1354 0012 132B     		cmp	r3, #19
 1355 0014 0ED8     		bhi	.L87
 1356 0016 DFE803F0 		tbb	[pc, r3]
 1357              	.L90:
 1358 001a 17       		.byte	(.L93-.L90)/2
 1359 001b 0D       		.byte	(.L87-.L90)/2
 1360 001c 0D       		.byte	(.L87-.L90)/2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 43


 1361 001d 0E       		.byte	(.L92-.L90)/2
 1362 001e 0D       		.byte	(.L87-.L90)/2
 1363 001f 0D       		.byte	(.L87-.L90)/2
 1364 0020 0D       		.byte	(.L87-.L90)/2
 1365 0021 0D       		.byte	(.L87-.L90)/2
 1366 0022 12       		.byte	(.L91-.L90)/2
 1367 0023 0D       		.byte	(.L87-.L90)/2
 1368 0024 0D       		.byte	(.L87-.L90)/2
 1369 0025 0D       		.byte	(.L87-.L90)/2
 1370 0026 0D       		.byte	(.L87-.L90)/2
 1371 0027 0D       		.byte	(.L87-.L90)/2
 1372 0028 0D       		.byte	(.L87-.L90)/2
 1373 0029 0D       		.byte	(.L87-.L90)/2
 1374 002a 0D       		.byte	(.L87-.L90)/2
 1375 002b 0D       		.byte	(.L87-.L90)/2
 1376 002c 0D       		.byte	(.L87-.L90)/2
 1377 002d 0A       		.byte	(.L89-.L90)/2
 1378              		.p2align 1
 1379              	.L89:
  57:Core/Src/USER/user.c **** 		break;
 1380              		.loc 4 57 4 is_stmt 1 view .LVU335
 1381 002e 0330     		adds	r0, r0, #3
 1382              	.LVL78:
  57:Core/Src/USER/user.c **** 		break;
 1383              		.loc 4 57 4 is_stmt 0 view .LVU336
 1384 0030 FFF7FEFF 		bl	rtc_set_time_text
 1385              	.LVL79:
  58:Core/Src/USER/user.c **** 		case 'D':
 1386              		.loc 4 58 3 is_stmt 1 view .LVU337
 1387              	.L87:
  69:Core/Src/USER/user.c **** 
 1388              		.loc 4 69 1 is_stmt 0 view .LVU338
 1389 0034 08BD     		pop	{r3, pc}
 1390              	.LVL80:
 1391              	.L92:
  60:Core/Src/USER/user.c **** 		break;
 1392              		.loc 4 60 4 is_stmt 1 view .LVU339
 1393 0036 0330     		adds	r0, r0, #3
 1394              	.LVL81:
  60:Core/Src/USER/user.c **** 		break;
 1395              		.loc 4 60 4 is_stmt 0 view .LVU340
 1396 0038 FFF7FEFF 		bl	rtc_set_date_text
 1397              	.LVL82:
  61:Core/Src/USER/user.c **** 		case 'I':
 1398              		.loc 4 61 3 is_stmt 1 view .LVU341
 1399 003c FAE7     		b	.L87
 1400              	.LVL83:
 1401              	.L91:
  63:Core/Src/USER/user.c **** 		break;
 1402              		.loc 4 63 4 view .LVU342
 1403 003e 2121     		movs	r1, #33
 1404 0040 0448     		ldr	r0, .L95
 1405              	.LVL84:
  63:Core/Src/USER/user.c **** 		break;
 1406              		.loc 4 63 4 is_stmt 0 view .LVU343
 1407 0042 FFF7FEFF 		bl	CDC_Transmit_FS
 1408              	.LVL85:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 44


  64:Core/Src/USER/user.c **** 		case 'A':
 1409              		.loc 4 64 3 is_stmt 1 view .LVU344
 1410 0046 F5E7     		b	.L87
 1411              	.LVL86:
 1412              	.L93:
  66:Core/Src/USER/user.c **** 		break;
 1413              		.loc 4 66 4 view .LVU345
 1414 0048 034B     		ldr	r3, .L95+4
 1415 004a 1B68     		ldr	r3, [r3]
 1416 004c 43F2C962 		movw	r2, #14025
 1417 0050 5A63     		str	r2, [r3, #52]
  67:Core/Src/USER/user.c **** 	}
 1418              		.loc 4 67 3 view .LVU346
 1419 0052 EFE7     		b	.L87
 1420              	.L96:
 1421              		.align	2
 1422              	.L95:
 1423 0054 00000000 		.word	.LC0
 1424 0058 00000000 		.word	.LANCHOR5
 1425              		.cfi_endproc
 1426              	.LFE87:
 1428              		.section	.text.user_loop,"ax",%progbits
 1429              		.align	1
 1430              		.global	user_loop
 1431              		.syntax unified
 1432              		.thumb
 1433              		.thumb_func
 1435              	user_loop:
 1436              	.LFB88:
  73:Core/Src/USER/user.c **** char a;
 1437              		.loc 4 73 1 view -0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 32
 1440              		@ frame_needed = 0, uses_anonymous_args = 0
 1441 0000 10B5     		push	{r4, lr}
 1442              	.LCFI27:
 1443              		.cfi_def_cfa_offset 8
 1444              		.cfi_offset 4, -8
 1445              		.cfi_offset 14, -4
 1446 0002 88B0     		sub	sp, sp, #32
 1447              	.LCFI28:
 1448              		.cfi_def_cfa_offset 40
  74:Core/Src/USER/user.c **** char txt[32];
 1449              		.loc 4 74 1 view .LVU348
  75:Core/Src/USER/user.c **** unsigned char txtp=0;
 1450              		.loc 4 75 1 view .LVU349
  76:Core/Src/USER/user.c **** 
 1451              		.loc 4 76 1 view .LVU350
 1452              	.LVL87:
  76:Core/Src/USER/user.c **** 
 1453              		.loc 4 76 15 is_stmt 0 view .LVU351
 1454 0004 0024     		movs	r4, #0
 1455              	.LVL88:
 1456              	.L103:
  78:Core/Src/USER/user.c **** 	{
 1457              		.loc 4 78 1 is_stmt 1 view .LVU352
  80:Core/Src/USER/user.c **** 	while(circle_available(&cc)>0) 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 45


 1458              		.loc 4 80 2 view .LVU353
 1459 0006 1648     		ldr	r0, .L107
 1460 0008 FFF7FEFF 		bl	HAL_IWDG_Refresh
 1461              	.LVL89:
  81:Core/Src/USER/user.c **** 		{
 1462              		.loc 4 81 2 view .LVU354
 1463              	.L98:
  81:Core/Src/USER/user.c **** 		{
 1464              		.loc 4 81 7 view .LVU355
  81:Core/Src/USER/user.c **** 		{
 1465              		.loc 4 81 8 is_stmt 0 view .LVU356
 1466 000c 1548     		ldr	r0, .L107+4
 1467 000e FFF7FEFF 		bl	circle_available
 1468              	.LVL90:
  81:Core/Src/USER/user.c **** 		{
 1469              		.loc 4 81 7 view .LVU357
 1470 0012 0028     		cmp	r0, #0
 1471 0014 F7D0     		beq	.L103
  83:Core/Src/USER/user.c **** 			
 1472              		.loc 4 83 4 is_stmt 1 view .LVU358
  83:Core/Src/USER/user.c **** 			
 1473              		.loc 4 83 6 is_stmt 0 view .LVU359
 1474 0016 1348     		ldr	r0, .L107+4
 1475 0018 FFF7FEFF 		bl	circle_pull
 1476              	.LVL91:
  85:Core/Src/USER/user.c **** 			{
 1477              		.loc 4 85 4 is_stmt 1 view .LVU360
  85:Core/Src/USER/user.c **** 			{
 1478              		.loc 4 85 15 is_stmt 0 view .LVU361
 1479 001c A0F12003 		sub	r3, r0, #32
 1480 0020 DBB2     		uxtb	r3, r3
  85:Core/Src/USER/user.c **** 			{
 1481              		.loc 4 85 7 view .LVU362
 1482 0022 5A2B     		cmp	r3, #90
 1483 0024 10D8     		bhi	.L99
  87:Core/Src/USER/user.c **** 				txtp++;
 1484              		.loc 4 87 5 is_stmt 1 view .LVU363
  87:Core/Src/USER/user.c **** 				txtp++;
 1485              		.loc 4 87 14 is_stmt 0 view .LVU364
 1486 0026 04F12003 		add	r3, r4, #32
 1487 002a 6B44     		add	r3, sp, r3
 1488 002c 03F8200C 		strb	r0, [r3, #-32]
  88:Core/Src/USER/user.c **** 				txt[txtp]=0;
 1489              		.loc 4 88 5 is_stmt 1 view .LVU365
  88:Core/Src/USER/user.c **** 				txt[txtp]=0;
 1490              		.loc 4 88 9 is_stmt 0 view .LVU366
 1491 0030 0134     		adds	r4, r4, #1
 1492              	.LVL92:
  88:Core/Src/USER/user.c **** 				txt[txtp]=0;
 1493              		.loc 4 88 9 view .LVU367
 1494 0032 E4B2     		uxtb	r4, r4
 1495              	.LVL93:
  89:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 1496              		.loc 4 89 5 is_stmt 1 view .LVU368
  89:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 1497              		.loc 4 89 14 is_stmt 0 view .LVU369
 1498 0034 04F12003 		add	r3, r4, #32
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 46


 1499 0038 6B44     		add	r3, sp, r3
 1500 003a 0022     		movs	r2, #0
 1501 003c 03F8202C 		strb	r2, [r3, #-32]
  90:Core/Src/USER/user.c **** 			}
 1502              		.loc 4 90 5 is_stmt 1 view .LVU370
  90:Core/Src/USER/user.c **** 			}
 1503              		.loc 4 90 8 is_stmt 0 view .LVU371
 1504 0040 1E2C     		cmp	r4, #30
 1505 0042 E3D9     		bls	.L98
  90:Core/Src/USER/user.c **** 			}
 1506              		.loc 4 90 24 view .LVU372
 1507 0044 0024     		movs	r4, #0
 1508              	.LVL94:
  90:Core/Src/USER/user.c **** 			}
 1509              		.loc 4 90 24 view .LVU373
 1510 0046 E1E7     		b	.L98
 1511              	.LVL95:
 1512              	.L99:
  92:Core/Src/USER/user.c **** 			{
 1513              		.loc 4 92 9 is_stmt 1 view .LVU374
  92:Core/Src/USER/user.c **** 			{
 1514              		.loc 4 92 12 is_stmt 0 view .LVU375
 1515 0048 1F28     		cmp	r0, #31
 1516 004a DFD8     		bhi	.L98
  94:Core/Src/USER/user.c **** 				txt[0]=0;
 1517              		.loc 4 94 5 is_stmt 1 view .LVU376
  94:Core/Src/USER/user.c **** 				txt[0]=0;
 1518              		.loc 4 94 8 is_stmt 0 view .LVU377
 1519 004c 022C     		cmp	r4, #2
 1520 004e 03D8     		bhi	.L106
 1521              	.LVL96:
 1522              	.L101:
  95:Core/Src/USER/user.c **** 				txtp=0;
 1523              		.loc 4 95 5 is_stmt 1 view .LVU378
  95:Core/Src/USER/user.c **** 				txtp=0;
 1524              		.loc 4 95 11 is_stmt 0 view .LVU379
 1525 0050 0024     		movs	r4, #0
 1526              	.LVL97:
  95:Core/Src/USER/user.c **** 				txtp=0;
 1527              		.loc 4 95 11 view .LVU380
 1528 0052 8DF80040 		strb	r4, [sp]
  96:Core/Src/USER/user.c **** 			}
 1529              		.loc 4 96 5 is_stmt 1 view .LVU381
 1530              	.LVL98:
  96:Core/Src/USER/user.c **** 			}
 1531              		.loc 4 96 5 is_stmt 0 view .LVU382
 1532 0056 D9E7     		b	.L98
 1533              	.LVL99:
 1534              	.L106:
  94:Core/Src/USER/user.c **** 				txt[0]=0;
 1535              		.loc 4 94 16 is_stmt 1 discriminator 1 view .LVU383
 1536 0058 6846     		mov	r0, sp
 1537              	.LVL100:
  94:Core/Src/USER/user.c **** 				txt[0]=0;
 1538              		.loc 4 94 16 is_stmt 0 discriminator 1 view .LVU384
 1539 005a FFF7FEFF 		bl	commandcom
 1540              	.LVL101:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 47


 1541 005e F7E7     		b	.L101
 1542              	.L108:
 1543              		.align	2
 1544              	.L107:
 1545 0060 00000000 		.word	.LANCHOR6
 1546 0064 00000000 		.word	.LANCHOR3
 1547              		.cfi_endproc
 1548              	.LFE88:
 1550              		.section	.text.rtc_check_screwd_calendar,"ax",%progbits
 1551              		.align	1
 1552              		.global	rtc_check_screwd_calendar
 1553              		.syntax unified
 1554              		.thumb
 1555              		.thumb_func
 1557              	rtc_check_screwd_calendar:
 1558              	.LFB76:
 201:Core/Src/USER/rtc.c **** {
 1559              		.loc 2 201 1 is_stmt 1 view -0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 8
 1562              		@ frame_needed = 0, uses_anonymous_args = 0
 1563 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1564              	.LCFI29:
 1565              		.cfi_def_cfa_offset 24
 1566              		.cfi_offset 4, -24
 1567              		.cfi_offset 5, -20
 1568              		.cfi_offset 6, -16
 1569              		.cfi_offset 7, -12
 1570              		.cfi_offset 8, -8
 1571              		.cfi_offset 14, -4
 1572 0004 82B0     		sub	sp, sp, #8
 1573              	.LCFI30:
 1574              		.cfi_def_cfa_offset 32
 202:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 1575              		.loc 2 202 1 view .LVU386
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 1576              		.loc 2 203 2 view .LVU387
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 1577              		.loc 2 203 5 is_stmt 0 view .LVU388
 1578 0006 0121     		movs	r1, #1
 1579 0008 2A48     		ldr	r0, .L115
 1580 000a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1581              	.LVL102:
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 1582              		.loc 2 203 4 view .LVU389
 1583 000e 45F25103 		movw	r3, #20561
 1584 0012 9842     		cmp	r0, r3
 1585 0014 02D0     		beq	.L113
 1586              	.L109:
 225:Core/Src/USER/rtc.c **** }
 1587              		.loc 2 225 1 view .LVU390
 1588 0016 02B0     		add	sp, sp, #8
 1589              	.LCFI31:
 1590              		.cfi_remember_state
 1591              		.cfi_def_cfa_offset 24
 1592              		@ sp needed
 1593 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 48


 1594              	.L113:
 1595              	.LCFI32:
 1596              		.cfi_restore_state
 1597              	.LBB8:
 205:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 1598              		.loc 2 205 3 is_stmt 1 view .LVU391
 1599 001c DFF89480 		ldr	r8, .L115
 1600 0020 0022     		movs	r2, #0
 1601 0022 01A9     		add	r1, sp, #4
 1602 0024 4046     		mov	r0, r8
 1603 0026 FFF7FEFF 		bl	HAL_RTC_GetDate
 1604              	.LVL103:
 206:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 1605              		.loc 2 206 3 view .LVU392
 1606 002a 234C     		ldr	r4, .L115+4
 1607 002c 0022     		movs	r2, #0
 1608 002e 2146     		mov	r1, r4
 1609 0030 4046     		mov	r0, r8
 1610 0032 FFF7FEFF 		bl	HAL_RTC_GetTime
 1611              	.LVL104:
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1612              		.loc 2 207 3 view .LVU393
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1613              		.loc 2 207 27 is_stmt 0 view .LVU394
 1614 0036 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1615              		.loc 2 207 40 view .LVU395
 1616 0038 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1617              		.loc 2 207 45 view .LVU396
 1618 003c 03EB4303 		add	r3, r3, r3, lsl #1
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1619              		.loc 2 207 33 view .LVU397
 1620 0040 04EBC304 		add	r4, r4, r3, lsl #3
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1621              		.loc 2 207 55 view .LVU398
 1622 0044 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1623              		.loc 2 207 64 view .LVU399
 1624 0048 4FF43A77 		mov	r7, #744
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1625              		.loc 2 207 48 view .LVU400
 1626 004c 07FB0344 		mla	r4, r7, r3, r4
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1627              		.loc 2 207 74 view .LVU401
 1628 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1629              		.loc 2 207 83 view .LVU402
 1630 0054 42F25026 		movw	r6, #8784
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 1631              		.loc 2 207 67 view .LVU403
 1632 0058 06FB0344 		mla	r4, r6, r3, r4
 1633              	.LVL105:
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 1634              		.loc 2 209 3 is_stmt 1 view .LVU404
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 1635              		.loc 2 209 16 is_stmt 0 view .LVU405
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 49


 1636 005c 0221     		movs	r1, #2
 1637 005e 4046     		mov	r0, r8
 1638 0060 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1639              	.LVL106:
 1640 0064 0546     		mov	r5, r0
 1641              	.LVL107:
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 1642              		.loc 2 210 3 is_stmt 1 view .LVU406
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 1643              		.loc 2 210 17 is_stmt 0 view .LVU407
 1644 0066 0321     		movs	r1, #3
 1645 0068 4046     		mov	r0, r8
 1646              	.LVL108:
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 1647              		.loc 2 210 17 view .LVU408
 1648 006a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1649              	.LVL109:
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1650              		.loc 2 212 3 is_stmt 1 view .LVU409
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1651              		.loc 2 212 24 is_stmt 0 view .LVU410
 1652 006e 290A     		lsrs	r1, r5, #8
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1653              		.loc 2 212 41 view .LVU411
 1654 0070 05F00F03 		and	r3, r5, #15
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1655              		.loc 2 212 53 view .LVU412
 1656 0074 07FB03F3 		mul	r3, r7, r3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1657              		.loc 2 212 35 view .LVU413
 1658 0078 06FB0133 		mla	r3, r6, r1, r3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1659              		.loc 2 212 62 view .LVU414
 1660 007c 020A     		lsrs	r2, r0, #8
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1661              		.loc 2 212 66 view .LVU415
 1662 007e 02EB4206 		add	r6, r2, r2, lsl #1
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1663              		.loc 2 212 56 view .LVU416
 1664 0082 03EBC603 		add	r3, r3, r6, lsl #3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1665              		.loc 2 212 76 view .LVU417
 1666 0086 C0B2     		uxtb	r0, r0
 1667              	.LVL110:
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 1668              		.loc 2 212 12 view .LVU418
 1669 0088 0344     		add	r3, r3, r0
 1670              	.LVL111:
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 1671              		.loc 2 213 3 is_stmt 1 view .LVU419
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 1672              		.loc 2 213 5 is_stmt 0 view .LVU420
 1673 008a 9C42     		cmp	r4, r3
 1674 008c C3D2     		bcs	.L109
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 1675              		.loc 2 215 4 is_stmt 1 view .LVU421
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 50


 1676              		.loc 2 215 15 is_stmt 0 view .LVU422
 1677 008e 8DF80710 		strb	r1, [sp, #7]
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 1678              		.loc 2 216 4 is_stmt 1 view .LVU423
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 1679              		.loc 2 216 21 is_stmt 0 view .LVU424
 1680 0092 05F00F05 		and	r5, r5, #15
 1681              	.LVL112:
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 1682              		.loc 2 216 16 view .LVU425
 1683 0096 8DF80550 		strb	r5, [sp, #5]
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 1684              		.loc 2 217 4 is_stmt 1 view .LVU426
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 1685              		.loc 2 217 15 is_stmt 0 view .LVU427
 1686 009a 8DF80620 		strb	r2, [sp, #6]
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 1687              		.loc 2 218 5 is_stmt 1 view .LVU428
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 1688              		.loc 2 218 9 is_stmt 0 view .LVU429
 1689 009e 0022     		movs	r2, #0
 1690 00a0 01A9     		add	r1, sp, #4
 1691 00a2 4046     		mov	r0, r8
 1692 00a4 FFF7FEFF 		bl	HAL_RTC_SetDate
 1693              	.LVL113:
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 1694              		.loc 2 218 8 view .LVU430
 1695 00a8 10B9     		cbnz	r0, .L114
 222:Core/Src/USER/rtc.c **** 			 rtc_backup_date();
 1696              		.loc 2 222 5 is_stmt 1 view .LVU431
 1697 00aa FFF7FEFF 		bl	rtc_backup_date
 1698              	.LVL114:
 1699              	.LBE8:
 225:Core/Src/USER/rtc.c **** }
 1700              		.loc 2 225 1 is_stmt 0 view .LVU432
 1701 00ae B2E7     		b	.L109
 1702              	.L114:
 1703              	.LBB9:
 220:Core/Src/USER/rtc.c **** 				Error_Handler();
 1704              		.loc 2 220 5 is_stmt 1 view .LVU433
 1705 00b0 FFF7FEFF 		bl	Error_Handler
 1706              	.LVL115:
 1707              	.L116:
 1708              		.align	2
 1709              	.L115:
 1710 00b4 00000000 		.word	.LANCHOR2
 1711 00b8 00000000 		.word	.LANCHOR1
 1712              	.LBE9:
 1713              		.cfi_endproc
 1714              	.LFE76:
 1716              		.section	.text.MX_RTC_Init,"ax",%progbits
 1717              		.align	1
 1718              		.syntax unified
 1719              		.thumb
 1720              		.thumb_func
 1722              	MX_RTC_Init:
 1723              	.LFB93:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 51


 199:Core/Src/main.c **** 
 1724              		.loc 1 199 1 view -0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 16
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728 0000 10B5     		push	{r4, lr}
 1729              	.LCFI33:
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 4, -8
 1732              		.cfi_offset 14, -4
 1733 0002 84B0     		sub	sp, sp, #16
 1734              	.LCFI34:
 1735              		.cfi_def_cfa_offset 24
 205:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 1736              		.loc 1 205 3 view .LVU435
 205:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 1737              		.loc 1 205 19 is_stmt 0 view .LVU436
 1738 0004 0023     		movs	r3, #0
 1739 0006 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 1740 000a 8DF80E30 		strb	r3, [sp, #14]
 206:Core/Src/main.c **** 
 1741              		.loc 1 206 3 is_stmt 1 view .LVU437
 206:Core/Src/main.c **** 
 1742              		.loc 1 206 19 is_stmt 0 view .LVU438
 1743 000e 0293     		str	r3, [sp, #8]
 209:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 1744              		.loc 1 209 3 is_stmt 1 view .LVU439
 209:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 1745              		.loc 1 209 17 is_stmt 0 view .LVU440
 1746 0010 2F4B     		ldr	r3, .L127
 1747 0012 304A     		ldr	r2, .L127+4
 1748 0014 1A60     		str	r2, [r3]
 210:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 1749              		.loc 1 210 3 is_stmt 1 view .LVU441
 210:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 1750              		.loc 1 210 26 is_stmt 0 view .LVU442
 1751 0016 4FF0FF32 		mov	r2, #-1
 1752 001a 5A60     		str	r2, [r3, #4]
 211:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
 1753              		.loc 1 211 3 is_stmt 1 view .LVU443
 211:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
 1754              		.loc 1 211 20 is_stmt 0 view .LVU444
 1755 001c 4FF48072 		mov	r2, #256
 1756 0020 9A60     		str	r2, [r3, #8]
 212:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 1757              		.loc 1 212 3 is_stmt 1 view .LVU445
 212:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 1758              		.loc 1 212 11 is_stmt 0 view .LVU446
 1759 0022 2D4B     		ldr	r3, .L127+8
 1760 0024 1B6A     		ldr	r3, [r3, #32]
 212:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 1761              		.loc 1 212 6 view .LVU447
 1762 0026 13F4004F 		tst	r3, #32768
 1763 002a 05D1     		bne	.L118
 217:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 1764              		.loc 1 217 3 is_stmt 1 view .LVU448
 218:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 52


 1765              		.loc 1 218 3 view .LVU449
 219:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1766              		.loc 1 219 3 view .LVU450
 220:Core/Src/main.c ****   {
 1767              		.loc 1 220 3 view .LVU451
 220:Core/Src/main.c ****   {
 1768              		.loc 1 220 7 is_stmt 0 view .LVU452
 1769 002c 2848     		ldr	r0, .L127
 1770 002e FFF7FEFF 		bl	HAL_RTC_Init
 1771              	.LVL116:
 220:Core/Src/main.c ****   {
 1772              		.loc 1 220 6 view .LVU453
 1773 0032 48B1     		cbz	r0, .L119
 222:Core/Src/main.c ****   }
 1774              		.loc 1 222 5 is_stmt 1 view .LVU454
 1775 0034 FFF7FEFF 		bl	Error_Handler
 1776              	.LVL117:
 1777              	.L118:
 228:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(RTC_IRQn);
 1778              		.loc 1 228 4 view .LVU455
 1779 0038 0022     		movs	r2, #0
 1780 003a 0F21     		movs	r1, #15
 1781 003c 0320     		movs	r0, #3
 1782 003e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1783              	.LVL118:
 229:Core/Src/main.c **** 	}
 1784              		.loc 1 229 4 view .LVU456
 1785 0042 0320     		movs	r0, #3
 1786 0044 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1787              	.LVL119:
 1788              	.L119:
 231:Core/Src/main.c **** 	{
 1789              		.loc 1 231 2 view .LVU457
 231:Core/Src/main.c **** 	{
 1790              		.loc 1 231 5 is_stmt 0 view .LVU458
 1791 0048 0121     		movs	r1, #1
 1792 004a 2148     		ldr	r0, .L127
 1793 004c FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 1794              	.LVL120:
 231:Core/Src/main.c **** 	{
 1795              		.loc 1 231 4 view .LVU459
 1796 0050 45F25103 		movw	r3, #20561
 1797 0054 9842     		cmp	r0, r3
 1798 0056 1BD0     		beq	.L120
 237:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1799              		.loc 1 237 3 is_stmt 1 view .LVU460
 237:Core/Src/main.c ****   sTime.Minutes = 0x0;
 1800              		.loc 1 237 15 is_stmt 0 view .LVU461
 1801 0058 0023     		movs	r3, #0
 1802 005a 8DF80C30 		strb	r3, [sp, #12]
 238:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1803              		.loc 1 238 3 is_stmt 1 view .LVU462
 238:Core/Src/main.c ****   sTime.Seconds = 0x0;
 1804              		.loc 1 238 17 is_stmt 0 view .LVU463
 1805 005e 8DF80D30 		strb	r3, [sp, #13]
 239:Core/Src/main.c **** 
 1806              		.loc 1 239 3 is_stmt 1 view .LVU464
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 53


 239:Core/Src/main.c **** 
 1807              		.loc 1 239 17 is_stmt 0 view .LVU465
 1808 0062 8DF80E30 		strb	r3, [sp, #14]
 241:Core/Src/main.c ****   {
 1809              		.loc 1 241 3 is_stmt 1 view .LVU466
 241:Core/Src/main.c ****   {
 1810              		.loc 1 241 7 is_stmt 0 view .LVU467
 1811 0066 0122     		movs	r2, #1
 1812 0068 03A9     		add	r1, sp, #12
 1813 006a 1948     		ldr	r0, .L127
 1814 006c FFF7FEFF 		bl	HAL_RTC_SetTime
 1815              	.LVL121:
 241:Core/Src/main.c ****   {
 1816              		.loc 1 241 6 view .LVU468
 1817 0070 30BB     		cbnz	r0, .L124
 245:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 1818              		.loc 1 245 3 is_stmt 1 view .LVU469
 245:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 1819              		.loc 1 245 24 is_stmt 0 view .LVU470
 1820 0072 0122     		movs	r2, #1
 1821 0074 8DF80820 		strb	r2, [sp, #8]
 246:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 1822              		.loc 1 246 3 is_stmt 1 view .LVU471
 246:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 1823              		.loc 1 246 22 is_stmt 0 view .LVU472
 1824 0078 8DF80920 		strb	r2, [sp, #9]
 247:Core/Src/main.c ****   DateToUpdate.Year = 0x0;
 1825              		.loc 1 247 3 is_stmt 1 view .LVU473
 247:Core/Src/main.c ****   DateToUpdate.Year = 0x0;
 1826              		.loc 1 247 21 is_stmt 0 view .LVU474
 1827 007c 8DF80A20 		strb	r2, [sp, #10]
 248:Core/Src/main.c **** 
 1828              		.loc 1 248 3 is_stmt 1 view .LVU475
 248:Core/Src/main.c **** 
 1829              		.loc 1 248 21 is_stmt 0 view .LVU476
 1830 0080 0023     		movs	r3, #0
 1831 0082 8DF80B30 		strb	r3, [sp, #11]
 250:Core/Src/main.c ****   {
 1832              		.loc 1 250 3 is_stmt 1 view .LVU477
 250:Core/Src/main.c ****   {
 1833              		.loc 1 250 7 is_stmt 0 view .LVU478
 1834 0086 02A9     		add	r1, sp, #8
 1835 0088 1148     		ldr	r0, .L127
 1836 008a FFF7FEFF 		bl	HAL_RTC_SetDate
 1837              	.LVL122:
 250:Core/Src/main.c ****   {
 1838              		.loc 1 250 6 view .LVU479
 1839 008e C8B9     		cbnz	r0, .L125
 1840              	.L120:
 262:Core/Src/main.c **** /* read time seconds for epoch */
 1841              		.loc 1 262 2 is_stmt 1 view .LVU480
 1842 0090 0F4C     		ldr	r4, .L127
 1843 0092 0022     		movs	r2, #0
 1844 0094 1149     		ldr	r1, .L127+12
 1845 0096 2046     		mov	r0, r4
 1846 0098 FFF7FEFF 		bl	HAL_RTC_GetTime
 1847              	.LVL123:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 54


 269:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 1848              		.loc 1 269 2 view .LVU481
 269:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 1849              		.loc 1 269 18 is_stmt 0 view .LVU482
 1850 009c 0022     		movs	r2, #0
 1851 009e 0192     		str	r2, [sp, #4]
 270:Core/Src/main.c **** 	if(dienos.Year < 20) {rtc_check_screwd_calendar();}
 1852              		.loc 1 270 2 is_stmt 1 view .LVU483
 1853 00a0 01A9     		add	r1, sp, #4
 1854 00a2 2046     		mov	r0, r4
 1855 00a4 FFF7FEFF 		bl	HAL_RTC_GetDate
 1856              	.LVL124:
 271:Core/Src/main.c **** 	
 1857              		.loc 1 271 2 view .LVU484
 271:Core/Src/main.c **** 	
 1858              		.loc 1 271 11 is_stmt 0 view .LVU485
 1859 00a8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 271:Core/Src/main.c **** 	
 1860              		.loc 1 271 4 view .LVU486
 1861 00ac 132B     		cmp	r3, #19
 1862 00ae 0BD9     		bls	.L126
 1863              	.L122:
 276:Core/Src/main.c **** 
 1864              		.loc 1 276 2 is_stmt 1 view .LVU487
 1865 00b0 45F25102 		movw	r2, #20561
 1866 00b4 0121     		movs	r1, #1
 1867 00b6 0648     		ldr	r0, .L127
 1868 00b8 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 1869              	.LVL125:
 281:Core/Src/main.c **** 
 1870              		.loc 1 281 1 is_stmt 0 view .LVU488
 1871 00bc 04B0     		add	sp, sp, #16
 1872              	.LCFI35:
 1873              		.cfi_remember_state
 1874              		.cfi_def_cfa_offset 8
 1875              		@ sp needed
 1876 00be 10BD     		pop	{r4, pc}
 1877              	.L124:
 1878              	.LCFI36:
 1879              		.cfi_restore_state
 243:Core/Src/main.c ****   }
 1880              		.loc 1 243 5 is_stmt 1 view .LVU489
 1881 00c0 FFF7FEFF 		bl	Error_Handler
 1882              	.LVL126:
 1883              	.L125:
 252:Core/Src/main.c ****   }
 1884              		.loc 1 252 5 view .LVU490
 1885 00c4 FFF7FEFF 		bl	Error_Handler
 1886              	.LVL127:
 1887              	.L126:
 271:Core/Src/main.c **** 	
 1888              		.loc 1 271 24 discriminator 1 view .LVU491
 1889 00c8 FFF7FEFF 		bl	rtc_check_screwd_calendar
 1890              	.LVL128:
 1891 00cc F0E7     		b	.L122
 1892              	.L128:
 1893 00ce 00BF     		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 55


 1894              	.L127:
 1895 00d0 00000000 		.word	.LANCHOR2
 1896 00d4 00280040 		.word	1073752064
 1897 00d8 00100240 		.word	1073876992
 1898 00dc 00000000 		.word	.LANCHOR1
 1899              		.cfi_endproc
 1900              	.LFE93:
 1902              		.section	.text.MX_TIM1_Init,"ax",%progbits
 1903              		.align	1
 1904              		.syntax unified
 1905              		.thumb
 1906              		.thumb_func
 1908              	MX_TIM1_Init:
 1909              	.LFB94:
 289:Core/Src/main.c **** 
 1910              		.loc 1 289 1 view -0
 1911              		.cfi_startproc
 1912              		@ args = 0, pretend = 0, frame = 88
 1913              		@ frame_needed = 0, uses_anonymous_args = 0
 1914 0000 10B5     		push	{r4, lr}
 1915              	.LCFI37:
 1916              		.cfi_def_cfa_offset 8
 1917              		.cfi_offset 4, -8
 1918              		.cfi_offset 14, -4
 1919 0002 96B0     		sub	sp, sp, #88
 1920              	.LCFI38:
 1921              		.cfi_def_cfa_offset 96
 295:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1922              		.loc 1 295 3 view .LVU493
 295:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1923              		.loc 1 295 26 is_stmt 0 view .LVU494
 1924 0004 0024     		movs	r4, #0
 1925 0006 1294     		str	r4, [sp, #72]
 1926 0008 1394     		str	r4, [sp, #76]
 1927 000a 1494     		str	r4, [sp, #80]
 1928 000c 1594     		str	r4, [sp, #84]
 296:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1929              		.loc 1 296 3 is_stmt 1 view .LVU495
 296:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1930              		.loc 1 296 27 is_stmt 0 view .LVU496
 1931 000e 1094     		str	r4, [sp, #64]
 1932 0010 1194     		str	r4, [sp, #68]
 297:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1933              		.loc 1 297 3 is_stmt 1 view .LVU497
 297:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1934              		.loc 1 297 22 is_stmt 0 view .LVU498
 1935 0012 0994     		str	r4, [sp, #36]
 1936 0014 0A94     		str	r4, [sp, #40]
 1937 0016 0B94     		str	r4, [sp, #44]
 1938 0018 0C94     		str	r4, [sp, #48]
 1939 001a 0D94     		str	r4, [sp, #52]
 1940 001c 0E94     		str	r4, [sp, #56]
 1941 001e 0F94     		str	r4, [sp, #60]
 298:Core/Src/main.c **** 
 1942              		.loc 1 298 3 is_stmt 1 view .LVU499
 298:Core/Src/main.c **** 
 1943              		.loc 1 298 34 is_stmt 0 view .LVU500
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 56


 1944 0020 2022     		movs	r2, #32
 1945 0022 2146     		mov	r1, r4
 1946 0024 01A8     		add	r0, sp, #4
 1947 0026 FFF7FEFF 		bl	memset
 1948              	.LVL129:
 303:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1949              		.loc 1 303 3 is_stmt 1 view .LVU501
 303:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 1950              		.loc 1 303 18 is_stmt 0 view .LVU502
 1951 002a 2B48     		ldr	r0, .L143
 1952 002c 2B4B     		ldr	r3, .L143+4
 1953 002e 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1954              		.loc 1 304 3 is_stmt 1 view .LVU503
 304:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1955              		.loc 1 304 24 is_stmt 0 view .LVU504
 1956 0030 4460     		str	r4, [r0, #4]
 305:Core/Src/main.c ****   htim1.Init.Period = 35535;
 1957              		.loc 1 305 3 is_stmt 1 view .LVU505
 305:Core/Src/main.c ****   htim1.Init.Period = 35535;
 1958              		.loc 1 305 26 is_stmt 0 view .LVU506
 1959 0032 8460     		str	r4, [r0, #8]
 306:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1960              		.loc 1 306 3 is_stmt 1 view .LVU507
 306:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1961              		.loc 1 306 21 is_stmt 0 view .LVU508
 1962 0034 48F6CF23 		movw	r3, #35535
 1963 0038 C360     		str	r3, [r0, #12]
 307:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1964              		.loc 1 307 3 is_stmt 1 view .LVU509
 307:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 1965              		.loc 1 307 28 is_stmt 0 view .LVU510
 1966 003a 0461     		str	r4, [r0, #16]
 308:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1967              		.loc 1 308 3 is_stmt 1 view .LVU511
 308:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 1968              		.loc 1 308 32 is_stmt 0 view .LVU512
 1969 003c 4461     		str	r4, [r0, #20]
 309:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1970              		.loc 1 309 3 is_stmt 1 view .LVU513
 309:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1971              		.loc 1 309 32 is_stmt 0 view .LVU514
 1972 003e 8023     		movs	r3, #128
 1973 0040 8361     		str	r3, [r0, #24]
 310:Core/Src/main.c ****   {
 1974              		.loc 1 310 3 is_stmt 1 view .LVU515
 310:Core/Src/main.c ****   {
 1975              		.loc 1 310 7 is_stmt 0 view .LVU516
 1976 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1977              	.LVL130:
 310:Core/Src/main.c ****   {
 1978              		.loc 1 310 6 view .LVU517
 1979 0046 0028     		cmp	r0, #0
 1980 0048 39D1     		bne	.L137
 314:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1981              		.loc 1 314 3 is_stmt 1 view .LVU518
 314:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 57


 1982              		.loc 1 314 34 is_stmt 0 view .LVU519
 1983 004a 4FF48053 		mov	r3, #4096
 1984 004e 1293     		str	r3, [sp, #72]
 315:Core/Src/main.c ****   {
 1985              		.loc 1 315 3 is_stmt 1 view .LVU520
 315:Core/Src/main.c ****   {
 1986              		.loc 1 315 7 is_stmt 0 view .LVU521
 1987 0050 12A9     		add	r1, sp, #72
 1988 0052 2148     		ldr	r0, .L143
 1989 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1990              	.LVL131:
 315:Core/Src/main.c ****   {
 1991              		.loc 1 315 6 view .LVU522
 1992 0058 0028     		cmp	r0, #0
 1993 005a 32D1     		bne	.L138
 319:Core/Src/main.c ****   {
 1994              		.loc 1 319 3 is_stmt 1 view .LVU523
 319:Core/Src/main.c ****   {
 1995              		.loc 1 319 7 is_stmt 0 view .LVU524
 1996 005c 1E48     		ldr	r0, .L143
 1997 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1998              	.LVL132:
 319:Core/Src/main.c ****   {
 1999              		.loc 1 319 6 view .LVU525
 2000 0062 0028     		cmp	r0, #0
 2001 0064 2FD1     		bne	.L139
 323:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2002              		.loc 1 323 3 is_stmt 1 view .LVU526
 323:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2003              		.loc 1 323 37 is_stmt 0 view .LVU527
 2004 0066 0023     		movs	r3, #0
 2005 0068 1093     		str	r3, [sp, #64]
 324:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2006              		.loc 1 324 3 is_stmt 1 view .LVU528
 324:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 2007              		.loc 1 324 33 is_stmt 0 view .LVU529
 2008 006a 1193     		str	r3, [sp, #68]
 325:Core/Src/main.c ****   {
 2009              		.loc 1 325 3 is_stmt 1 view .LVU530
 325:Core/Src/main.c ****   {
 2010              		.loc 1 325 7 is_stmt 0 view .LVU531
 2011 006c 10A9     		add	r1, sp, #64
 2012 006e 1A48     		ldr	r0, .L143
 2013 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2014              	.LVL133:
 325:Core/Src/main.c ****   {
 2015              		.loc 1 325 6 view .LVU532
 2016 0074 48BB     		cbnz	r0, .L140
 329:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 2017              		.loc 1 329 3 is_stmt 1 view .LVU533
 329:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 2018              		.loc 1 329 20 is_stmt 0 view .LVU534
 2019 0076 6023     		movs	r3, #96
 2020 0078 0993     		str	r3, [sp, #36]
 330:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 2021              		.loc 1 330 3 is_stmt 1 view .LVU535
 330:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 58


 2022              		.loc 1 330 19 is_stmt 0 view .LVU536
 2023 007a 43F69823 		movw	r3, #15000
 2024 007e 0A93     		str	r3, [sp, #40]
 331:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2025              		.loc 1 331 3 is_stmt 1 view .LVU537
 331:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 2026              		.loc 1 331 24 is_stmt 0 view .LVU538
 2027 0080 0022     		movs	r2, #0
 2028 0082 0B92     		str	r2, [sp, #44]
 332:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2029              		.loc 1 332 3 is_stmt 1 view .LVU539
 332:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 2030              		.loc 1 332 25 is_stmt 0 view .LVU540
 2031 0084 0C92     		str	r2, [sp, #48]
 333:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2032              		.loc 1 333 3 is_stmt 1 view .LVU541
 333:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 2033              		.loc 1 333 24 is_stmt 0 view .LVU542
 2034 0086 0D92     		str	r2, [sp, #52]
 334:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2035              		.loc 1 334 3 is_stmt 1 view .LVU543
 334:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 2036              		.loc 1 334 25 is_stmt 0 view .LVU544
 2037 0088 0E92     		str	r2, [sp, #56]
 335:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2038              		.loc 1 335 3 is_stmt 1 view .LVU545
 335:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 2039              		.loc 1 335 26 is_stmt 0 view .LVU546
 2040 008a 0F92     		str	r2, [sp, #60]
 336:Core/Src/main.c ****   {
 2041              		.loc 1 336 3 is_stmt 1 view .LVU547
 336:Core/Src/main.c ****   {
 2042              		.loc 1 336 7 is_stmt 0 view .LVU548
 2043 008c 09A9     		add	r1, sp, #36
 2044 008e 1248     		ldr	r0, .L143
 2045 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 2046              	.LVL134:
 336:Core/Src/main.c ****   {
 2047              		.loc 1 336 6 view .LVU549
 2048 0094 D8B9     		cbnz	r0, .L141
 340:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2049              		.loc 1 340 3 is_stmt 1 view .LVU550
 340:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 2050              		.loc 1 340 40 is_stmt 0 view .LVU551
 2051 0096 0023     		movs	r3, #0
 2052 0098 0193     		str	r3, [sp, #4]
 341:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2053              		.loc 1 341 3 is_stmt 1 view .LVU552
 341:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 2054              		.loc 1 341 41 is_stmt 0 view .LVU553
 2055 009a 0293     		str	r3, [sp, #8]
 342:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 2056              		.loc 1 342 3 is_stmt 1 view .LVU554
 342:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 2057              		.loc 1 342 34 is_stmt 0 view .LVU555
 2058 009c 0393     		str	r3, [sp, #12]
 343:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 59


 2059              		.loc 1 343 3 is_stmt 1 view .LVU556
 343:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 2060              		.loc 1 343 33 is_stmt 0 view .LVU557
 2061 009e 0493     		str	r3, [sp, #16]
 344:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2062              		.loc 1 344 3 is_stmt 1 view .LVU558
 344:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 2063              		.loc 1 344 35 is_stmt 0 view .LVU559
 2064 00a0 0593     		str	r3, [sp, #20]
 345:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2065              		.loc 1 345 3 is_stmt 1 view .LVU560
 345:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 2066              		.loc 1 345 38 is_stmt 0 view .LVU561
 2067 00a2 4FF40052 		mov	r2, #8192
 2068 00a6 0692     		str	r2, [sp, #24]
 346:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2069              		.loc 1 346 3 is_stmt 1 view .LVU562
 346:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 2070              		.loc 1 346 40 is_stmt 0 view .LVU563
 2071 00a8 0893     		str	r3, [sp, #32]
 347:Core/Src/main.c ****   {
 2072              		.loc 1 347 3 is_stmt 1 view .LVU564
 347:Core/Src/main.c ****   {
 2073              		.loc 1 347 7 is_stmt 0 view .LVU565
 2074 00aa 01A9     		add	r1, sp, #4
 2075 00ac 0A48     		ldr	r0, .L143
 2076 00ae FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 2077              	.LVL135:
 347:Core/Src/main.c ****   {
 2078              		.loc 1 347 6 view .LVU566
 2079 00b2 70B9     		cbnz	r0, .L142
 354:Core/Src/main.c **** 
 2080              		.loc 1 354 3 is_stmt 1 view .LVU567
 2081 00b4 0848     		ldr	r0, .L143
 2082 00b6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 2083              	.LVL136:
 356:Core/Src/main.c **** 
 2084              		.loc 1 356 1 is_stmt 0 view .LVU568
 2085 00ba 16B0     		add	sp, sp, #88
 2086              	.LCFI39:
 2087              		.cfi_remember_state
 2088              		.cfi_def_cfa_offset 8
 2089              		@ sp needed
 2090 00bc 10BD     		pop	{r4, pc}
 2091              	.L137:
 2092              	.LCFI40:
 2093              		.cfi_restore_state
 312:Core/Src/main.c ****   }
 2094              		.loc 1 312 5 is_stmt 1 view .LVU569
 2095 00be FFF7FEFF 		bl	Error_Handler
 2096              	.LVL137:
 2097              	.L138:
 317:Core/Src/main.c ****   }
 2098              		.loc 1 317 5 view .LVU570
 2099 00c2 FFF7FEFF 		bl	Error_Handler
 2100              	.LVL138:
 2101              	.L139:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 60


 321:Core/Src/main.c ****   }
 2102              		.loc 1 321 5 view .LVU571
 2103 00c6 FFF7FEFF 		bl	Error_Handler
 2104              	.LVL139:
 2105              	.L140:
 327:Core/Src/main.c ****   }
 2106              		.loc 1 327 5 view .LVU572
 2107 00ca FFF7FEFF 		bl	Error_Handler
 2108              	.LVL140:
 2109              	.L141:
 338:Core/Src/main.c ****   }
 2110              		.loc 1 338 5 view .LVU573
 2111 00ce FFF7FEFF 		bl	Error_Handler
 2112              	.LVL141:
 2113              	.L142:
 349:Core/Src/main.c ****   }
 2114              		.loc 1 349 5 view .LVU574
 2115 00d2 FFF7FEFF 		bl	Error_Handler
 2116              	.LVL142:
 2117              	.L144:
 2118 00d6 00BF     		.align	2
 2119              	.L143:
 2120 00d8 00000000 		.word	.LANCHOR5
 2121 00dc 002C0140 		.word	1073818624
 2122              		.cfi_endproc
 2123              	.LFE94:
 2125              		.section	.text.MX_IWDG_Init,"ax",%progbits
 2126              		.align	1
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2131              	MX_IWDG_Init:
 2132              	.LFB92:
 171:Core/Src/main.c **** 
 2133              		.loc 1 171 1 view -0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 0
 2136              		@ frame_needed = 0, uses_anonymous_args = 0
 2137 0000 08B5     		push	{r3, lr}
 2138              	.LCFI41:
 2139              		.cfi_def_cfa_offset 8
 2140              		.cfi_offset 3, -8
 2141              		.cfi_offset 14, -4
 180:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 2142              		.loc 1 180 3 view .LVU576
 180:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 2143              		.loc 1 180 18 is_stmt 0 view .LVU577
 2144 0002 0748     		ldr	r0, .L149
 2145 0004 074B     		ldr	r3, .L149+4
 2146 0006 0360     		str	r3, [r0]
 181:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 2147              		.loc 1 181 3 is_stmt 1 view .LVU578
 181:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 2148              		.loc 1 181 24 is_stmt 0 view .LVU579
 2149 0008 0023     		movs	r3, #0
 2150 000a 4360     		str	r3, [r0, #4]
 182:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 61


 2151              		.loc 1 182 3 is_stmt 1 view .LVU580
 182:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 2152              		.loc 1 182 21 is_stmt 0 view .LVU581
 2153 000c 40F6FF73 		movw	r3, #4095
 2154 0010 8360     		str	r3, [r0, #8]
 183:Core/Src/main.c ****   {
 2155              		.loc 1 183 3 is_stmt 1 view .LVU582
 183:Core/Src/main.c ****   {
 2156              		.loc 1 183 7 is_stmt 0 view .LVU583
 2157 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 2158              	.LVL143:
 183:Core/Src/main.c ****   {
 2159              		.loc 1 183 6 view .LVU584
 2160 0016 00B9     		cbnz	r0, .L148
 191:Core/Src/main.c **** 
 2161              		.loc 1 191 1 view .LVU585
 2162 0018 08BD     		pop	{r3, pc}
 2163              	.L148:
 185:Core/Src/main.c ****   }
 2164              		.loc 1 185 5 is_stmt 1 view .LVU586
 2165 001a FFF7FEFF 		bl	Error_Handler
 2166              	.LVL144:
 2167              	.L150:
 2168 001e 00BF     		.align	2
 2169              	.L149:
 2170 0020 00000000 		.word	.LANCHOR6
 2171 0024 00300040 		.word	1073754112
 2172              		.cfi_endproc
 2173              	.LFE92:
 2175              		.section	.text.SystemClock_Config,"ax",%progbits
 2176              		.align	1
 2177              		.global	SystemClock_Config
 2178              		.syntax unified
 2179              		.thumb
 2180              		.thumb_func
 2182              	SystemClock_Config:
 2183              	.LFB91:
 122:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2184              		.loc 1 122 1 view -0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 88
 2187              		@ frame_needed = 0, uses_anonymous_args = 0
 2188 0000 00B5     		push	{lr}
 2189              	.LCFI42:
 2190              		.cfi_def_cfa_offset 4
 2191              		.cfi_offset 14, -4
 2192 0002 97B0     		sub	sp, sp, #92
 2193              	.LCFI43:
 2194              		.cfi_def_cfa_offset 96
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2195              		.loc 1 123 3 view .LVU588
 123:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2196              		.loc 1 123 22 is_stmt 0 view .LVU589
 2197 0004 2822     		movs	r2, #40
 2198 0006 0021     		movs	r1, #0
 2199 0008 0CA8     		add	r0, sp, #48
 2200 000a FFF7FEFF 		bl	memset
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 62


 2201              	.LVL145:
 124:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 2202              		.loc 1 124 3 is_stmt 1 view .LVU590
 124:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 2203              		.loc 1 124 22 is_stmt 0 view .LVU591
 2204 000e 0023     		movs	r3, #0
 2205 0010 0793     		str	r3, [sp, #28]
 2206 0012 0893     		str	r3, [sp, #32]
 2207 0014 0993     		str	r3, [sp, #36]
 2208 0016 0A93     		str	r3, [sp, #40]
 2209 0018 0B93     		str	r3, [sp, #44]
 125:Core/Src/main.c **** 
 2210              		.loc 1 125 3 is_stmt 1 view .LVU592
 125:Core/Src/main.c **** 
 2211              		.loc 1 125 28 is_stmt 0 view .LVU593
 2212 001a 0193     		str	r3, [sp, #4]
 2213 001c 0293     		str	r3, [sp, #8]
 2214 001e 0393     		str	r3, [sp, #12]
 2215 0020 0493     		str	r3, [sp, #16]
 2216 0022 0593     		str	r3, [sp, #20]
 2217 0024 0693     		str	r3, [sp, #24]
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2218              		.loc 1 130 3 is_stmt 1 view .LVU594
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 2219              		.loc 1 130 36 is_stmt 0 view .LVU595
 2220 0026 0923     		movs	r3, #9
 2221 0028 0C93     		str	r3, [sp, #48]
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 2222              		.loc 1 131 3 is_stmt 1 view .LVU596
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 2223              		.loc 1 131 30 is_stmt 0 view .LVU597
 2224 002a 4FF48033 		mov	r3, #65536
 2225 002e 0D93     		str	r3, [sp, #52]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2226              		.loc 1 132 3 is_stmt 1 view .LVU598
 133:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 2227              		.loc 1 133 3 view .LVU599
 133:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 2228              		.loc 1 133 30 is_stmt 0 view .LVU600
 2229 0030 0122     		movs	r2, #1
 2230 0032 1092     		str	r2, [sp, #64]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2231              		.loc 1 134 3 is_stmt 1 view .LVU601
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2232              		.loc 1 134 30 is_stmt 0 view .LVU602
 2233 0034 1292     		str	r2, [sp, #72]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2234              		.loc 1 135 3 is_stmt 1 view .LVU603
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 2235              		.loc 1 135 34 is_stmt 0 view .LVU604
 2236 0036 0222     		movs	r2, #2
 2237 0038 1392     		str	r2, [sp, #76]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2238              		.loc 1 136 3 is_stmt 1 view .LVU605
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 2239              		.loc 1 136 35 is_stmt 0 view .LVU606
 2240 003a 1493     		str	r3, [sp, #80]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 63


 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2241              		.loc 1 137 3 is_stmt 1 view .LVU607
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2242              		.loc 1 137 32 is_stmt 0 view .LVU608
 2243 003c 4FF48013 		mov	r3, #1048576
 2244 0040 1593     		str	r3, [sp, #84]
 138:Core/Src/main.c ****   {
 2245              		.loc 1 138 3 is_stmt 1 view .LVU609
 138:Core/Src/main.c ****   {
 2246              		.loc 1 138 7 is_stmt 0 view .LVU610
 2247 0042 0CA8     		add	r0, sp, #48
 2248 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2249              	.LVL146:
 138:Core/Src/main.c ****   {
 2250              		.loc 1 138 6 view .LVU611
 2251 0048 E8B9     		cbnz	r0, .L156
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2252              		.loc 1 145 3 is_stmt 1 view .LVU612
 145:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2253              		.loc 1 145 31 is_stmt 0 view .LVU613
 2254 004a 0F23     		movs	r3, #15
 2255 004c 0793     		str	r3, [sp, #28]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2256              		.loc 1 147 3 is_stmt 1 view .LVU614
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2257              		.loc 1 147 34 is_stmt 0 view .LVU615
 2258 004e 0223     		movs	r3, #2
 2259 0050 0893     		str	r3, [sp, #32]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2260              		.loc 1 148 3 is_stmt 1 view .LVU616
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 2261              		.loc 1 148 35 is_stmt 0 view .LVU617
 2262 0052 0023     		movs	r3, #0
 2263 0054 0993     		str	r3, [sp, #36]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2264              		.loc 1 149 3 is_stmt 1 view .LVU618
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2265              		.loc 1 149 36 is_stmt 0 view .LVU619
 2266 0056 4FF48062 		mov	r2, #1024
 2267 005a 0A92     		str	r2, [sp, #40]
 150:Core/Src/main.c **** 
 2268              		.loc 1 150 3 is_stmt 1 view .LVU620
 150:Core/Src/main.c **** 
 2269              		.loc 1 150 36 is_stmt 0 view .LVU621
 2270 005c 0B93     		str	r3, [sp, #44]
 152:Core/Src/main.c ****   {
 2271              		.loc 1 152 3 is_stmt 1 view .LVU622
 152:Core/Src/main.c ****   {
 2272              		.loc 1 152 7 is_stmt 0 view .LVU623
 2273 005e 0121     		movs	r1, #1
 2274 0060 07A8     		add	r0, sp, #28
 2275 0062 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2276              	.LVL147:
 152:Core/Src/main.c ****   {
 2277              		.loc 1 152 6 view .LVU624
 2278 0066 80B9     		cbnz	r0, .L157
 156:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 64


 2279              		.loc 1 156 3 is_stmt 1 view .LVU625
 156:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 2280              		.loc 1 156 38 is_stmt 0 view .LVU626
 2281 0068 1123     		movs	r3, #17
 2282 006a 0193     		str	r3, [sp, #4]
 157:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 2283              		.loc 1 157 3 is_stmt 1 view .LVU627
 157:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 2284              		.loc 1 157 35 is_stmt 0 view .LVU628
 2285 006c 4FF40073 		mov	r3, #512
 2286 0070 0293     		str	r3, [sp, #8]
 158:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2287              		.loc 1 158 3 is_stmt 1 view .LVU629
 158:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 2288              		.loc 1 158 35 is_stmt 0 view .LVU630
 2289 0072 4FF48003 		mov	r3, #4194304
 2290 0076 0693     		str	r3, [sp, #24]
 159:Core/Src/main.c ****   {
 2291              		.loc 1 159 3 is_stmt 1 view .LVU631
 159:Core/Src/main.c ****   {
 2292              		.loc 1 159 7 is_stmt 0 view .LVU632
 2293 0078 01A8     		add	r0, sp, #4
 2294 007a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 2295              	.LVL148:
 159:Core/Src/main.c ****   {
 2296              		.loc 1 159 6 view .LVU633
 2297 007e 30B9     		cbnz	r0, .L158
 163:Core/Src/main.c **** 
 2298              		.loc 1 163 1 view .LVU634
 2299 0080 17B0     		add	sp, sp, #92
 2300              	.LCFI44:
 2301              		.cfi_remember_state
 2302              		.cfi_def_cfa_offset 4
 2303              		@ sp needed
 2304 0082 5DF804FB 		ldr	pc, [sp], #4
 2305              	.L156:
 2306              	.LCFI45:
 2307              		.cfi_restore_state
 140:Core/Src/main.c ****   }
 2308              		.loc 1 140 5 is_stmt 1 view .LVU635
 2309 0086 FFF7FEFF 		bl	Error_Handler
 2310              	.LVL149:
 2311              	.L157:
 154:Core/Src/main.c ****   }
 2312              		.loc 1 154 5 view .LVU636
 2313 008a FFF7FEFF 		bl	Error_Handler
 2314              	.LVL150:
 2315              	.L158:
 161:Core/Src/main.c ****   }
 2316              		.loc 1 161 5 view .LVU637
 2317 008e FFF7FEFF 		bl	Error_Handler
 2318              	.LVL151:
 2319              		.cfi_endproc
 2320              	.LFE91:
 2322              		.section	.text.main,"ax",%progbits
 2323              		.align	1
 2324              		.global	main
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 65


 2325              		.syntax unified
 2326              		.thumb
 2327              		.thumb_func
 2329              	main:
 2330              	.LFB90:
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 2331              		.loc 1 74 1 view -0
 2332              		.cfi_startproc
 2333              		@ Volatile: function does not return.
 2334              		@ args = 0, pretend = 0, frame = 0
 2335              		@ frame_needed = 0, uses_anonymous_args = 0
 2336 0000 08B5     		push	{r3, lr}
 2337              	.LCFI46:
 2338              		.cfi_def_cfa_offset 8
 2339              		.cfi_offset 3, -8
 2340              		.cfi_offset 14, -4
  82:Core/Src/main.c **** 
 2341              		.loc 1 82 3 view .LVU639
 2342 0002 FFF7FEFF 		bl	HAL_Init
 2343              	.LVL152:
  89:Core/Src/main.c **** 
 2344              		.loc 1 89 3 view .LVU640
 2345 0006 FFF7FEFF 		bl	SystemClock_Config
 2346              	.LVL153:
  96:Core/Src/main.c ****   MX_RTC_Init();
 2347              		.loc 1 96 3 view .LVU641
 2348 000a FFF7FEFF 		bl	MX_GPIO_Init
 2349              	.LVL154:
  97:Core/Src/main.c ****   MX_TIM1_Init();
 2350              		.loc 1 97 3 view .LVU642
 2351 000e FFF7FEFF 		bl	MX_RTC_Init
 2352              	.LVL155:
  98:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 2353              		.loc 1 98 3 view .LVU643
 2354 0012 FFF7FEFF 		bl	MX_TIM1_Init
 2355              	.LVL156:
  99:Core/Src/main.c ****   MX_IWDG_Init();
 2356              		.loc 1 99 3 view .LVU644
 2357 0016 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 2358              	.LVL157:
 100:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2359              		.loc 1 100 3 view .LVU645
 2360 001a FFF7FEFF 		bl	MX_IWDG_Init
 2361              	.LVL158:
 102:Core/Src/main.c ****   /* USER CODE END 2 */
 2362              		.loc 1 102 1 view .LVU646
 2363 001e FFF7FEFF 		bl	user_init
 2364              	.LVL159:
 107:Core/Src/main.c ****   {
 2365              		.loc 1 107 3 view .LVU647
 112:Core/Src/main.c ****   }
 2366              		.loc 1 112 2 view .LVU648
 2367 0022 FFF7FEFF 		bl	user_loop
 2368              	.LVL160:
 2369              		.cfi_endproc
 2370              	.LFE90:
 2372              		.global	htim1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 66


 2373              		.global	hrtc
 2374              		.global	hiwdg
 2375              		.global	cc
 2376              		.global	testas
 2377              		.global	LastHour
 2378              		.global	oldTime
 2379              		.global	currTime
 2380              		.section	.bss.cc,"aw",%nobits
 2381              		.align	2
 2382              		.set	.LANCHOR3,. + 0
 2385              	cc:
 2386 0000 00000000 		.space	20
 2386      00000000 
 2386      00000000 
 2386      00000000 
 2386      00000000 
 2387              		.section	.bss.currTime,"aw",%nobits
 2388              		.align	2
 2389              		.set	.LANCHOR1,. + 0
 2392              	currTime:
 2393 0000 000000   		.space	3
 2394              		.section	.bss.hiwdg,"aw",%nobits
 2395              		.align	2
 2396              		.set	.LANCHOR6,. + 0
 2399              	hiwdg:
 2400 0000 00000000 		.space	12
 2400      00000000 
 2400      00000000 
 2401              		.section	.bss.hrtc,"aw",%nobits
 2402              		.align	2
 2403              		.set	.LANCHOR2,. + 0
 2406              	hrtc:
 2407 0000 00000000 		.space	20
 2407      00000000 
 2407      00000000 
 2407      00000000 
 2407      00000000 
 2408              		.section	.bss.htim1,"aw",%nobits
 2409              		.align	2
 2410              		.set	.LANCHOR5,. + 0
 2413              	htim1:
 2414 0000 00000000 		.space	72
 2414      00000000 
 2414      00000000 
 2414      00000000 
 2414      00000000 
 2415              		.section	.bss.testas,"aw",%nobits
 2416              		.align	2
 2417              		.set	.LANCHOR4,. + 0
 2420              	testas:
 2421 0000 00000000 		.space	64
 2421      00000000 
 2421      00000000 
 2421      00000000 
 2421      00000000 
 2422              		.section	.data.LastHour,"aw"
 2425              	LastHour:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 67


 2426 0000 FF       		.byte	-1
 2427              		.section	.data.oldTime,"aw"
 2428              		.align	2
 2429              		.set	.LANCHOR0,. + 0
 2432              	oldTime:
 2433 0000 FF       		.byte	-1
 2434 0001 FF       		.byte	-1
 2435 0002 FF       		.byte	-1
 2436              		.text
 2437              	.Letext0:
 2438              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\machine
 2439              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\sys\\_s
 2440              		.file 8 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 2441              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\lib\\gcc\\arm-none-eabi\\10.3.1
 2442              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2443              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2444              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2445              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2446              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2447              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 2448              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 2449              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2450              		.file 18 "Core/Src/USER/circular_buffer.h"
 2451              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2452              		.file 20 "Core/Inc/main.h"
 2453              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 2454              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc_ex.h"
 2455              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2456              		.file 24 "USB_DEVICE/App/usb_device.h"
 2457              		.file 25 "USB_DEVICE/App/usbd_cdc_if.h"
 2458              		.file 26 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\string
 2459              		.file 27 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\stdlib
 2460              		.file 28 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:112    .text.MX_GPIO_Init:00000058 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:118    .text.rtc_clean:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:124    .text.rtc_clean:00000000 rtc_clean
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:148    .text.rtc_clean:0000000c $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:153    .text.filter_string:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:159    .text.filter_string:00000000 filter_string
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:242    .text.rtc_update:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:248    .text.rtc_update:00000000 rtc_update
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:270    .text.rtc_update:00000010 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:276    .text.rtc_time_string:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:282    .text.rtc_time_string:00000000 rtc_time_string
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:378    .text.rtc_time_string:00000074 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:385    .text.rtc_date_string:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:391    .text.rtc_date_string:00000000 rtc_date_string
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:488    .text.rtc_date_string:00000078 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:494    .text.rtc_backup_date:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:500    .text.rtc_backup_date:00000000 rtc_backup_date
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:578    .text.rtc_backup_date:00000058 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:584    .text.rtc_int_init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:590    .text.rtc_int_init:00000000 rtc_int_init
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:608    .text.rtc_int_init:00000010 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:613    .text.circle_reset:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:619    .text.circle_reset:00000000 circle_reset
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:647    .text.circle_push:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:653    .text.circle_push:00000000 circle_push
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:699    .text.circle_pull:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:705    .text.circle_pull:00000000 circle_pull
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:754    .text.circle_push_buf:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:760    .text.circle_push_buf:00000000 circle_push_buf
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:810    .text.circle_available:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:816    .text.circle_available:00000000 circle_available
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:834    .text.circle_free:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:840    .text.circle_free:00000000 circle_free
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:861    .text.user_usb_rx:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:867    .text.user_usb_rx:00000000 user_usb_rx
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:930    .text.user_usb_rx:00000024 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:935    .text.user_init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:941    .text.user_init:00000000 user_init
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:978    .text.user_init:00000024 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:985    .text.user_seconds_job:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:991    .text.user_seconds_job:00000000 user_seconds_job
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1018   .text.user_seconds_job:00000018 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1025   .text.HAL_RTCEx_RTCEventCallback:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1031   .text.HAL_RTCEx_RTCEventCallback:00000000 HAL_RTCEx_RTCEventCallback
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1053   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1059   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1091   .text.rtc_set_date_text:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1097   .text.rtc_set_date_text:00000000 rtc_set_date_text
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1198   .text.rtc_set_date_text:00000064 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1203   .text.rtc_set_time_text:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1209   .text.rtc_set_time_text:00000000 rtc_set_time_text
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1309   .text.rtc_set_time_text:0000005c $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1315   .rodata.commandcom.str1.4:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 69


C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1319   .text.commandcom:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1325   .text.commandcom:00000000 commandcom
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1358   .text.commandcom:0000001a $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1378   .text.commandcom:0000002e $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1423   .text.commandcom:00000054 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1429   .text.user_loop:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1435   .text.user_loop:00000000 user_loop
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1545   .text.user_loop:00000060 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1551   .text.rtc_check_screwd_calendar:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1557   .text.rtc_check_screwd_calendar:00000000 rtc_check_screwd_calendar
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1710   .text.rtc_check_screwd_calendar:000000b4 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1717   .text.MX_RTC_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1722   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1895   .text.MX_RTC_Init:000000d0 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1903   .text.MX_TIM1_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:1908   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2120   .text.MX_TIM1_Init:000000d8 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2126   .text.MX_IWDG_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2131   .text.MX_IWDG_Init:00000000 MX_IWDG_Init
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2170   .text.MX_IWDG_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2176   .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2182   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2323   .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2329   .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2413   .bss.htim1:00000000 htim1
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2406   .bss.hrtc:00000000 hrtc
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2399   .bss.hiwdg:00000000 hiwdg
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2385   .bss.cc:00000000 cc
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2420   .bss.testas:00000000 testas
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2425   .data.LastHour:00000000 LastHour
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2432   .data.oldTime:00000000 oldTime
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2392   .bss.currTime:00000000 currTime
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2381   .bss.cc:00000000 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2388   .bss.currTime:00000000 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2395   .bss.hiwdg:00000000 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2402   .bss.hrtc:00000000 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2409   .bss.htim1:00000000 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2416   .bss.testas:00000000 $d
C:\Users\User\AppData\Local\Temp\ccWjEcnh.s:2428   .data.oldTime:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RTC_GetTime
HAL_RTC_GetDate
HAL_RTCEx_BKUPRead
HAL_RTCEx_BKUPWrite
HAL_TIM_Base_Start_IT
HAL_GPIO_TogglePin
strlen
strtok
atoi
HAL_RTC_SetDate
HAL_RTC_SetTime
CDC_Transmit_FS
HAL_IWDG_Refresh
HAL_RTC_Init
ARM GAS  C:\Users\User\AppData\Local\Temp\ccWjEcnh.s 			page 70


HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_IWDG_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
