ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SSD1306_present,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	SSD1306_present:
  24              	.LFB89:
  25              		.file 1 "Core/Src/USER/oled/ssd1306_oled_i2c.c"
   1:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* *****************************************************************************
   2:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * File Name          : ssd1306_oled_i2c.c
   3:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Author             : www.vabolis.lt + kmm CHR(0x40) rmlabs.net
   4:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Version            : V1.2
   5:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Date               : 2020
   6:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Description        : OLED I2C display module from China
   7:Core/Src/USER/oled/ssd1306_oled_i2c.c **** ********************************************************************************
   8:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * converterted STM32F MCU, compatible with STM32CubeMX, HAL, gcc
   9:Core/Src/USER/oled/ssd1306_oled_i2c.c **** ****************************************************************************** */
  10:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include <stdlib.h>
  11:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include <string.h>
  12:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  13:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  14:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* IC2 handlers from CubeMX */
  15:Core/Src/USER/oled/ssd1306_oled_i2c.c **** extern I2C_HandleTypeDef hi2c2;
  16:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define HI2C &hi2c2
  17:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  18:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* some includes */
  19:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include "ssd1306_oled.h" // configuration number from datasheet
  20:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include "font_c64_lower.h" // Commodore 64 font
  21:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  22:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  23:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* Configure display: size, voltage, I2C address */
  24:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_ADR 0x78>>1
  25:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_WIDTH 128
  26:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_HEIGHT 32
  27:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  28:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  29:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_VCS SSD1306_SWITCHCAPVCC //all China made modules use internal Vcc
  30:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  31:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  32:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #if SSD1306_HEIGHT == 64
  33:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_MAGIC 7
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 2


  34:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #endif
  35:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #if SSD1306_HEIGHT == 32
  36:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_MAGIC 3 // Page end address
  37:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #endif
  38:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #if SSD1306_HEIGHT == 16
  39:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_MAGIC 1 // Page end address
  40:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #endif
  41:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  42:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  43:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  44:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  45:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  46:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #if SSD1306_WIDTH == 128 && SSD1306_HEIGHT == 32
  47:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_COMPINS 0x02
  48:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define SSD_CONTRAST 0x8F
  49:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #elif SSD1306_WIDTH == 128 && SSD1306_HEIGHT == 64
  50:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define SSD_COMPINS 0x12
  51:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#if SSD1306_VCS == SSD1306_EXTERNALVCC
  52:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0x9F
  53:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#else
  54:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0xCF
  55:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#endif
  56:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #elif SSD1306_WIDTH == 96 && SSD1306_HEIGHT == 16
  57:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define SSD_COMPINS 0x02
  58:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#if SSD1306_VCS == SSD1306_EXTERNALVCC
  59:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0x10
  60:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#else
  61:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0xAF
  62:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#endif
  63:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #else
  64:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#error "nezinomas ekrnas"
  65:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #endif
  66:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  67:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  68:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #if SSD1306_VCS == SSD1306_EXTERNALVCC
  69:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define CHRPUMP 0x10
  70:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define PRECHARGE 0x22
  71:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #else
  72:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define CHRPUMP 0x14
  73:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define PRECHARGE 0xF1
  74:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #endif
  75:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  76:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  77:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  78:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  79:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  80:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  81:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* some crazy stuff from kmm */
  82:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_swap(a, b)   (((a) ^= (b)), ((b) ^= (a)), ((a) ^= (b))) ///< No-temp-var swap opera
  83:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  84:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  85:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* ******** GLOBALS ****************** */
  86:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char oled_line=0; //holds current text line, used from autoscroll
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char getRotation(void) { return 0;} //for comaptibility
  88:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  89:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* ********************* I2C blokai = I2C modules ****************** */
  90:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 3


  91:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* send command via i2c to ssd1306. first byte is command/data flag. for I2C only */
  92:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_command1(uint8_t c)
  93:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
  94:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
  95:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[0]=0; // DC=0, CO=0
  96:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=c;
  97:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
  98:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
  99:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 100:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* transmit buffer to device using HAL. First byte in buffer is command/data flag */
 101:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_sendbuffer(uint8_t *c, uint8_t n)
 102:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, c, n,SSD_MAX_DELAY);
 104:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 105:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 106:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* for compatibility with kmm software. Write data or command to i2c device */
 107:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_write(unsigned char dc, unsigned char data)
 108:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 109:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 110:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* copypaste from datasheet:
 111:Core/Src/USER/oled/ssd1306_oled_i2c.c **** A control byte mainly consists of Co and D/C# bits following by six “0” ‘s.
 112:Core/Src/USER/oled/ssd1306_oled_i2c.c **** a. If the Co bit is set as logic “0”, the transmission of the following information will contain
 113:Core/Src/USER/oled/ssd1306_oled_i2c.c **** data bytes only.
 114:Core/Src/USER/oled/ssd1306_oled_i2c.c **** b. The D/C# bit determines the next data byte is acted as a command or a data. If the D/C# bit is
 115:Core/Src/USER/oled/ssd1306_oled_i2c.c **** set to logic “0”, it defines the following data byte as a command. If the D/C# bit is set to
 116:Core/Src/USER/oled/ssd1306_oled_i2c.c **** logic “1”, it defines the following data byte as a data which will be stored at the GDDRAM.
 117:Core/Src/USER/oled/ssd1306_oled_i2c.c **** The GDDRAM column address pointer will be increased by one automatically after each
 118:Core/Src/USER/oled/ssd1306_oled_i2c.c **** data write.
 119:Core/Src/USER/oled/ssd1306_oled_i2c.c **** */
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(dc) {a[0]=0b01000000;} else {a[0]=0;} // ar abu bitai 1?
 121:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 123:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 124:Core/Src/USER/oled/ssd1306_oled_i2c.c **** static char SSD1306_present(void)
 125:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
  26              		.loc 1 125 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 126:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_StatusTypeDef status = HAL_I2C_IsDeviceReady (HI2C, SSD1306_ADR<<1, 1,SSD_MAX_DELAY);
  35              		.loc 1 126 2 view .LVU1
  36              		.loc 1 126 29 is_stmt 0 view .LVU2
  37 0002 C823     		movs	r3, #200
  38 0004 0122     		movs	r2, #1
  39 0006 7821     		movs	r1, #120
  40 0008 0348     		ldr	r0, .L5
  41 000a FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
  42              	.LVL0:
 127:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(status==HAL_OK) {return 1;}else{return 0;} 
  43              		.loc 1 127 2 is_stmt 1 view .LVU3
  44              		.loc 1 127 4 is_stmt 0 view .LVU4
  45 000e 08B9     		cbnz	r0, .L3
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 4


  46              		.loc 1 127 29 view .LVU5
  47 0010 0120     		movs	r0, #1
  48              	.LVL1:
  49              	.L2:
 128:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
  50              		.loc 1 128 1 view .LVU6
  51 0012 08BD     		pop	{r3, pc}
  52              	.LVL2:
  53              	.L3:
 127:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(status==HAL_OK) {return 1;}else{return 0;} 
  54              		.loc 1 127 44 view .LVU7
  55 0014 0020     		movs	r0, #0
  56              	.LVL3:
 127:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(status==HAL_OK) {return 1;}else{return 0;} 
  57              		.loc 1 127 44 view .LVU8
  58 0016 FCE7     		b	.L2
  59              	.L6:
  60              		.align	2
  61              	.L5:
  62 0018 00000000 		.word	.LANCHOR0
  63              		.cfi_endproc
  64              	.LFE89:
  66              		.section	.text.MX_GPIO_Init,"ax",%progbits
  67              		.align	1
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MX_GPIO_Init:
  73              	.LFB132:
  74              		.file 2 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : RTC 9H
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "USER/user.c"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 5


  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_RTC_Init(void);
  61:Core/Src/main.c **** static void MX_TIM1_Init(void);
  62:Core/Src/main.c **** static void MX_I2C2_Init(void);
  63:Core/Src/main.c **** static void MX_IWDG_Init(void);
  64:Core/Src/main.c **** static void MX_TIM2_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PFP */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  70:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /* USER CODE END 0 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****   * @brief  The application entry point.
  76:Core/Src/main.c ****   * @retval int
  77:Core/Src/main.c ****   */
  78:Core/Src/main.c **** int main(void)
  79:Core/Src/main.c **** {
  80:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END 1 */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 6


  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Core/Src/main.c ****   HAL_Init();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END Init */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Configure the system clock */
  94:Core/Src/main.c ****   SystemClock_Config();
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* USER CODE END SysInit */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* Initialize all configured peripherals */
 101:Core/Src/main.c ****   MX_GPIO_Init();
 102:Core/Src/main.c ****   MX_RTC_Init();
 103:Core/Src/main.c ****   MX_TIM1_Init();
 104:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 105:Core/Src/main.c ****   MX_I2C2_Init();
 106:Core/Src/main.c ****   MX_IWDG_Init();
 107:Core/Src/main.c ****   MX_TIM2_Init();
 108:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 109:Core/Src/main.c **** user_init();
 110:Core/Src/main.c ****   /* USER CODE END 2 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* Infinite loop */
 113:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 114:Core/Src/main.c ****   while (1)
 115:Core/Src/main.c ****   {
 116:Core/Src/main.c ****     /* USER CODE END WHILE */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 119:Core/Src/main.c **** 	user_loop();
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c ****   /* USER CODE END 3 */
 122:Core/Src/main.c **** }
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /**
 125:Core/Src/main.c ****   * @brief System Clock Configuration
 126:Core/Src/main.c ****   * @retval None
 127:Core/Src/main.c ****   */
 128:Core/Src/main.c **** void SystemClock_Config(void)
 129:Core/Src/main.c **** {
 130:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 131:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 132:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 135:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE
 138:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 141:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 7


 142:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 143:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 146:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 147:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     Error_Handler();
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 155:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 159:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USB;
 166:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 167:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 168:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     Error_Handler();
 171:Core/Src/main.c ****   }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 176:Core/Src/main.c ****   * @param None
 177:Core/Src/main.c ****   * @retval None
 178:Core/Src/main.c ****   */
 179:Core/Src/main.c **** static void MX_I2C2_Init(void)
 180:Core/Src/main.c **** {
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 189:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 190:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 191:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 192:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 193:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 194:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 195:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 196:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 197:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 198:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 8


 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /**
 209:Core/Src/main.c ****   * @brief IWDG Initialization Function
 210:Core/Src/main.c ****   * @param None
 211:Core/Src/main.c ****   * @retval None
 212:Core/Src/main.c ****   */
 213:Core/Src/main.c **** static void MX_IWDG_Init(void)
 214:Core/Src/main.c **** {
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 223:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 224:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 225:Core/Src/main.c ****   hiwdg.Init.Reload = 3749;
 226:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 227:Core/Src/main.c ****   {
 228:Core/Src/main.c ****     Error_Handler();
 229:Core/Src/main.c ****   }
 230:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** }
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** /**
 237:Core/Src/main.c ****   * @brief RTC Initialization Function
 238:Core/Src/main.c ****   * @param None
 239:Core/Src/main.c ****   * @retval None
 240:Core/Src/main.c ****   */
 241:Core/Src/main.c **** static void MX_RTC_Init(void)
 242:Core/Src/main.c **** {
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 249:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 252:Core/Src/main.c ****   hrtc.Instance = RTC;
 253:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 254:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 255:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 9


 256:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   /** Initialize RTC Only
 259:Core/Src/main.c ****   */
 260:Core/Src/main.c ****   hrtc.Instance = RTC;
 261:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 262:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 263:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 264:Core/Src/main.c ****   {
 265:Core/Src/main.c ****     Error_Handler();
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 269:Core/Src/main.c ****   } else
 270:Core/Src/main.c ****     {
 271:Core/Src/main.c **** 	  HAL_NVIC_SetPriority(RTC_IRQn,15,0);
 272:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(RTC_IRQn);
 273:Core/Src/main.c **** 	}
 274:Core/Src/main.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)!= 0x5051)
 275:Core/Src/main.c **** 	{
 276:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 279:Core/Src/main.c ****   */
 280:Core/Src/main.c ****   sTime.Hours = 0;
 281:Core/Src/main.c ****   sTime.Minutes = 0;
 282:Core/Src/main.c ****   sTime.Seconds = 0;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BIN) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   DateToUpdate.WeekDay = RTC_WEEKDAY_MONDAY;
 289:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 290:Core/Src/main.c ****   DateToUpdate.Date = 1;
 291:Core/Src/main.c ****   DateToUpdate.Year = 0;
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &DateToUpdate, RTC_FORMAT_BIN) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 298:Core/Src/main.c **** 	} // Kitame user code virsuje yra IF komanda. Cia ji uzsidaro.
 299:Core/Src/main.c ****   // LAIKAS BUVO ISSAUGOTAS, NES USER REGISTRAS TURI MAGIC skaiciu 0x5051
 300:Core/Src/main.c ****   
 301:Core/Src/main.c ****   
 302:Core/Src/main.c **** // LAIKRODZIO TIKRINIMAS  
 303:Core/Src/main.c ****   
 304:Core/Src/main.c **** /* read RTC for time */
 305:Core/Src/main.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 306:Core/Src/main.c **** /* read time seconds for epoch */
 307:Core/Src/main.c **** // uint32_t nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*8640
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** //KALENDORIAUS TIKRINIMAS
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** 	//RTC kalendorius FAIL! Pas F103 jo ir nera. Cold boot su gyvu RTC
 312:Core/Src/main.c **** 	RTC_DateTypeDef dienos= {0};
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 10


 313:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 314:Core/Src/main.c **** 	if(dienos.Year < 20) {rtc_check_screwd_calendar();}
 315:Core/Src/main.c **** 	
 316:Core/Src/main.c **** //HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** //Cia irasom MAGIC skaiciu. Jis po pilno reseto ir RTC mirties turi neislikti.
 319:Core/Src/main.c **** 	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x5051);//Write data to the specified backing area registe
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** //HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10);
 322:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c **** }
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** /**
 327:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 328:Core/Src/main.c ****   * @param None
 329:Core/Src/main.c ****   * @retval None
 330:Core/Src/main.c ****   */
 331:Core/Src/main.c **** static void MX_TIM1_Init(void)
 332:Core/Src/main.c **** {
 333:Core/Src/main.c **** 
 334:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 339:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 340:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 341:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 342:Core/Src/main.c **** 
 343:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 346:Core/Src/main.c ****   htim1.Instance = TIM1;
 347:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 348:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 349:Core/Src/main.c ****   htim1.Init.Period = 65535;
 350:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 351:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 352:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 353:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 358:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 363:Core/Src/main.c ****   {
 364:Core/Src/main.c ****     Error_Handler();
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 367:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 368:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 369:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 11


 370:Core/Src/main.c ****     Error_Handler();
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 373:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 374:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 375:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 376:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 377:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 378:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 379:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 380:Core/Src/main.c ****   {
 381:Core/Src/main.c ****     Error_Handler();
 382:Core/Src/main.c ****   }
 383:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 384:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 385:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 386:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 387:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 388:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 389:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 390:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****     Error_Handler();
 393:Core/Src/main.c ****   }
 394:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 397:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 398:Core/Src/main.c **** 
 399:Core/Src/main.c **** }
 400:Core/Src/main.c **** 
 401:Core/Src/main.c **** /**
 402:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 403:Core/Src/main.c ****   * @param None
 404:Core/Src/main.c ****   * @retval None
 405:Core/Src/main.c ****   */
 406:Core/Src/main.c **** static void MX_TIM2_Init(void)
 407:Core/Src/main.c **** {
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 412:Core/Src/main.c **** 
 413:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 414:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 415:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 418:Core/Src/main.c **** 
 419:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 420:Core/Src/main.c ****   htim2.Instance = TIM2;
 421:Core/Src/main.c ****   htim2.Init.Prescaler = 200;
 422:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 423:Core/Src/main.c ****   htim2.Init.Period = 29800;
 424:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 425:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 426:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 12


 427:Core/Src/main.c ****   {
 428:Core/Src/main.c ****     Error_Handler();
 429:Core/Src/main.c ****   }
 430:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 431:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 432:Core/Src/main.c ****   {
 433:Core/Src/main.c ****     Error_Handler();
 434:Core/Src/main.c ****   }
 435:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 436:Core/Src/main.c ****   {
 437:Core/Src/main.c ****     Error_Handler();
 438:Core/Src/main.c ****   }
 439:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 440:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 441:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 442:Core/Src/main.c ****   {
 443:Core/Src/main.c ****     Error_Handler();
 444:Core/Src/main.c ****   }
 445:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 446:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 447:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 448:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 449:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 450:Core/Src/main.c ****   {
 451:Core/Src/main.c ****     Error_Handler();
 452:Core/Src/main.c ****   }
 453:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 456:Core/Src/main.c **** 
 457:Core/Src/main.c **** }
 458:Core/Src/main.c **** 
 459:Core/Src/main.c **** /**
 460:Core/Src/main.c ****   * @brief GPIO Initialization Function
 461:Core/Src/main.c ****   * @param None
 462:Core/Src/main.c ****   * @retval None
 463:Core/Src/main.c ****   */
 464:Core/Src/main.c **** static void MX_GPIO_Init(void)
 465:Core/Src/main.c **** {
  75              		.loc 2 465 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 32
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 70B5     		push	{r4, r5, r6, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 16
  82              		.cfi_offset 4, -16
  83              		.cfi_offset 5, -12
  84              		.cfi_offset 6, -8
  85              		.cfi_offset 14, -4
  86 0002 88B0     		sub	sp, sp, #32
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 48
 466:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  89              		.loc 2 466 3 view .LVU10
  90              		.loc 2 466 20 is_stmt 0 view .LVU11
  91 0004 0024     		movs	r4, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 13


  92 0006 0494     		str	r4, [sp, #16]
  93 0008 0594     		str	r4, [sp, #20]
  94 000a 0694     		str	r4, [sp, #24]
  95 000c 0794     		str	r4, [sp, #28]
 467:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 468:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 471:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  96              		.loc 2 471 3 is_stmt 1 view .LVU12
  97              	.LBB12:
  98              		.loc 2 471 3 view .LVU13
  99              		.loc 2 471 3 view .LVU14
 100 000e 204B     		ldr	r3, .L9
 101 0010 9A69     		ldr	r2, [r3, #24]
 102 0012 42F01002 		orr	r2, r2, #16
 103 0016 9A61     		str	r2, [r3, #24]
 104              		.loc 2 471 3 view .LVU15
 105 0018 9A69     		ldr	r2, [r3, #24]
 106 001a 02F01002 		and	r2, r2, #16
 107 001e 0092     		str	r2, [sp]
 108              		.loc 2 471 3 view .LVU16
 109 0020 009A     		ldr	r2, [sp]
 110              	.LBE12:
 111              		.loc 2 471 3 view .LVU17
 472:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 112              		.loc 2 472 3 view .LVU18
 113              	.LBB13:
 114              		.loc 2 472 3 view .LVU19
 115              		.loc 2 472 3 view .LVU20
 116 0022 9A69     		ldr	r2, [r3, #24]
 117 0024 42F02002 		orr	r2, r2, #32
 118 0028 9A61     		str	r2, [r3, #24]
 119              		.loc 2 472 3 view .LVU21
 120 002a 9A69     		ldr	r2, [r3, #24]
 121 002c 02F02002 		and	r2, r2, #32
 122 0030 0192     		str	r2, [sp, #4]
 123              		.loc 2 472 3 view .LVU22
 124 0032 019A     		ldr	r2, [sp, #4]
 125              	.LBE13:
 126              		.loc 2 472 3 view .LVU23
 473:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 127              		.loc 2 473 3 view .LVU24
 128              	.LBB14:
 129              		.loc 2 473 3 view .LVU25
 130              		.loc 2 473 3 view .LVU26
 131 0034 9A69     		ldr	r2, [r3, #24]
 132 0036 42F00402 		orr	r2, r2, #4
 133 003a 9A61     		str	r2, [r3, #24]
 134              		.loc 2 473 3 view .LVU27
 135 003c 9A69     		ldr	r2, [r3, #24]
 136 003e 02F00402 		and	r2, r2, #4
 137 0042 0292     		str	r2, [sp, #8]
 138              		.loc 2 473 3 view .LVU28
 139 0044 029A     		ldr	r2, [sp, #8]
 140              	.LBE14:
 141              		.loc 2 473 3 view .LVU29
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 14


 474:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 142              		.loc 2 474 3 view .LVU30
 143              	.LBB15:
 144              		.loc 2 474 3 view .LVU31
 145              		.loc 2 474 3 view .LVU32
 146 0046 9A69     		ldr	r2, [r3, #24]
 147 0048 42F00802 		orr	r2, r2, #8
 148 004c 9A61     		str	r2, [r3, #24]
 149              		.loc 2 474 3 view .LVU33
 150 004e 9B69     		ldr	r3, [r3, #24]
 151 0050 03F00803 		and	r3, r3, #8
 152 0054 0393     		str	r3, [sp, #12]
 153              		.loc 2 474 3 view .LVU34
 154 0056 039B     		ldr	r3, [sp, #12]
 155              	.LBE15:
 156              		.loc 2 474 3 view .LVU35
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 477:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 157              		.loc 2 477 3 view .LVU36
 158 0058 0E4E     		ldr	r6, .L9+4
 159 005a 2246     		mov	r2, r4
 160 005c 0121     		movs	r1, #1
 161 005e 3046     		mov	r0, r6
 162 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 163              	.LVL4:
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 480:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 164              		.loc 2 480 3 view .LVU37
 165              		.loc 2 480 23 is_stmt 0 view .LVU38
 166 0064 0125     		movs	r5, #1
 167 0066 0495     		str	r5, [sp, #16]
 481:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 168              		.loc 2 481 3 is_stmt 1 view .LVU39
 169              		.loc 2 481 24 is_stmt 0 view .LVU40
 170 0068 0595     		str	r5, [sp, #20]
 482:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 171              		.loc 2 482 3 is_stmt 1 view .LVU41
 172              		.loc 2 482 24 is_stmt 0 view .LVU42
 173 006a 0694     		str	r4, [sp, #24]
 483:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 174              		.loc 2 483 3 is_stmt 1 view .LVU43
 175              		.loc 2 483 25 is_stmt 0 view .LVU44
 176 006c 0223     		movs	r3, #2
 177 006e 0793     		str	r3, [sp, #28]
 484:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 178              		.loc 2 484 3 is_stmt 1 view .LVU45
 179 0070 04A9     		add	r1, sp, #16
 180 0072 3046     		mov	r0, r6
 181 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 182              	.LVL5:
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   /*Configure GPIO pins : BTN1_Pin BTN2_Pin BTN3_Pin */
 487:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN1_Pin|BTN2_Pin|BTN3_Pin;
 183              		.loc 2 487 3 view .LVU46
 184              		.loc 2 487 23 is_stmt 0 view .LVU47
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 15


 185 0078 4FF46043 		mov	r3, #57344
 186 007c 0493     		str	r3, [sp, #16]
 488:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 187              		.loc 2 488 3 is_stmt 1 view .LVU48
 188              		.loc 2 488 24 is_stmt 0 view .LVU49
 189 007e 0594     		str	r4, [sp, #20]
 489:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 190              		.loc 2 489 3 is_stmt 1 view .LVU50
 191              		.loc 2 489 24 is_stmt 0 view .LVU51
 192 0080 0695     		str	r5, [sp, #24]
 490:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 193              		.loc 2 490 3 is_stmt 1 view .LVU52
 194 0082 04A9     		add	r1, sp, #16
 195 0084 0448     		ldr	r0, .L9+8
 196 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 197              	.LVL6:
 491:Core/Src/main.c **** 
 492:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 493:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 494:Core/Src/main.c **** }
 198              		.loc 2 494 1 is_stmt 0 view .LVU53
 199 008a 08B0     		add	sp, sp, #32
 200              	.LCFI3:
 201              		.cfi_def_cfa_offset 16
 202              		@ sp needed
 203 008c 70BD     		pop	{r4, r5, r6, pc}
 204              	.L10:
 205 008e 00BF     		.align	2
 206              	.L9:
 207 0090 00100240 		.word	1073876992
 208 0094 00080140 		.word	1073809408
 209 0098 000C0140 		.word	1073810432
 210              		.cfi_endproc
 211              	.LFE132:
 213              		.section	.text.rtc_clean,"ax",%progbits
 214              		.align	1
 215              		.global	rtc_clean
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 220              	rtc_clean:
 221              	.LFB68:
 222              		.file 3 "Core/Src/USER/rtc.c"
   1:Core/Src/USER/rtc.c **** /* ********************************************* */
   2:Core/Src/USER/rtc.c **** /* (c)2022 by www.vabolis.lt, Kaunas             */
   3:Core/Src/USER/rtc.c **** /**
   4:Core/Src/USER/rtc.c ****   **********************************************
   5:Core/Src/USER/rtc.c ****   * @file           : rtc.c
   6:Core/Src/USER/rtc.c ****   * @version        : 1.0
   7:Core/Src/USER/rtc.c ****   * @brief          : generic RTC clock and calendar for STM32
   8:Core/Src/USER/rtc.c **** **/  
   9:Core/Src/USER/rtc.c **** /* ********************************************* */
  10:Core/Src/USER/rtc.c **** 
  11:Core/Src/USER/rtc.c **** #include "rtc.h"
  12:Core/Src/USER/rtc.c **** #include "user.h"
  13:Core/Src/USER/rtc.c **** #include "usbd_cdc_if.h"
  14:Core/Src/USER/rtc.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 16


  15:Core/Src/USER/rtc.c **** //#include "epoch.c"
  16:Core/Src/USER/rtc.c **** 
  17:Core/Src/USER/rtc.c **** extern RTC_HandleTypeDef hrtc;
  18:Core/Src/USER/rtc.c **** 
  19:Core/Src/USER/rtc.c **** 
  20:Core/Src/USER/rtc.c **** // ****** pacioje pradzioje, globalus laikas. Galima persideklaruoti, bet ar verta?
  21:Core/Src/USER/rtc.c **** 
  22:Core/Src/USER/rtc.c **** RTC_TimeTypeDef currTime = {0};
  23:Core/Src/USER/rtc.c **** RTC_TimeTypeDef oldTime = {0xFF,0xFF,0xFF}; //del refresh
  24:Core/Src/USER/rtc.c **** volatile unsigned char LastHour=255;
  25:Core/Src/USER/rtc.c **** 
  26:Core/Src/USER/rtc.c **** /* instrukcijos kurias reikia ikelti i main.c */
  27:Core/Src/USER/rtc.c **** 
  28:Core/Src/USER/rtc.c **** //-  /* USER CODE BEGIN Check_RTC_BKUP */
  29:Core/Src/USER/rtc.c **** //-  
  30:Core/Src/USER/rtc.c **** //-  // CIA TIKRINAM AR RTC ir kiti RAM baitai isliko gyvi.
  31:Core/Src/USER/rtc.c **** //-    if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)!= 0x5051)
  32:Core/Src/USER/rtc.c **** //-	{
  33:Core/Src/USER/rtc.c **** //-  /* USER CODE END Check_RTC_BKUP */
  34:Core/Src/USER/rtc.c **** 
  35:Core/Src/USER/rtc.c **** 
  36:Core/Src/USER/rtc.c **** //- /* USER CODE BEGIN RTC_Init 2 */
  37:Core/Src/USER/rtc.c **** //-	} // Kitame user code virsuje yra IF komanda. Cia ji uzsidaro.
  38:Core/Src/USER/rtc.c **** //-  // LAIKAS BUVO ISSAUGOTAS, NES USER REGISTRAS TURI MAGIC skaiciu 0x5051
  39:Core/Src/USER/rtc.c **** //- 
  40:Core/Src/USER/rtc.c **** //- /* read RTC for time */
  41:Core/Src/USER/rtc.c **** //-	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
  42:Core/Src/USER/rtc.c **** //- /* read time seconds for epoch */
  43:Core/Src/USER/rtc.c **** //- // uint32_t nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*
  44:Core/Src/USER/rtc.c **** //-
  45:Core/Src/USER/rtc.c **** //- /* set time to RTC */
  46:Core/Src/USER/rtc.c **** //-	if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
  47:Core/Src/USER/rtc.c **** //-	{
  48:Core/Src/USER/rtc.c **** //-	Error_Handler();
  49:Core/Src/USER/rtc.c **** //-	}
  50:Core/Src/USER/rtc.c **** //-
  51:Core/Src/USER/rtc.c **** //- // DEMESIO! STM32F103 NETURI KALENDORIAUS ir panasu, kad neturi epoch skaitliuko.
  52:Core/Src/USER/rtc.c **** //-	//RTC_DateTypeDef dienos= {0};
  53:Core/Src/USER/rtc.c **** //-	//HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
  54:Core/Src/USER/rtc.c **** //-	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
  55:Core/Src/USER/rtc.c **** //-
  56:Core/Src/USER/rtc.c **** //- //Cia irasom MAGIC skaiciu. Jis po pilno reseto ir RTC mirties turi neislikti.
  57:Core/Src/USER/rtc.c **** //-	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x5051);//Write data to the specified backing area regi
  58:Core/Src/USER/rtc.c **** //-
  59:Core/Src/USER/rtc.c **** //- //HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10);
  60:Core/Src/USER/rtc.c **** //-   /* USER CODE END RTC_Init 2 */
  61:Core/Src/USER/rtc.c **** 
  62:Core/Src/USER/rtc.c **** 
  63:Core/Src/USER/rtc.c **** // sunaikina sena laika. Naudojama LCD grafikos spartinimui
  64:Core/Src/USER/rtc.c **** void rtc_clean(void)
  65:Core/Src/USER/rtc.c **** {
 223              		.loc 3 65 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
  66:Core/Src/USER/rtc.c **** 	oldTime.Hours = 60;
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 17


 228              		.loc 3 66 2 view .LVU55
 229              		.loc 3 66 16 is_stmt 0 view .LVU56
 230 0000 024B     		ldr	r3, .L12
 231 0002 3C22     		movs	r2, #60
 232 0004 1A70     		strb	r2, [r3]
  67:Core/Src/USER/rtc.c **** 	oldTime.Minutes = 60;
 233              		.loc 3 67 2 is_stmt 1 view .LVU57
 234              		.loc 3 67 18 is_stmt 0 view .LVU58
 235 0006 5A70     		strb	r2, [r3, #1]
  68:Core/Src/USER/rtc.c **** 	oldTime.Seconds = 60;
 236              		.loc 3 68 2 is_stmt 1 view .LVU59
 237              		.loc 3 68 18 is_stmt 0 view .LVU60
 238 0008 9A70     		strb	r2, [r3, #2]
  69:Core/Src/USER/rtc.c **** }
 239              		.loc 3 69 1 view .LVU61
 240 000a 7047     		bx	lr
 241              	.L13:
 242              		.align	2
 243              	.L12:
 244 000c 00000000 		.word	.LANCHOR1
 245              		.cfi_endproc
 246              	.LFE68:
 248              		.section	.text.filter_string,"ax",%progbits
 249              		.align	1
 250              		.global	filter_string
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	filter_string:
 256              	.LVL7:
 257              	.LFB69:
  70:Core/Src/USER/rtc.c **** 
  71:Core/Src/USER/rtc.c **** 
  72:Core/Src/USER/rtc.c **** 
  73:Core/Src/USER/rtc.c **** 
  74:Core/Src/USER/rtc.c **** // teksto filtras laiko ir datos nustatymui.
  75:Core/Src/USER/rtc.c **** void filter_string(char *Buf)
  76:Core/Src/USER/rtc.c **** {
 258              		.loc 3 76 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              		.loc 3 76 1 is_stmt 0 view .LVU63
 263 0000 00B5     		push	{lr}
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 14, -4
 267 0002 0246     		mov	r2, r0
  77:Core/Src/USER/rtc.c **** int i=0;
 268              		.loc 3 77 1 is_stmt 1 view .LVU64
 269              	.LVL8:
  78:Core/Src/USER/rtc.c **** int j=0;
 270              		.loc 3 78 1 view .LVU65
  79:Core/Src/USER/rtc.c **** 
  80:Core/Src/USER/rtc.c **** for(i=0;Buf[i] != 0; i++)
 271              		.loc 3 80 1 view .LVU66
 272              		.loc 3 80 6 is_stmt 0 view .LVU67
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 18


 273 0004 4FF0000C 		mov	ip, #0
 274              		.loc 3 80 1 view .LVU68
 275 0008 17E0     		b	.L15
 276              	.LVL9:
 277              	.L16:
  81:Core/Src/USER/rtc.c **** 	{
  82:Core/Src/USER/rtc.c **** 	while(!((Buf[i]>='0' && Buf[i]<='9') || Buf[i]==':' || Buf[i]=='.') && !(Buf[i]==0))
  83:Core/Src/USER/rtc.c **** 		{
  84:Core/Src/USER/rtc.c **** 			for(j=i;Buf[j] !=0; ++j)
  85:Core/Src/USER/rtc.c **** 				{
  86:Core/Src/USER/rtc.c **** 					Buf[j]=Buf[j+1];
 278              		.loc 3 86 6 is_stmt 1 discriminator 3 view .LVU69
 279              		.loc 3 86 16 is_stmt 0 discriminator 3 view .LVU70
 280 000a D118     		adds	r1, r2, r3
 281 000c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 282              		.loc 3 86 12 discriminator 3 view .LVU71
 283 000e D154     		strb	r1, [r2, r3]
  84:Core/Src/USER/rtc.c **** 				{
 284              		.loc 3 84 24 is_stmt 1 discriminator 3 view .LVU72
 285 0010 0133     		adds	r3, r3, #1
 286              	.LVL10:
 287              	.L18:
  84:Core/Src/USER/rtc.c **** 				{
 288              		.loc 3 84 12 discriminator 1 view .LVU73
  84:Core/Src/USER/rtc.c **** 				{
 289              		.loc 3 84 15 is_stmt 0 discriminator 1 view .LVU74
 290 0012 D018     		adds	r0, r2, r3
 291 0014 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
  84:Core/Src/USER/rtc.c **** 				{
 292              		.loc 3 84 4 discriminator 1 view .LVU75
 293 0016 0029     		cmp	r1, #0
 294 0018 F7D1     		bne	.L16
  87:Core/Src/USER/rtc.c **** 				}
  88:Core/Src/USER/rtc.c **** 			Buf[j]=0;
 295              		.loc 3 88 4 is_stmt 1 view .LVU76
 296              		.loc 3 88 10 is_stmt 0 view .LVU77
 297 001a 0023     		movs	r3, #0
 298              	.LVL11:
 299              		.loc 3 88 10 view .LVU78
 300 001c 0370     		strb	r3, [r0]
 301              	.L19:
  82:Core/Src/USER/rtc.c **** 		{
 302              		.loc 3 82 7 is_stmt 1 view .LVU79
  82:Core/Src/USER/rtc.c **** 		{
 303              		.loc 3 82 14 is_stmt 0 view .LVU80
 304 001e 9EF80010 		ldrb	r1, [lr]	@ zero_extendqisi2
  82:Core/Src/USER/rtc.c **** 		{
 305              		.loc 3 82 39 view .LVU81
 306 0022 A1F13003 		sub	r3, r1, #48
 307 0026 DBB2     		uxtb	r3, r3
  82:Core/Src/USER/rtc.c **** 		{
 308              		.loc 3 82 7 view .LVU82
 309 0028 0A2B     		cmp	r3, #10
 310 002a 04D9     		bls	.L17
  82:Core/Src/USER/rtc.c **** 		{
 311              		.loc 3 82 8 discriminator 1 view .LVU83
 312 002c 2E29     		cmp	r1, #46
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 19


 313 002e 02D0     		beq	.L17
  82:Core/Src/USER/rtc.c **** 		{
 314              		.loc 3 82 70 discriminator 2 view .LVU84
 315 0030 09B1     		cbz	r1, .L17
  84:Core/Src/USER/rtc.c **** 				{
 316              		.loc 3 84 9 view .LVU85
 317 0032 6346     		mov	r3, ip
 318 0034 EDE7     		b	.L18
 319              	.L17:
  80:Core/Src/USER/rtc.c **** 	{
 320              		.loc 3 80 22 is_stmt 1 discriminator 2 view .LVU86
  80:Core/Src/USER/rtc.c **** 	{
 321              		.loc 3 80 23 is_stmt 0 discriminator 2 view .LVU87
 322 0036 0CF1010C 		add	ip, ip, #1
 323              	.LVL12:
 324              	.L15:
  80:Core/Src/USER/rtc.c **** 	{
 325              		.loc 3 80 9 is_stmt 1 discriminator 1 view .LVU88
  80:Core/Src/USER/rtc.c **** 	{
 326              		.loc 3 80 12 is_stmt 0 discriminator 1 view .LVU89
 327 003a 02EB0C0E 		add	lr, r2, ip
 328 003e 12F80C30 		ldrb	r3, [r2, ip]	@ zero_extendqisi2
  80:Core/Src/USER/rtc.c **** 	{
 329              		.loc 3 80 1 discriminator 1 view .LVU90
 330 0042 002B     		cmp	r3, #0
 331 0044 EBD1     		bne	.L19
  89:Core/Src/USER/rtc.c **** 		}
  90:Core/Src/USER/rtc.c **** 	}
  91:Core/Src/USER/rtc.c **** }
 332              		.loc 3 91 1 view .LVU91
 333 0046 5DF804FB 		ldr	pc, [sp], #4
 334              		.cfi_endproc
 335              	.LFE69:
 337              		.section	.text.rtc_update,"ax",%progbits
 338              		.align	1
 339              		.global	rtc_update
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	rtc_update:
 345              	.LFB72:
  92:Core/Src/USER/rtc.c **** 
  93:Core/Src/USER/rtc.c **** //nustatyti kalendoriu.
  94:Core/Src/USER/rtc.c **** void rtc_set_date_text(char * Buf)
  95:Core/Src/USER/rtc.c **** {
  96:Core/Src/USER/rtc.c **** filter_string(Buf);
  97:Core/Src/USER/rtc.c **** //22.12.23
  98:Core/Src/USER/rtc.c **** 
  99:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 100:Core/Src/USER/rtc.c **** 
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 103:Core/Src/USER/rtc.c **** 
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 106:Core/Src/USER/rtc.c **** 	
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 20


 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 109:Core/Src/USER/rtc.c **** 	
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 112:Core/Src/USER/rtc.c **** 	
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 114:Core/Src/USER/rtc.c ****   {
 115:Core/Src/USER/rtc.c ****     Error_Handler();
 116:Core/Src/USER/rtc.c ****   }
 117:Core/Src/USER/rtc.c ****   
 118:Core/Src/USER/rtc.c ****   rtc_backup_date();
 119:Core/Src/USER/rtc.c **** }
 120:Core/Src/USER/rtc.c **** 
 121:Core/Src/USER/rtc.c **** //nustatyti laikrodi
 122:Core/Src/USER/rtc.c **** void rtc_set_time_text(char * Buf)
 123:Core/Src/USER/rtc.c **** {
 124:Core/Src/USER/rtc.c **** // echo ATT%TIME% >COMx
 125:Core/Src/USER/rtc.c **** //ATT19:14:32.94
 126:Core/Src/USER/rtc.c **** 
 127:Core/Src/USER/rtc.c **** 
 128:Core/Src/USER/rtc.c **** filter_string(Buf);
 129:Core/Src/USER/rtc.c **** 
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 131:Core/Src/USER/rtc.c **** 
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 133:Core/Src/USER/rtc.c **** 
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 136:Core/Src/USER/rtc.c **** 	
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 139:Core/Src/USER/rtc.c **** 	
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 142:Core/Src/USER/rtc.c **** 	
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 144:Core/Src/USER/rtc.c ****   {
 145:Core/Src/USER/rtc.c ****     Error_Handler();
 146:Core/Src/USER/rtc.c ****   }
 147:Core/Src/USER/rtc.c **** 
 148:Core/Src/USER/rtc.c **** }
 149:Core/Src/USER/rtc.c **** 
 150:Core/Src/USER/rtc.c **** // nuskaityti laika is hardwares.
 151:Core/Src/USER/rtc.c **** void rtc_update(void)
 152:Core/Src/USER/rtc.c **** {
 346              		.loc 3 152 1 is_stmt 1 view -0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350 0000 08B5     		push	{r3, lr}
 351              	.LCFI5:
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 3, -8
 354              		.cfi_offset 14, -4
 153:Core/Src/USER/rtc.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 355              		.loc 3 153 2 view .LVU93
 356 0002 0022     		movs	r2, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 21


 357 0004 0249     		ldr	r1, .L24
 358 0006 0348     		ldr	r0, .L24+4
 359 0008 FFF7FEFF 		bl	HAL_RTC_GetTime
 360              	.LVL13:
 154:Core/Src/USER/rtc.c **** }
 361              		.loc 3 154 1 is_stmt 0 view .LVU94
 362 000c 08BD     		pop	{r3, pc}
 363              	.L25:
 364 000e 00BF     		.align	2
 365              	.L24:
 366 0010 00000000 		.word	.LANCHOR2
 367 0014 00000000 		.word	.LANCHOR3
 368              		.cfi_endproc
 369              	.LFE72:
 371              		.section	.text.rtc_time_string,"ax",%progbits
 372              		.align	1
 373              		.global	rtc_time_string
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 378              	rtc_time_string:
 379              	.LVL14:
 380              	.LFB73:
 155:Core/Src/USER/rtc.c **** 
 156:Core/Src/USER/rtc.c **** //rtc->tekstas
 157:Core/Src/USER/rtc.c **** void rtc_time_string(char * text)
 158:Core/Src/USER/rtc.c **** {
 381              		.loc 3 158 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		.loc 3 158 1 is_stmt 0 view .LVU96
 386 0000 38B5     		push	{r3, r4, r5, lr}
 387              	.LCFI6:
 388              		.cfi_def_cfa_offset 16
 389              		.cfi_offset 3, -16
 390              		.cfi_offset 4, -12
 391              		.cfi_offset 5, -8
 392              		.cfi_offset 14, -4
 393 0002 0446     		mov	r4, r0
 159:Core/Src/USER/rtc.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 394              		.loc 3 159 2 is_stmt 1 view .LVU97
 395 0004 1B4D     		ldr	r5, .L28
 396 0006 0022     		movs	r2, #0
 397 0008 2946     		mov	r1, r5
 398 000a 1B48     		ldr	r0, .L28+4
 399              	.LVL15:
 400              		.loc 3 159 2 is_stmt 0 view .LVU98
 401 000c FFF7FEFF 		bl	HAL_RTC_GetTime
 402              	.LVL16:
 160:Core/Src/USER/rtc.c **** 	text[0]=(currTime.Hours)/10+'0';
 403              		.loc 3 160 2 is_stmt 1 view .LVU99
 404              		.loc 3 160 19 is_stmt 0 view .LVU100
 405 0010 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 406              		.loc 3 160 29 view .LVU101
 407 0012 1A4B     		ldr	r3, .L28+8
 408 0014 A3FB0212 		umull	r1, r2, r3, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 22


 409 0018 D208     		lsrs	r2, r2, #3
 410 001a 3032     		adds	r2, r2, #48
 411              		.loc 3 160 9 view .LVU102
 412 001c 2270     		strb	r2, [r4]
 161:Core/Src/USER/rtc.c **** 	text[1]=(currTime.Hours)%10+'0';
 413              		.loc 3 161 2 is_stmt 1 view .LVU103
 414              		.loc 3 161 19 is_stmt 0 view .LVU104
 415 001e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 416              		.loc 3 161 29 view .LVU105
 417 0020 A3FB0201 		umull	r0, r1, r3, r2
 418 0024 C908     		lsrs	r1, r1, #3
 419 0026 01EB8101 		add	r1, r1, r1, lsl #2
 420 002a A2EB4102 		sub	r2, r2, r1, lsl #1
 421 002e 3032     		adds	r2, r2, #48
 422              		.loc 3 161 9 view .LVU106
 423 0030 6270     		strb	r2, [r4, #1]
 162:Core/Src/USER/rtc.c **** 	text[2]=':';	
 424              		.loc 3 162 2 is_stmt 1 view .LVU107
 425              		.loc 3 162 9 is_stmt 0 view .LVU108
 426 0032 3A20     		movs	r0, #58
 427 0034 A070     		strb	r0, [r4, #2]
 163:Core/Src/USER/rtc.c **** 
 164:Core/Src/USER/rtc.c **** 	text[3]=(currTime.Minutes)/10+'0';
 428              		.loc 3 164 2 is_stmt 1 view .LVU109
 429              		.loc 3 164 19 is_stmt 0 view .LVU110
 430 0036 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 431              		.loc 3 164 31 view .LVU111
 432 0038 A3FB01C2 		umull	ip, r2, r3, r1
 433 003c D208     		lsrs	r2, r2, #3
 434 003e 02F1300C 		add	ip, r2, #48
 435              		.loc 3 164 9 view .LVU112
 436 0042 84F803C0 		strb	ip, [r4, #3]
 165:Core/Src/USER/rtc.c **** 	text[4]=(currTime.Minutes)%10+'0';
 437              		.loc 3 165 2 is_stmt 1 view .LVU113
 438              		.loc 3 165 31 is_stmt 0 view .LVU114
 439 0046 02EB8202 		add	r2, r2, r2, lsl #2
 440 004a A1EB4202 		sub	r2, r1, r2, lsl #1
 441 004e 3032     		adds	r2, r2, #48
 442              		.loc 3 165 9 view .LVU115
 443 0050 2271     		strb	r2, [r4, #4]
 166:Core/Src/USER/rtc.c **** 	text[5]=':';	
 444              		.loc 3 166 2 is_stmt 1 view .LVU116
 445              		.loc 3 166 9 is_stmt 0 view .LVU117
 446 0052 6071     		strb	r0, [r4, #5]
 167:Core/Src/USER/rtc.c **** 
 168:Core/Src/USER/rtc.c **** 	text[6]=(currTime.Seconds)/10+'0';
 447              		.loc 3 168 2 is_stmt 1 view .LVU118
 448              		.loc 3 168 19 is_stmt 0 view .LVU119
 449 0054 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 450              		.loc 3 168 31 view .LVU120
 451 0056 A3FB0213 		umull	r1, r3, r3, r2
 452 005a DB08     		lsrs	r3, r3, #3
 453 005c 03F13001 		add	r1, r3, #48
 454              		.loc 3 168 9 view .LVU121
 455 0060 A171     		strb	r1, [r4, #6]
 169:Core/Src/USER/rtc.c **** 	text[7]=(currTime.Seconds)%10+'0';
 456              		.loc 3 169 2 is_stmt 1 view .LVU122
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 23


 457              		.loc 3 169 31 is_stmt 0 view .LVU123
 458 0062 03EB8303 		add	r3, r3, r3, lsl #2
 459 0066 A2EB4303 		sub	r3, r2, r3, lsl #1
 460 006a 3033     		adds	r3, r3, #48
 461              		.loc 3 169 9 view .LVU124
 462 006c E371     		strb	r3, [r4, #7]
 170:Core/Src/USER/rtc.c **** 	text[8]=0;
 463              		.loc 3 170 2 is_stmt 1 view .LVU125
 464              		.loc 3 170 9 is_stmt 0 view .LVU126
 465 006e 0023     		movs	r3, #0
 466 0070 2372     		strb	r3, [r4, #8]
 171:Core/Src/USER/rtc.c **** }
 467              		.loc 3 171 1 view .LVU127
 468 0072 38BD     		pop	{r3, r4, r5, pc}
 469              	.LVL17:
 470              	.L29:
 471              		.loc 3 171 1 view .LVU128
 472              		.align	2
 473              	.L28:
 474 0074 00000000 		.word	.LANCHOR2
 475 0078 00000000 		.word	.LANCHOR3
 476 007c CDCCCCCC 		.word	-858993459
 477              		.cfi_endproc
 478              	.LFE73:
 480              		.section	.text.rtc_date_string,"ax",%progbits
 481              		.align	1
 482              		.global	rtc_date_string
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 487              	rtc_date_string:
 488              	.LVL18:
 489              	.LFB74:
 172:Core/Src/USER/rtc.c **** void rtc_date_string(char * text)
 173:Core/Src/USER/rtc.c **** {
 490              		.loc 3 173 1 is_stmt 1 view -0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 8
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              		.loc 3 173 1 is_stmt 0 view .LVU130
 495 0000 10B5     		push	{r4, lr}
 496              	.LCFI7:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 4, -8
 499              		.cfi_offset 14, -4
 500 0002 82B0     		sub	sp, sp, #8
 501              	.LCFI8:
 502              		.cfi_def_cfa_offset 16
 503 0004 0446     		mov	r4, r0
 174:Core/Src/USER/rtc.c **** 	RTC_DateTypeDef dienos;
 504              		.loc 3 174 2 is_stmt 1 view .LVU131
 175:Core/Src/USER/rtc.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 505              		.loc 3 175 2 view .LVU132
 506 0006 0022     		movs	r2, #0
 507 0008 01A9     		add	r1, sp, #4
 508 000a 1B48     		ldr	r0, .L32
 509              	.LVL19:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 24


 510              		.loc 3 175 2 is_stmt 0 view .LVU133
 511 000c FFF7FEFF 		bl	HAL_RTC_GetDate
 512              	.LVL20:
 176:Core/Src/USER/rtc.c **** 
 177:Core/Src/USER/rtc.c **** 	text[0]=(dienos.Year)/10+'0';
 513              		.loc 3 177 2 is_stmt 1 view .LVU134
 514              		.loc 3 177 17 is_stmt 0 view .LVU135
 515 0010 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 516              		.loc 3 177 26 view .LVU136
 517 0014 194B     		ldr	r3, .L32+4
 518 0016 A3FB0102 		umull	r0, r2, r3, r1
 519 001a D208     		lsrs	r2, r2, #3
 520 001c 02F13000 		add	r0, r2, #48
 521              		.loc 3 177 9 view .LVU137
 522 0020 2070     		strb	r0, [r4]
 178:Core/Src/USER/rtc.c **** 	text[1]=(dienos.Year)%10+'0';
 523              		.loc 3 178 2 is_stmt 1 view .LVU138
 524              		.loc 3 178 26 is_stmt 0 view .LVU139
 525 0022 02EB8202 		add	r2, r2, r2, lsl #2
 526 0026 A1EB4202 		sub	r2, r1, r2, lsl #1
 527 002a 3032     		adds	r2, r2, #48
 528              		.loc 3 178 9 view .LVU140
 529 002c 6270     		strb	r2, [r4, #1]
 179:Core/Src/USER/rtc.c **** 	text[2]='.';
 530              		.loc 3 179 2 is_stmt 1 view .LVU141
 531              		.loc 3 179 9 is_stmt 0 view .LVU142
 532 002e 2E20     		movs	r0, #46
 533 0030 A070     		strb	r0, [r4, #2]
 180:Core/Src/USER/rtc.c **** 	text[3]=(dienos.Month)/10+'0';
 534              		.loc 3 180 2 is_stmt 1 view .LVU143
 535              		.loc 3 180 17 is_stmt 0 view .LVU144
 536 0032 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 537              		.loc 3 180 27 view .LVU145
 538 0036 A3FB01C2 		umull	ip, r2, r3, r1
 539 003a D208     		lsrs	r2, r2, #3
 540 003c 02F1300C 		add	ip, r2, #48
 541              		.loc 3 180 9 view .LVU146
 542 0040 84F803C0 		strb	ip, [r4, #3]
 181:Core/Src/USER/rtc.c **** 	text[4]=(dienos.Month)%10+'0';
 543              		.loc 3 181 2 is_stmt 1 view .LVU147
 544              		.loc 3 181 27 is_stmt 0 view .LVU148
 545 0044 02EB8202 		add	r2, r2, r2, lsl #2
 546 0048 A1EB4202 		sub	r2, r1, r2, lsl #1
 547 004c 3032     		adds	r2, r2, #48
 548              		.loc 3 181 9 view .LVU149
 549 004e 2271     		strb	r2, [r4, #4]
 182:Core/Src/USER/rtc.c **** 	text[5]='.';
 550              		.loc 3 182 2 is_stmt 1 view .LVU150
 551              		.loc 3 182 9 is_stmt 0 view .LVU151
 552 0050 6071     		strb	r0, [r4, #5]
 183:Core/Src/USER/rtc.c **** 	text[6]=(dienos.Date)/10+'0';
 553              		.loc 3 183 2 is_stmt 1 view .LVU152
 554              		.loc 3 183 17 is_stmt 0 view .LVU153
 555 0052 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 556              		.loc 3 183 26 view .LVU154
 557 0056 A3FB0213 		umull	r1, r3, r3, r2
 558 005a DB08     		lsrs	r3, r3, #3
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 25


 559 005c 03F13001 		add	r1, r3, #48
 560              		.loc 3 183 9 view .LVU155
 561 0060 A171     		strb	r1, [r4, #6]
 184:Core/Src/USER/rtc.c **** 	text[7]=(dienos.Date)%10+'0';
 562              		.loc 3 184 2 is_stmt 1 view .LVU156
 563              		.loc 3 184 26 is_stmt 0 view .LVU157
 564 0062 03EB8303 		add	r3, r3, r3, lsl #2
 565 0066 A2EB4303 		sub	r3, r2, r3, lsl #1
 566 006a 3033     		adds	r3, r3, #48
 567              		.loc 3 184 9 view .LVU158
 568 006c E371     		strb	r3, [r4, #7]
 185:Core/Src/USER/rtc.c **** 	text[8]=0;
 569              		.loc 3 185 2 is_stmt 1 view .LVU159
 570              		.loc 3 185 9 is_stmt 0 view .LVU160
 571 006e 0023     		movs	r3, #0
 572 0070 2372     		strb	r3, [r4, #8]
 186:Core/Src/USER/rtc.c **** }
 573              		.loc 3 186 1 view .LVU161
 574 0072 02B0     		add	sp, sp, #8
 575              	.LCFI9:
 576              		.cfi_def_cfa_offset 8
 577              		@ sp needed
 578 0074 10BD     		pop	{r4, pc}
 579              	.LVL21:
 580              	.L33:
 581              		.loc 3 186 1 view .LVU162
 582 0076 00BF     		.align	2
 583              	.L32:
 584 0078 00000000 		.word	.LANCHOR3
 585 007c CDCCCCCC 		.word	-858993459
 586              		.cfi_endproc
 587              	.LFE74:
 589              		.section	.text.rtc_backup_date,"ax",%progbits
 590              		.align	1
 591              		.global	rtc_backup_date
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 596              	rtc_backup_date:
 597              	.LFB75:
 187:Core/Src/USER/rtc.c **** 
 188:Core/Src/USER/rtc.c **** void rtc_backup_date(void)
 189:Core/Src/USER/rtc.c **** {
 598              		.loc 3 189 1 is_stmt 1 view -0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 8
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602 0000 30B5     		push	{r4, r5, lr}
 603              	.LCFI10:
 604              		.cfi_def_cfa_offset 12
 605              		.cfi_offset 4, -12
 606              		.cfi_offset 5, -8
 607              		.cfi_offset 14, -4
 608 0002 83B0     		sub	sp, sp, #12
 609              	.LCFI11:
 610              		.cfi_def_cfa_offset 24
 190:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 26


 611              		.loc 3 190 1 view .LVU164
 191:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 612              		.loc 3 191 2 view .LVU165
 613              		.loc 3 191 5 is_stmt 0 view .LVU166
 614 0004 0121     		movs	r1, #1
 615 0006 1448     		ldr	r0, .L38
 616 0008 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 617              	.LVL22:
 618              		.loc 3 191 4 view .LVU167
 619 000c 45F25103 		movw	r3, #20561
 620 0010 9842     		cmp	r0, r3
 621 0012 01D0     		beq	.L37
 622              	.L34:
 192:Core/Src/USER/rtc.c **** 	{
 193:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 194:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR2, (uint16_t) (dienos.Year<<8) + dienos.Month);	
 196:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 197:Core/Src/USER/rtc.c **** 	}
 198:Core/Src/USER/rtc.c **** }
 623              		.loc 3 198 1 view .LVU168
 624 0014 03B0     		add	sp, sp, #12
 625              	.LCFI12:
 626              		.cfi_remember_state
 627              		.cfi_def_cfa_offset 12
 628              		@ sp needed
 629 0016 30BD     		pop	{r4, r5, pc}
 630              	.L37:
 631              	.LCFI13:
 632              		.cfi_restore_state
 193:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 633              		.loc 3 193 3 is_stmt 1 view .LVU169
 634 0018 0F4C     		ldr	r4, .L38
 635 001a 0022     		movs	r2, #0
 636 001c 01A9     		add	r1, sp, #4
 637 001e 2046     		mov	r0, r4
 638 0020 FFF7FEFF 		bl	HAL_RTC_GetDate
 639              	.LVL23:
 194:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR2, (uint16_t) (dienos.Year<<8) + dienos.Month);	
 640              		.loc 3 194 3 view .LVU170
 641 0024 0D4D     		ldr	r5, .L38+4
 642 0026 0022     		movs	r2, #0
 643 0028 2946     		mov	r1, r5
 644 002a 2046     		mov	r0, r4
 645 002c FFF7FEFF 		bl	HAL_RTC_GetTime
 646              	.LVL24:
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 647              		.loc 3 195 3 view .LVU171
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 648              		.loc 3 195 61 is_stmt 0 view .LVU172
 649 0030 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 650              		.loc 3 195 79 view .LVU173
 651 0034 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 652              		.loc 3 195 3 view .LVU174
 653 0038 03EB0222 		add	r2, r3, r2, lsl #8
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 27


 654 003c 0221     		movs	r1, #2
 655 003e 2046     		mov	r0, r4
 656 0040 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 657              	.LVL25:
 196:Core/Src/USER/rtc.c **** 	}
 658              		.loc 3 196 3 is_stmt 1 view .LVU175
 196:Core/Src/USER/rtc.c **** 	}
 659              		.loc 3 196 61 is_stmt 0 view .LVU176
 660 0044 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 196:Core/Src/USER/rtc.c **** 	}
 661              		.loc 3 196 81 view .LVU177
 662 0048 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 196:Core/Src/USER/rtc.c **** 	}
 663              		.loc 3 196 3 view .LVU178
 664 004a 03EB0222 		add	r2, r3, r2, lsl #8
 665 004e 0321     		movs	r1, #3
 666 0050 2046     		mov	r0, r4
 667 0052 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 668              	.LVL26:
 669              		.loc 3 198 1 view .LVU179
 670 0056 DDE7     		b	.L34
 671              	.L39:
 672              		.align	2
 673              	.L38:
 674 0058 00000000 		.word	.LANCHOR3
 675 005c 00000000 		.word	.LANCHOR2
 676              		.cfi_endproc
 677              	.LFE75:
 679              		.section	.text.rtc_int_init,"ax",%progbits
 680              		.align	1
 681              		.global	rtc_int_init
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 686              	rtc_int_init:
 687              	.LFB77:
 199:Core/Src/USER/rtc.c **** 
 200:Core/Src/USER/rtc.c **** void rtc_check_screwd_calendar(void)
 201:Core/Src/USER/rtc.c **** {
 202:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 204:Core/Src/USER/rtc.c **** 	{
 205:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 206:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 208:Core/Src/USER/rtc.c **** 		
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 211:Core/Src/USER/rtc.c **** 	
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 214:Core/Src/USER/rtc.c **** 			{
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 219:Core/Src/USER/rtc.c **** 			  {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 28


 220:Core/Src/USER/rtc.c **** 				Error_Handler();
 221:Core/Src/USER/rtc.c **** 			  }
 222:Core/Src/USER/rtc.c **** 			 rtc_backup_date();
 223:Core/Src/USER/rtc.c **** 			}
 224:Core/Src/USER/rtc.c **** 	}
 225:Core/Src/USER/rtc.c **** }
 226:Core/Src/USER/rtc.c **** 
 227:Core/Src/USER/rtc.c **** 
 228:Core/Src/USER/rtc.c **** /* INT INT INT INT INT INT INT INT INT INT INT INT INT INT INT INT */
 229:Core/Src/USER/rtc.c **** 
 230:Core/Src/USER/rtc.c **** /* ijungti RTC pertraukimus */
 231:Core/Src/USER/rtc.c **** void rtc_int_init(void)
 232:Core/Src/USER/rtc.c **** {
 688              		.loc 3 232 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 233:Core/Src/USER/rtc.c **** 	__HAL_RTC_SECOND_ENABLE_IT(&hrtc,RTC_IT_SEC); //turn on RTC clock seconds interrupt
 693              		.loc 3 233 2 view .LVU181
 694 0000 034B     		ldr	r3, .L41
 695 0002 1A68     		ldr	r2, [r3]
 696 0004 1368     		ldr	r3, [r2]
 697 0006 43F00103 		orr	r3, r3, #1
 698 000a 1360     		str	r3, [r2]
 234:Core/Src/USER/rtc.c **** }
 699              		.loc 3 234 1 is_stmt 0 view .LVU182
 700 000c 7047     		bx	lr
 701              	.L42:
 702 000e 00BF     		.align	2
 703              	.L41:
 704 0010 00000000 		.word	.LANCHOR3
 705              		.cfi_endproc
 706              	.LFE77:
 708              		.section	.text.circle_reset,"ax",%progbits
 709              		.align	1
 710              		.global	circle_reset
 711              		.syntax unified
 712              		.thumb
 713              		.thumb_func
 715              	circle_reset:
 716              	.LVL27:
 717              	.LFB79:
 718              		.file 4 "Core/Src/USER/circular_buffer.c"
   1:Core/Src/USER/circular_buffer.c **** /* ********************************************* */
   2:Core/Src/USER/circular_buffer.c **** /* (c)2022 by www.vabolis.lt, Kaunas             */
   3:Core/Src/USER/circular_buffer.c **** /**
   4:Core/Src/USER/circular_buffer.c ****   **********************************************
   5:Core/Src/USER/circular_buffer.c ****   * @file           : circular_buffer.c
   6:Core/Src/USER/circular_buffer.c ****   * @version        : 1.0
   7:Core/Src/USER/circular_buffer.c ****   * @brief          : circular buffer for uart/usb
   8:Core/Src/USER/circular_buffer.c **** **/  
   9:Core/Src/USER/circular_buffer.c **** /* ********************************************* */
  10:Core/Src/USER/circular_buffer.c **** 
  11:Core/Src/USER/circular_buffer.c **** #include "circular_buffer.h"
  12:Core/Src/USER/circular_buffer.c **** 
  13:Core/Src/USER/circular_buffer.c **** /* INSTRUKCIJA
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 29


  14:Core/Src/USER/circular_buffer.c **** #define BUFFER_SIZE 32
  15:Core/Src/USER/circular_buffer.c **** 
  16:Core/Src/USER/circular_buffer.c **** unsigned char testas[BUFFER_SIZE];
  17:Core/Src/USER/circular_buffer.c **** CCBuf cc; //struktura
  18:Core/Src/USER/circular_buffer.c **** //init
  19:Core/Src/USER/circular_buffer.c **** cc.buffer=testas;
  20:Core/Src/USER/circular_buffer.c **** circle_reset(&cc,BUFFER_SIZE);
  21:Core/Src/USER/circular_buffer.c **** 
  22:Core/Src/USER/circular_buffer.c **** //naudojimas
  23:Core/Src/USER/circular_buffer.c **** 
  24:Core/Src/USER/circular_buffer.c **** while(circle_available(&cc)>0) {a=circle_pull(&cc); naudoti duomenys}
  25:Core/Src/USER/circular_buffer.c **** 					
  26:Core/Src/USER/circular_buffer.c **** // uart callback
  27:Core/Src/USER/circular_buffer.c **** circle_push(&cc , baitinisbuferis); // push received byte to circular buffer
  28:Core/Src/USER/circular_buffer.c **** 					
  29:Core/Src/USER/circular_buffer.c **** 
  30:Core/Src/USER/circular_buffer.c **** ************* */
  31:Core/Src/USER/circular_buffer.c **** 
  32:Core/Src/USER/circular_buffer.c **** 
  33:Core/Src/USER/circular_buffer.c **** 
  34:Core/Src/USER/circular_buffer.c **** void circle_reset(CCBuf *c, size_t size)
  35:Core/Src/USER/circular_buffer.c **** {
 719              		.loc 4 35 1 is_stmt 1 view -0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              		@ link register save eliminated.
  36:Core/Src/USER/circular_buffer.c **** 	c->head=0;
 724              		.loc 4 36 2 view .LVU184
 725              		.loc 4 36 9 is_stmt 0 view .LVU185
 726 0000 0023     		movs	r3, #0
 727 0002 4360     		str	r3, [r0, #4]
  37:Core/Src/USER/circular_buffer.c **** 	c->tail=0;
 728              		.loc 4 37 2 is_stmt 1 view .LVU186
 729              		.loc 4 37 9 is_stmt 0 view .LVU187
 730 0004 8360     		str	r3, [r0, #8]
  38:Core/Src/USER/circular_buffer.c **** 	c->max=size; //sizeof(c->buffer); <-- negauna sitos informacijos
 731              		.loc 4 38 2 is_stmt 1 view .LVU188
 732              		.loc 4 38 8 is_stmt 0 view .LVU189
 733 0006 0161     		str	r1, [r0, #16]
  39:Core/Src/USER/circular_buffer.c **** 	c->count=0;
 734              		.loc 4 39 2 is_stmt 1 view .LVU190
 735              		.loc 4 39 10 is_stmt 0 view .LVU191
 736 0008 C360     		str	r3, [r0, #12]
  40:Core/Src/USER/circular_buffer.c **** }
 737              		.loc 4 40 1 view .LVU192
 738 000a 7047     		bx	lr
 739              		.cfi_endproc
 740              	.LFE79:
 742              		.section	.text.circle_push,"ax",%progbits
 743              		.align	1
 744              		.global	circle_push
 745              		.syntax unified
 746              		.thumb
 747              		.thumb_func
 749              	circle_push:
 750              	.LVL28:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 30


 751              	.LFB80:
  41:Core/Src/USER/circular_buffer.c **** 
  42:Core/Src/USER/circular_buffer.c **** void circle_push(CCBuf *c,unsigned char b)
  43:Core/Src/USER/circular_buffer.c **** {
 752              		.loc 4 43 1 is_stmt 1 view -0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 0
 755              		@ frame_needed = 0, uses_anonymous_args = 0
 756              		@ link register save eliminated.
  44:Core/Src/USER/circular_buffer.c **** 	c->buffer[c->head]=b;
 757              		.loc 4 44 2 view .LVU194
 758              		.loc 4 44 3 is_stmt 0 view .LVU195
 759 0000 0268     		ldr	r2, [r0]
 760              		.loc 4 44 13 view .LVU196
 761 0002 4368     		ldr	r3, [r0, #4]
 762              		.loc 4 44 20 view .LVU197
 763 0004 D154     		strb	r1, [r2, r3]
  45:Core/Src/USER/circular_buffer.c **** 	c->head++; if(c->head == c->max) {c->head=0;}
 764              		.loc 4 45 2 is_stmt 1 view .LVU198
 765              		.loc 4 45 3 is_stmt 0 view .LVU199
 766 0006 4368     		ldr	r3, [r0, #4]
 767              		.loc 4 45 9 view .LVU200
 768 0008 0133     		adds	r3, r3, #1
 769 000a 4360     		str	r3, [r0, #4]
 770              		.loc 4 45 13 is_stmt 1 view .LVU201
 771              		.loc 4 45 28 is_stmt 0 view .LVU202
 772 000c 0269     		ldr	r2, [r0, #16]
 773              		.loc 4 45 15 view .LVU203
 774 000e 9342     		cmp	r3, r2
 775 0010 03D0     		beq	.L46
 776              	.L45:
  46:Core/Src/USER/circular_buffer.c **** 	c->count++;
 777              		.loc 4 46 2 is_stmt 1 view .LVU204
 778              		.loc 4 46 3 is_stmt 0 view .LVU205
 779 0012 C368     		ldr	r3, [r0, #12]
 780              		.loc 4 46 10 view .LVU206
 781 0014 0133     		adds	r3, r3, #1
 782 0016 C360     		str	r3, [r0, #12]
  47:Core/Src/USER/circular_buffer.c **** 	//if(c->count == c->max) {c->count=c->max;} //error
  48:Core/Src/USER/circular_buffer.c **** }
 783              		.loc 4 48 1 view .LVU207
 784 0018 7047     		bx	lr
 785              	.L46:
  45:Core/Src/USER/circular_buffer.c **** 	c->count++;
 786              		.loc 4 45 36 is_stmt 1 discriminator 1 view .LVU208
  45:Core/Src/USER/circular_buffer.c **** 	c->count++;
 787              		.loc 4 45 43 is_stmt 0 discriminator 1 view .LVU209
 788 001a 0023     		movs	r3, #0
 789 001c 4360     		str	r3, [r0, #4]
 790 001e F8E7     		b	.L45
 791              		.cfi_endproc
 792              	.LFE80:
 794              		.section	.text.circle_pull,"ax",%progbits
 795              		.align	1
 796              		.global	circle_pull
 797              		.syntax unified
 798              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 31


 799              		.thumb_func
 801              	circle_pull:
 802              	.LVL29:
 803              	.LFB81:
  49:Core/Src/USER/circular_buffer.c **** 
  50:Core/Src/USER/circular_buffer.c **** unsigned char circle_pull(CCBuf *c)
  51:Core/Src/USER/circular_buffer.c **** {
 804              		.loc 4 51 1 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              		.loc 4 51 1 is_stmt 0 view .LVU211
 810 0000 0346     		mov	r3, r0
  52:Core/Src/USER/circular_buffer.c **** unsigned char b;
 811              		.loc 4 52 1 is_stmt 1 view .LVU212
  53:Core/Src/USER/circular_buffer.c **** 	b=c->buffer[c->tail];
 812              		.loc 4 53 2 view .LVU213
 813              		.loc 4 53 5 is_stmt 0 view .LVU214
 814 0002 0168     		ldr	r1, [r0]
 815              		.loc 4 53 15 view .LVU215
 816 0004 8268     		ldr	r2, [r0, #8]
 817              		.loc 4 53 3 view .LVU216
 818 0006 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 819              	.LVL30:
  54:Core/Src/USER/circular_buffer.c **** 	c->tail++;
 820              		.loc 4 54 2 is_stmt 1 view .LVU217
 821              		.loc 4 54 9 is_stmt 0 view .LVU218
 822 0008 0132     		adds	r2, r2, #1
 823 000a 9A60     		str	r2, [r3, #8]
  55:Core/Src/USER/circular_buffer.c **** 	if(c->tail == c->max) {c->tail=0;}
 824              		.loc 4 55 2 is_stmt 1 view .LVU219
 825              		.loc 4 55 17 is_stmt 0 view .LVU220
 826 000c 1969     		ldr	r1, [r3, #16]
 827              		.loc 4 55 4 view .LVU221
 828 000e 8A42     		cmp	r2, r1
 829 0010 03D0     		beq	.L49
 830              	.L48:
  56:Core/Src/USER/circular_buffer.c **** 	c->count--;
 831              		.loc 4 56 2 is_stmt 1 view .LVU222
 832              		.loc 4 56 3 is_stmt 0 view .LVU223
 833 0012 DA68     		ldr	r2, [r3, #12]
 834              		.loc 4 56 10 view .LVU224
 835 0014 013A     		subs	r2, r2, #1
 836 0016 DA60     		str	r2, [r3, #12]
  57:Core/Src/USER/circular_buffer.c **** 	//if(c->count == c->max){c->count=0;} //error
  58:Core/Src/USER/circular_buffer.c **** return b;
 837              		.loc 4 58 1 is_stmt 1 view .LVU225
  59:Core/Src/USER/circular_buffer.c **** }
 838              		.loc 4 59 1 is_stmt 0 view .LVU226
 839 0018 7047     		bx	lr
 840              	.L49:
  55:Core/Src/USER/circular_buffer.c **** 	c->count--;
 841              		.loc 4 55 25 is_stmt 1 discriminator 1 view .LVU227
  55:Core/Src/USER/circular_buffer.c **** 	c->count--;
 842              		.loc 4 55 32 is_stmt 0 discriminator 1 view .LVU228
 843 001a 0022     		movs	r2, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 32


 844 001c 9A60     		str	r2, [r3, #8]
 845 001e F8E7     		b	.L48
 846              		.cfi_endproc
 847              	.LFE81:
 849              		.section	.text.circle_push_buf,"ax",%progbits
 850              		.align	1
 851              		.global	circle_push_buf
 852              		.syntax unified
 853              		.thumb
 854              		.thumb_func
 856              	circle_push_buf:
 857              	.LVL31:
 858              	.LFB82:
  60:Core/Src/USER/circular_buffer.c **** 
  61:Core/Src/USER/circular_buffer.c **** void circle_push_buf(CCBuf *c, unsigned char *b, size_t len)
  62:Core/Src/USER/circular_buffer.c **** {
 859              		.loc 4 62 1 is_stmt 1 view -0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              		.loc 4 62 1 is_stmt 0 view .LVU230
 864 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 865              	.LCFI14:
 866              		.cfi_def_cfa_offset 24
 867              		.cfi_offset 3, -24
 868              		.cfi_offset 4, -20
 869              		.cfi_offset 5, -16
 870              		.cfi_offset 6, -12
 871              		.cfi_offset 7, -8
 872              		.cfi_offset 14, -4
 873 0002 0746     		mov	r7, r0
 874 0004 0E46     		mov	r6, r1
 875 0006 1546     		mov	r5, r2
  63:Core/Src/USER/circular_buffer.c **** size_t i;
 876              		.loc 4 63 1 is_stmt 1 view .LVU231
  64:Core/Src/USER/circular_buffer.c **** for (i=0;i<len;i++){circle_push(c,b[i]);}
 877              		.loc 4 64 1 view .LVU232
 878              	.LVL32:
 879              		.loc 4 64 7 is_stmt 0 view .LVU233
 880 0008 0024     		movs	r4, #0
 881              		.loc 4 64 1 view .LVU234
 882 000a 04E0     		b	.L51
 883              	.LVL33:
 884              	.L52:
 885              		.loc 4 64 21 is_stmt 1 discriminator 3 view .LVU235
 886 000c 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 887 000e 3846     		mov	r0, r7
 888 0010 FFF7FEFF 		bl	circle_push
 889              	.LVL34:
 890              		.loc 4 64 16 discriminator 3 view .LVU236
 891              		.loc 4 64 17 is_stmt 0 discriminator 3 view .LVU237
 892 0014 0134     		adds	r4, r4, #1
 893              	.LVL35:
 894              	.L51:
 895              		.loc 4 64 10 is_stmt 1 discriminator 1 view .LVU238
 896              		.loc 4 64 1 is_stmt 0 discriminator 1 view .LVU239
 897 0016 AC42     		cmp	r4, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 33


 898 0018 F8D3     		bcc	.L52
  65:Core/Src/USER/circular_buffer.c **** }
 899              		.loc 4 65 1 view .LVU240
 900 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 901              		.loc 4 65 1 view .LVU241
 902              		.cfi_endproc
 903              	.LFE82:
 905              		.section	.text.circle_available,"ax",%progbits
 906              		.align	1
 907              		.global	circle_available
 908              		.syntax unified
 909              		.thumb
 910              		.thumb_func
 912              	circle_available:
 913              	.LVL36:
 914              	.LFB83:
  66:Core/Src/USER/circular_buffer.c **** 
  67:Core/Src/USER/circular_buffer.c **** size_t circle_available(CCBuf *c)
  68:Core/Src/USER/circular_buffer.c **** {
 915              		.loc 4 68 1 is_stmt 1 view -0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 0
 918              		@ frame_needed = 0, uses_anonymous_args = 0
 919              		@ link register save eliminated.
  69:Core/Src/USER/circular_buffer.c **** return c->count;
 920              		.loc 4 69 1 view .LVU243
  70:Core/Src/USER/circular_buffer.c **** }
 921              		.loc 4 70 1 is_stmt 0 view .LVU244
 922 0000 C068     		ldr	r0, [r0, #12]
 923              	.LVL37:
 924              		.loc 4 70 1 view .LVU245
 925 0002 7047     		bx	lr
 926              		.cfi_endproc
 927              	.LFE83:
 929              		.section	.text.circle_free,"ax",%progbits
 930              		.align	1
 931              		.global	circle_free
 932              		.syntax unified
 933              		.thumb
 934              		.thumb_func
 936              	circle_free:
 937              	.LVL38:
 938              	.LFB84:
  71:Core/Src/USER/circular_buffer.c **** size_t circle_free(CCBuf *c)
  72:Core/Src/USER/circular_buffer.c **** {
 939              		.loc 4 72 1 is_stmt 1 view -0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              		@ link register save eliminated.
  73:Core/Src/USER/circular_buffer.c **** return c->max - c->count;
 944              		.loc 4 73 1 view .LVU247
 945              		.loc 4 73 9 is_stmt 0 view .LVU248
 946 0000 0269     		ldr	r2, [r0, #16]
 947              		.loc 4 73 18 view .LVU249
 948 0002 C068     		ldr	r0, [r0, #12]
 949              	.LVL39:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 34


  74:Core/Src/USER/circular_buffer.c **** }
 950              		.loc 4 74 1 view .LVU250
 951 0004 101A     		subs	r0, r2, r0
 952 0006 7047     		bx	lr
 953              		.cfi_endproc
 954              	.LFE84:
 956              		.section	.text.getRotation,"ax",%progbits
 957              		.align	1
 958              		.global	getRotation
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	getRotation:
 964              	.LFB85:
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 965              		.loc 1 87 33 is_stmt 1 view -0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969              		@ link register save eliminated.
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 970              		.loc 1 87 35 view .LVU252
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 971              		.loc 1 87 44 is_stmt 0 view .LVU253
 972 0000 0020     		movs	r0, #0
 973 0002 7047     		bx	lr
 974              		.cfi_endproc
 975              	.LFE85:
 977              		.section	.text.SSD1306_command1,"ax",%progbits
 978              		.align	1
 979              		.global	SSD1306_command1
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 984              	SSD1306_command1:
 985              	.LVL40:
 986              	.LFB86:
  93:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 987              		.loc 1 93 1 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 8
 990              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 991              		.loc 1 93 1 is_stmt 0 view .LVU255
 992 0000 00B5     		push	{lr}
 993              	.LCFI15:
 994              		.cfi_def_cfa_offset 4
 995              		.cfi_offset 14, -4
 996 0002 85B0     		sub	sp, sp, #20
 997              	.LCFI16:
 998              		.cfi_def_cfa_offset 24
  94:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[0]=0; // DC=0, CO=0
 999              		.loc 1 94 1 is_stmt 1 view .LVU256
  95:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=c;
 1000              		.loc 1 95 2 view .LVU257
  95:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=c;
 1001              		.loc 1 95 6 is_stmt 0 view .LVU258
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 35


 1002 0004 0023     		movs	r3, #0
 1003 0006 8DF80C30 		strb	r3, [sp, #12]
  96:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 1004              		.loc 1 96 2 is_stmt 1 view .LVU259
  96:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 1005              		.loc 1 96 6 is_stmt 0 view .LVU260
 1006 000a 8DF80D00 		strb	r0, [sp, #13]
  97:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1007              		.loc 1 97 2 is_stmt 1 view .LVU261
 1008 000e C823     		movs	r3, #200
 1009 0010 0093     		str	r3, [sp]
 1010 0012 0223     		movs	r3, #2
 1011 0014 03AA     		add	r2, sp, #12
 1012 0016 7821     		movs	r1, #120
 1013 0018 0248     		ldr	r0, .L59
 1014              	.LVL41:
  97:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1015              		.loc 1 97 2 is_stmt 0 view .LVU262
 1016 001a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1017              	.LVL42:
  98:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 1018              		.loc 1 98 1 view .LVU263
 1019 001e 05B0     		add	sp, sp, #20
 1020              	.LCFI17:
 1021              		.cfi_def_cfa_offset 4
 1022              		@ sp needed
 1023 0020 5DF804FB 		ldr	pc, [sp], #4
 1024              	.L60:
 1025              		.align	2
 1026              	.L59:
 1027 0024 00000000 		.word	.LANCHOR0
 1028              		.cfi_endproc
 1029              	.LFE86:
 1031              		.section	.text.SSD1306_sendbuffer,"ax",%progbits
 1032              		.align	1
 1033              		.global	SSD1306_sendbuffer
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1038              	SSD1306_sendbuffer:
 1039              	.LVL43:
 1040              	.LFB87:
 102:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, c, n,SSD_MAX_DELAY);
 1041              		.loc 1 102 1 is_stmt 1 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 102:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, c, n,SSD_MAX_DELAY);
 1045              		.loc 1 102 1 is_stmt 0 view .LVU265
 1046 0000 00B5     		push	{lr}
 1047              	.LCFI18:
 1048              		.cfi_def_cfa_offset 4
 1049              		.cfi_offset 14, -4
 1050 0002 83B0     		sub	sp, sp, #12
 1051              	.LCFI19:
 1052              		.cfi_def_cfa_offset 16
 1053 0004 0246     		mov	r2, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 36


 1054 0006 0B46     		mov	r3, r1
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1055              		.loc 1 103 2 is_stmt 1 view .LVU266
 1056 0008 C821     		movs	r1, #200
 1057              	.LVL44:
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1058              		.loc 1 103 2 is_stmt 0 view .LVU267
 1059 000a 0091     		str	r1, [sp]
 1060 000c 7821     		movs	r1, #120
 1061 000e 0348     		ldr	r0, .L63
 1062              	.LVL45:
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1063              		.loc 1 103 2 view .LVU268
 1064 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1065              	.LVL46:
 104:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 1066              		.loc 1 104 1 view .LVU269
 1067 0014 03B0     		add	sp, sp, #12
 1068              	.LCFI20:
 1069              		.cfi_def_cfa_offset 4
 1070              		@ sp needed
 1071 0016 5DF804FB 		ldr	pc, [sp], #4
 1072              	.L64:
 1073 001a 00BF     		.align	2
 1074              	.L63:
 1075 001c 00000000 		.word	.LANCHOR0
 1076              		.cfi_endproc
 1077              	.LFE87:
 1079              		.section	.text.SSD1306_write,"ax",%progbits
 1080              		.align	1
 1081              		.global	SSD1306_write
 1082              		.syntax unified
 1083              		.thumb
 1084              		.thumb_func
 1086              	SSD1306_write:
 1087              	.LVL47:
 1088              	.LFB88:
 108:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 1089              		.loc 1 108 1 is_stmt 1 view -0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 8
 1092              		@ frame_needed = 0, uses_anonymous_args = 0
 108:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 1093              		.loc 1 108 1 is_stmt 0 view .LVU271
 1094 0000 00B5     		push	{lr}
 1095              	.LCFI21:
 1096              		.cfi_def_cfa_offset 4
 1097              		.cfi_offset 14, -4
 1098 0002 85B0     		sub	sp, sp, #20
 1099              	.LCFI22:
 1100              		.cfi_def_cfa_offset 24
 109:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* copypaste from datasheet:
 1101              		.loc 1 109 1 is_stmt 1 view .LVU272
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1102              		.loc 1 120 2 view .LVU273
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1103              		.loc 1 120 4 is_stmt 0 view .LVU274
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 37


 1104 0004 78B1     		cbz	r0, .L66
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1105              		.loc 1 120 10 is_stmt 1 discriminator 1 view .LVU275
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1106              		.loc 1 120 14 is_stmt 0 discriminator 1 view .LVU276
 1107 0006 4023     		movs	r3, #64
 1108 0008 8DF80C30 		strb	r3, [sp, #12]
 1109              	.L67:
 121:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 1110              		.loc 1 121 2 is_stmt 1 view .LVU277
 121:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 1111              		.loc 1 121 6 is_stmt 0 view .LVU278
 1112 000c 8DF80D10 		strb	r1, [sp, #13]
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1113              		.loc 1 122 2 is_stmt 1 view .LVU279
 1114 0010 C823     		movs	r3, #200
 1115 0012 0093     		str	r3, [sp]
 1116 0014 0223     		movs	r3, #2
 1117 0016 03AA     		add	r2, sp, #12
 1118 0018 7821     		movs	r1, #120
 1119              	.LVL48:
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1120              		.loc 1 122 2 is_stmt 0 view .LVU280
 1121 001a 0548     		ldr	r0, .L69
 1122              	.LVL49:
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1123              		.loc 1 122 2 view .LVU281
 1124 001c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1125              	.LVL50:
 123:Core/Src/USER/oled/ssd1306_oled_i2c.c **** static char SSD1306_present(void)
 1126              		.loc 1 123 1 view .LVU282
 1127 0020 05B0     		add	sp, sp, #20
 1128              	.LCFI23:
 1129              		.cfi_remember_state
 1130              		.cfi_def_cfa_offset 4
 1131              		@ sp needed
 1132 0022 5DF804FB 		ldr	pc, [sp], #4
 1133              	.LVL51:
 1134              	.L66:
 1135              	.LCFI24:
 1136              		.cfi_restore_state
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1137              		.loc 1 120 34 is_stmt 1 discriminator 2 view .LVU283
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1138              		.loc 1 120 38 is_stmt 0 discriminator 2 view .LVU284
 1139 0026 0023     		movs	r3, #0
 1140 0028 8DF80C30 		strb	r3, [sp, #12]
 1141 002c EEE7     		b	.L67
 1142              	.L70:
 1143 002e 00BF     		.align	2
 1144              	.L69:
 1145 0030 00000000 		.word	.LANCHOR0
 1146              		.cfi_endproc
 1147              	.LFE88:
 1149              		.section	.text.SSD1306_Init,"ax",%progbits
 1150              		.align	1
 1151              		.global	SSD1306_Init
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 38


 1152              		.syntax unified
 1153              		.thumb
 1154              		.thumb_func
 1156              	SSD1306_Init:
 1157              	.LFB90:
 129:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* ********* no more STM stuff bellow this line ****************************** */
 130:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 131:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 132:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* Init OLED screen */
 133:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 134:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 135:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 136:Core/Src/USER/oled/ssd1306_oled_i2c.c **** char SSD1306_Init(void)
 137:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 1158              		.loc 1 137 1 is_stmt 1 view -0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162 0000 08B5     		push	{r3, lr}
 1163              	.LCFI25:
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 3, -8
 1166              		.cfi_offset 14, -4
 138:Core/Src/USER/oled/ssd1306_oled_i2c.c **** SSD1306_command1(SSD1306_DISPLAYOFF);
 1167              		.loc 1 138 1 view .LVU286
 1168 0002 AE20     		movs	r0, #174
 1169 0004 FFF7FEFF 		bl	SSD1306_command1
 1170              	.LVL52:
 139:Core/Src/USER/oled/ssd1306_oled_i2c.c **** HAL_Delay(2000); //test on hardware
 1171              		.loc 1 139 1 view .LVU287
 1172 0008 4FF4FA60 		mov	r0, #2000
 1173 000c FFF7FEFF 		bl	HAL_Delay
 1174              	.LVL53:
 140:Core/Src/USER/oled/ssd1306_oled_i2c.c **** if(SSD1306_present()==0) {return 0;}
 1175              		.loc 1 140 1 view .LVU288
 1176              		.loc 1 140 4 is_stmt 0 view .LVU289
 1177 0010 FFF7FEFF 		bl	SSD1306_present
 1178              	.LVL54:
 1179              		.loc 1 140 3 view .LVU290
 1180 0014 00B9     		cbnz	r0, .L74
 1181              	.L72:
 141:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 142:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Configurations are send to device in chunks of data. It is faster and smaller.
 143:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // For final products (with static configuration) it is possible to set all config
 144:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // in one array and send all data in one block.
 145:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 146:Core/Src/USER/oled/ssd1306_oled_i2c.c **** static unsigned char init1[]= {0x00, // first byte command !
 147:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYOFF,
 148:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETDISPLAYCLOCKDIV,	0x80, //7:4 bitai-freq (default 0b1000). 3:0-div(1-16)
 149:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETMULTIPLEX, SSD1306_HEIGHT-1,  //
 150:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETDISPLAYOFFSET,             // 0xD3
 151:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	0x0,                                  // no offset
 152:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETSTARTLINE | 0x0,           // line #0
 153:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_CHARGEPUMP,CHRPUMP,           // 0x8D
 154:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 155:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_MEMORYMODE,                   // 0x20
 156:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	0x00,                                 // 0x0 act like ks0108
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 39


 157:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SEGREMAP | 0x1,
 158:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_COMSCANDEC,
 159:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 160:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETCOMPINS,SSD_COMPINS,
 161:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETCONTRAST,SSD_CONTRAST,
 162:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETPRECHARGE,PRECHARGE, //((vccstate == SSD1306_EXTERNALVCC) ? 0x22 : 0xF1)};
 163:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 164:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETVCOMDETECT,               // 0xDB
 165:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	0x40,
 166:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYALLON_RESUME,         // 0xA4
 167:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_NORMALDISPLAY,               // 0xA6
 168:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DEACTIVATE_SCROLL,
 169:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYON };                 // Main screen turn on
 170:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(init1, sizeof(init1));
 171:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 172:Core/Src/USER/oled/ssd1306_oled_i2c.c **** return 1;
 173:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1182              		.loc 1 173 1 view .LVU291
 1183 0016 08BD     		pop	{r3, pc}
 1184              	.L74:
 146:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYOFF,
 1185              		.loc 1 146 1 is_stmt 1 view .LVU292
 170:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 1186              		.loc 1 170 2 view .LVU293
 1187 0018 1B21     		movs	r1, #27
 1188 001a 0248     		ldr	r0, .L75
 1189 001c FFF7FEFF 		bl	SSD1306_sendbuffer
 1190              	.LVL55:
 172:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1191              		.loc 1 172 1 view .LVU294
 172:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1192              		.loc 1 172 8 is_stmt 0 view .LVU295
 1193 0020 0120     		movs	r0, #1
 1194 0022 F8E7     		b	.L72
 1195              	.L76:
 1196              		.align	2
 1197              	.L75:
 1198 0024 00000000 		.word	.LANCHOR4
 1199              		.cfi_endproc
 1200              	.LFE90:
 1202              		.section	.text.SSD1306_off,"ax",%progbits
 1203              		.align	1
 1204              		.global	SSD1306_off
 1205              		.syntax unified
 1206              		.thumb
 1207              		.thumb_func
 1209              	SSD1306_off:
 1210              	.LFB91:
 174:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 175:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* small subroutines to make world brighter */
 176:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_off(void){SSD1306_command1(SSD1306_DISPLAYOFF);}
 1211              		.loc 1 176 23 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 1215 0000 08B5     		push	{r3, lr}
 1216              	.LCFI26:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 40


 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 3, -8
 1219              		.cfi_offset 14, -4
 1220              		.loc 1 176 24 view .LVU297
 1221 0002 AE20     		movs	r0, #174
 1222 0004 FFF7FEFF 		bl	SSD1306_command1
 1223              	.LVL56:
 1224              		.loc 1 176 61 is_stmt 0 view .LVU298
 1225 0008 08BD     		pop	{r3, pc}
 1226              		.cfi_endproc
 1227              	.LFE91:
 1229              		.section	.text.SSD1306_on,"ax",%progbits
 1230              		.align	1
 1231              		.global	SSD1306_on
 1232              		.syntax unified
 1233              		.thumb
 1234              		.thumb_func
 1236              	SSD1306_on:
 1237              	.LFB92:
 177:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_on(void){SSD1306_command1(SSD1306_DISPLAYON);}
 1238              		.loc 1 177 22 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 1242 0000 08B5     		push	{r3, lr}
 1243              	.LCFI27:
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 3, -8
 1246              		.cfi_offset 14, -4
 1247              		.loc 1 177 23 view .LVU300
 1248 0002 AF20     		movs	r0, #175
 1249 0004 FFF7FEFF 		bl	SSD1306_command1
 1250              	.LVL57:
 1251              		.loc 1 177 59 is_stmt 0 view .LVU301
 1252 0008 08BD     		pop	{r3, pc}
 1253              		.cfi_endproc
 1254              	.LFE92:
 1256              		.section	.text.SSD1306_invert,"ax",%progbits
 1257              		.align	1
 1258              		.global	SSD1306_invert
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1263              	SSD1306_invert:
 1264              	.LFB93:
 178:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_invert(void){SSD1306_command1(SSD1306_INVERTDISPLAY);}
 1265              		.loc 1 178 26 is_stmt 1 view -0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269 0000 08B5     		push	{r3, lr}
 1270              	.LCFI28:
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 3, -8
 1273              		.cfi_offset 14, -4
 1274              		.loc 1 178 27 view .LVU303
 1275 0002 A720     		movs	r0, #167
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 41


 1276 0004 FFF7FEFF 		bl	SSD1306_command1
 1277              	.LVL58:
 1278              		.loc 1 178 67 is_stmt 0 view .LVU304
 1279 0008 08BD     		pop	{r3, pc}
 1280              		.cfi_endproc
 1281              	.LFE93:
 1283              		.section	.text.SSD1306_normal,"ax",%progbits
 1284              		.align	1
 1285              		.global	SSD1306_normal
 1286              		.syntax unified
 1287              		.thumb
 1288              		.thumb_func
 1290              	SSD1306_normal:
 1291              	.LFB94:
 179:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_normal(void){SSD1306_command1(SSD1306_NORMALDISPLAY);}
 1292              		.loc 1 179 26 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296 0000 08B5     		push	{r3, lr}
 1297              	.LCFI29:
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 3, -8
 1300              		.cfi_offset 14, -4
 1301              		.loc 1 179 27 view .LVU306
 1302 0002 A620     		movs	r0, #166
 1303 0004 FFF7FEFF 		bl	SSD1306_command1
 1304              	.LVL59:
 1305              		.loc 1 179 67 is_stmt 0 view .LVU307
 1306 0008 08BD     		pop	{r3, pc}
 1307              		.cfi_endproc
 1308              	.LFE94:
 1310              		.section	.text.SSD1306_flip,"ax",%progbits
 1311              		.align	1
 1312              		.global	SSD1306_flip
 1313              		.syntax unified
 1314              		.thumb
 1315              		.thumb_func
 1317              	SSD1306_flip:
 1318              	.LVL60:
 1319              	.LFB95:
 180:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_flip(unsigned char m){SSD1306_command1((m==0)? SSD1306_COMSCANINC : SSD1306_COMSCANDEC
 1320              		.loc 1 180 35 is_stmt 1 view -0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              		.loc 1 180 35 is_stmt 0 view .LVU309
 1325 0000 08B5     		push	{r3, lr}
 1326              	.LCFI30:
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 3, -8
 1329              		.cfi_offset 14, -4
 1330              		.loc 1 180 36 is_stmt 1 view .LVU310
 1331 0002 18B9     		cbnz	r0, .L87
 1332 0004 C020     		movs	r0, #192
 1333              	.LVL61:
 1334              	.L86:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 42


 1335              		.loc 1 180 36 is_stmt 0 discriminator 4 view .LVU311
 1336 0006 FFF7FEFF 		bl	SSD1306_command1
 1337              	.LVL62:
 1338              		.loc 1 180 102 discriminator 4 view .LVU312
 1339 000a 08BD     		pop	{r3, pc}
 1340              	.LVL63:
 1341              	.L87:
 1342              		.loc 1 180 36 view .LVU313
 1343 000c C820     		movs	r0, #200
 1344              	.LVL64:
 1345              		.loc 1 180 36 view .LVU314
 1346 000e FAE7     		b	.L86
 1347              		.cfi_endproc
 1348              	.LFE95:
 1350              		.section	.text.SSD1306_set_addr_mode,"ax",%progbits
 1351              		.align	1
 1352              		.global	SSD1306_set_addr_mode
 1353              		.syntax unified
 1354              		.thumb
 1355              		.thumb_func
 1357              	SSD1306_set_addr_mode:
 1358              	.LVL65:
 1359              	.LFB96:
 181:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 182:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_set_addr_mode(uint8_t mode) {
 1360              		.loc 1 182 42 is_stmt 1 view -0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 8
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364              		.loc 1 182 42 is_stmt 0 view .LVU316
 1365 0000 00B5     		push	{lr}
 1366              	.LCFI31:
 1367              		.cfi_def_cfa_offset 4
 1368              		.cfi_offset 14, -4
 1369 0002 83B0     		sub	sp, sp, #12
 1370              	.LCFI32:
 1371              		.cfi_def_cfa_offset 16
 183:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// 0 -> horizontal (write column, increment column pointer, at column overrun reset column pointer
 184:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// 1 -> vertical (write column, increment page pointer, at page overrun reset page pointer and inc
 185:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// 2 -> page (write column, increment column pointer, reset column pointer at overrun)
 186:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char data[]={0,SSD1306_MEMORYMODE,((mode < 2) ? mode : 0)};
 1372              		.loc 1 186 2 is_stmt 1 view .LVU317
 1373              		.loc 1 186 16 is_stmt 0 view .LVU318
 1374 0004 0023     		movs	r3, #0
 1375 0006 8DF80430 		strb	r3, [sp, #4]
 1376 000a 2023     		movs	r3, #32
 1377 000c 8DF80530 		strb	r3, [sp, #5]
 1378 0010 0128     		cmp	r0, #1
 1379 0012 00D9     		bls	.L90
 1380 0014 0020     		movs	r0, #0
 1381              	.LVL66:
 1382              	.L90:
 1383              		.loc 1 186 16 discriminator 4 view .LVU319
 1384 0016 8DF80600 		strb	r0, [sp, #6]
 187:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(data, sizeof(data));	
 1385              		.loc 1 187 2 is_stmt 1 discriminator 4 view .LVU320
 1386 001a 0321     		movs	r1, #3
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 43


 1387 001c 01A8     		add	r0, sp, #4
 1388 001e FFF7FEFF 		bl	SSD1306_sendbuffer
 1389              	.LVL67:
 188:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1390              		.loc 1 188 1 is_stmt 0 discriminator 4 view .LVU321
 1391 0022 03B0     		add	sp, sp, #12
 1392              	.LCFI33:
 1393              		.cfi_def_cfa_offset 4
 1394              		@ sp needed
 1395 0024 5DF804FB 		ldr	pc, [sp], #4
 1396              		.cfi_endproc
 1397              	.LFE96:
 1399              		.section	.text.SSD1306_scroll,"ax",%progbits
 1400              		.align	1
 1401              		.global	SSD1306_scroll
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1406              	SSD1306_scroll:
 1407              	.LVL68:
 1408              	.LFB97:
 189:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_scroll(unsigned char n)
 190:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 1409              		.loc 1 190 1 is_stmt 1 view -0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 8
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              		.loc 1 190 1 is_stmt 0 view .LVU323
 1414 0000 00B5     		push	{lr}
 1415              	.LCFI34:
 1416              		.cfi_def_cfa_offset 4
 1417              		.cfi_offset 14, -4
 1418 0002 83B0     		sub	sp, sp, #12
 1419              	.LCFI35:
 1420              		.cfi_def_cfa_offset 16
 191:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char data[]={0,SSD1306_SETDISPLAYOFFSET,n & 0b01111111};
 1421              		.loc 1 191 2 is_stmt 1 view .LVU324
 1422              		.loc 1 191 16 is_stmt 0 view .LVU325
 1423 0004 0023     		movs	r3, #0
 1424 0006 8DF80430 		strb	r3, [sp, #4]
 1425 000a D323     		movs	r3, #211
 1426 000c 8DF80530 		strb	r3, [sp, #5]
 1427              		.loc 1 191 53 view .LVU326
 1428 0010 00F07F00 		and	r0, r0, #127
 1429              	.LVL69:
 1430              		.loc 1 191 16 view .LVU327
 1431 0014 8DF80600 		strb	r0, [sp, #6]
 192:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(data, sizeof(data));
 1432              		.loc 1 192 2 is_stmt 1 view .LVU328
 1433 0018 0321     		movs	r1, #3
 1434 001a 01A8     		add	r0, sp, #4
 1435 001c FFF7FEFF 		bl	SSD1306_sendbuffer
 1436              	.LVL70:
 193:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1437              		.loc 1 193 1 is_stmt 0 view .LVU329
 1438 0020 03B0     		add	sp, sp, #12
 1439              	.LCFI36:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 44


 1440              		.cfi_def_cfa_offset 4
 1441              		@ sp needed
 1442 0022 5DF804FB 		ldr	pc, [sp], #4
 1443              		.cfi_endproc
 1444              	.LFE97:
 1446              		.section	.text.SSD1306_put_tile,"ax",%progbits
 1447              		.align	1
 1448              		.global	SSD1306_put_tile
 1449              		.syntax unified
 1450              		.thumb
 1451              		.thumb_func
 1453              	SSD1306_put_tile:
 1454              	.LVL71:
 1455              	.LFB98:
 194:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* send buffer to device. We need to add first "command/data" byte in the buffer.
 195:Core/Src/USER/oled/ssd1306_oled_i2c.c ****    This gives us all rush with allocation, copying and flushing memory. */
 196:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_put_tile(uint8_t *tile, uint8_t limit) {
 1456              		.loc 1 196 53 is_stmt 1 view -0
 1457              		.cfi_startproc
 1458              		@ args = 0, pretend = 0, frame = 0
 1459              		@ frame_needed = 0, uses_anonymous_args = 0
 1460              		.loc 1 196 53 is_stmt 0 view .LVU331
 1461 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1462              	.LCFI37:
 1463              		.cfi_def_cfa_offset 24
 1464              		.cfi_offset 3, -24
 1465              		.cfi_offset 4, -20
 1466              		.cfi_offset 5, -16
 1467              		.cfi_offset 6, -12
 1468              		.cfi_offset 7, -8
 1469              		.cfi_offset 14, -4
 1470 0002 0646     		mov	r6, r0
 1471 0004 0D46     		mov	r5, r1
 197:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char *tempbuf=(unsigned char *) malloc(limit+1);
 1472              		.loc 1 197 2 is_stmt 1 view .LVU332
 1473              		.loc 1 197 55 is_stmt 0 view .LVU333
 1474 0006 4F1C     		adds	r7, r1, #1
 1475              		.loc 1 197 43 view .LVU334
 1476 0008 3846     		mov	r0, r7
 1477              	.LVL72:
 1478              		.loc 1 197 43 view .LVU335
 1479 000a FFF7FEFF 		bl	malloc
 1480              	.LVL73:
 1481              		.loc 1 197 43 view .LVU336
 1482 000e 0446     		mov	r4, r0
 1483              	.LVL74:
 198:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	memcpy(tempbuf+1,tile,limit); tempbuf[0]=0b01000000; //data mode
 1484              		.loc 1 198 2 is_stmt 1 view .LVU337
 1485 0010 2A46     		mov	r2, r5
 1486 0012 3146     		mov	r1, r6
 1487 0014 0130     		adds	r0, r0, #1
 1488              	.LVL75:
 1489              		.loc 1 198 2 is_stmt 0 view .LVU338
 1490 0016 FFF7FEFF 		bl	memcpy
 1491              	.LVL76:
 1492              		.loc 1 198 32 is_stmt 1 view .LVU339
 1493              		.loc 1 198 42 is_stmt 0 view .LVU340
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 45


 1494 001a 4023     		movs	r3, #64
 1495 001c 2370     		strb	r3, [r4]
 199:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(tempbuf,limit+1);
 1496              		.loc 1 199 2 is_stmt 1 view .LVU341
 1497 001e F9B2     		uxtb	r1, r7
 1498 0020 2046     		mov	r0, r4
 1499 0022 FFF7FEFF 		bl	SSD1306_sendbuffer
 1500              	.LVL77:
 200:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	free(tempbuf);
 1501              		.loc 1 200 2 view .LVU342
 1502 0026 2046     		mov	r0, r4
 1503 0028 FFF7FEFF 		bl	free
 1504              	.LVL78:
 201:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1505              		.loc 1 201 1 is_stmt 0 view .LVU343
 1506 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1507              		.loc 1 201 1 view .LVU344
 1508              		.cfi_endproc
 1509              	.LFE98:
 1511              		.section	.text.SSD1306_putc_raw,"ax",%progbits
 1512              		.align	1
 1513              		.global	SSD1306_putc_raw
 1514              		.syntax unified
 1515              		.thumb
 1516              		.thumb_func
 1518              	SSD1306_putc_raw:
 1519              	.LVL79:
 1520              	.LFB99:
 202:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 203:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* print char (raw mode)-according font table */
 204:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_putc_raw(char c) {
 1521              		.loc 1 204 31 is_stmt 1 view -0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525              		.loc 1 204 31 is_stmt 0 view .LVU346
 1526 0000 08B5     		push	{r3, lr}
 1527              	.LCFI38:
 1528              		.cfi_def_cfa_offset 8
 1529              		.cfi_offset 3, -8
 1530              		.cfi_offset 14, -4
 205:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_put_tile(font+(c<<3),8);
 1531              		.loc 1 205 2 is_stmt 1 view .LVU347
 1532 0002 0821     		movs	r1, #8
 1533 0004 024B     		ldr	r3, .L99
 1534 0006 03EBC000 		add	r0, r3, r0, lsl #3
 1535              	.LVL80:
 1536              		.loc 1 205 2 is_stmt 0 view .LVU348
 1537 000a FFF7FEFF 		bl	SSD1306_put_tile
 1538              	.LVL81:
 206:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1539              		.loc 1 206 1 view .LVU349
 1540 000e 08BD     		pop	{r3, pc}
 1541              	.L100:
 1542              		.align	2
 1543              	.L99:
 1544 0010 00000000 		.word	.LANCHOR5
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 46


 1545              		.cfi_endproc
 1546              	.LFE99:
 1548              		.section	.text.SSD1306_putc,"ax",%progbits
 1549              		.align	1
 1550              		.global	SSD1306_putc
 1551              		.syntax unified
 1552              		.thumb
 1553              		.thumb_func
 1555              	SSD1306_putc:
 1556              	.LVL82:
 1557              	.LFB100:
 207:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 208:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* print char from ASCII */
 209:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_putc(char c) {
 1558              		.loc 1 209 27 is_stmt 1 view -0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 0, uses_anonymous_args = 0
 1562              		.loc 1 209 27 is_stmt 0 view .LVU351
 1563 0000 08B5     		push	{r3, lr}
 1564              	.LCFI39:
 1565              		.cfi_def_cfa_offset 8
 1566              		.cfi_offset 3, -8
 1567              		.cfi_offset 14, -4
 210:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// remap from petscii to ascii, shifts drawing characters into the lower 32 ascii cells
 211:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(c > 'A' && c < 'Z') { }               // upper-case ascii range
 1568              		.loc 1 211 2 is_stmt 1 view .LVU352
 1569              		.loc 1 211 13 is_stmt 0 view .LVU353
 1570 0002 A0F14203 		sub	r3, r0, #66
 1571 0006 DBB2     		uxtb	r3, r3
 1572              		.loc 1 211 4 view .LVU354
 1573 0008 172B     		cmp	r3, #23
 1574 000a 06D9     		bls	.L102
 212:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 'a' && c < 'z') { c -= 96; } // lower-case ascii range
 1575              		.loc 1 212 7 is_stmt 1 view .LVU355
 1576              		.loc 1 212 18 is_stmt 0 view .LVU356
 1577 000c A0F16203 		sub	r3, r0, #98
 1578 0010 DBB2     		uxtb	r3, r3
 1579              		.loc 1 212 9 view .LVU357
 1580 0012 172B     		cmp	r3, #23
 1581 0014 04D8     		bhi	.L103
 1582              		.loc 1 212 32 is_stmt 1 discriminator 1 view .LVU358
 1583              		.loc 1 212 34 is_stmt 0 discriminator 1 view .LVU359
 1584 0016 6038     		subs	r0, r0, #96
 1585              	.LVL83:
 1586              		.loc 1 212 34 discriminator 1 view .LVU360
 1587 0018 C0B2     		uxtb	r0, r0
 1588              	.LVL84:
 1589              	.L102:
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c < 32) { c += 96; }             // low ascii
 215:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1590              		.loc 1 215 2 is_stmt 1 view .LVU361
 1591 001a FFF7FEFF 		bl	SSD1306_putc_raw
 1592              	.LVL85:
 216:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1593              		.loc 1 216 1 is_stmt 0 view .LVU362
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 47


 1594 001e 08BD     		pop	{r3, pc}
 1595              	.LVL86:
 1596              	.L103:
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 1597              		.loc 1 213 7 is_stmt 1 view .LVU363
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 1598              		.loc 1 213 17 is_stmt 0 view .LVU364
 1599 0020 A0F12003 		sub	r3, r0, #32
 1600 0024 DBB2     		uxtb	r3, r3
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 1601              		.loc 1 213 9 view .LVU365
 1602 0026 1F2B     		cmp	r3, #31
 1603 0028 F7D9     		bls	.L102
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1604              		.loc 1 214 7 is_stmt 1 view .LVU366
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1605              		.loc 1 214 9 is_stmt 0 view .LVU367
 1606 002a 1F28     		cmp	r0, #31
 1607 002c F5D8     		bhi	.L102
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1608              		.loc 1 214 20 is_stmt 1 discriminator 1 view .LVU368
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1609              		.loc 1 214 22 is_stmt 0 discriminator 1 view .LVU369
 1610 002e 6030     		adds	r0, r0, #96
 1611              	.LVL87:
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1612              		.loc 1 214 22 discriminator 1 view .LVU370
 1613 0030 C0B2     		uxtb	r0, r0
 1614              	.LVL88:
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1615              		.loc 1 214 22 discriminator 1 view .LVU371
 1616 0032 F2E7     		b	.L102
 1617              		.cfi_endproc
 1618              	.LFE100:
 1620              		.section	.text.SSD1306_move_raw,"ax",%progbits
 1621              		.align	1
 1622              		.global	SSD1306_move_raw
 1623              		.syntax unified
 1624              		.thumb
 1625              		.thumb_func
 1627              	SSD1306_move_raw:
 1628              	.LVL89:
 1629              	.LFB101:
 217:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 218:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* move to position in pixels/bytes */
 219:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_move_raw(uint8_t row, uint8_t col) {
 1630              		.loc 1 219 49 is_stmt 1 view -0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 8
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              		.loc 1 219 49 is_stmt 0 view .LVU373
 1635 0000 00B5     		push	{lr}
 1636              	.LCFI40:
 1637              		.cfi_def_cfa_offset 4
 1638              		.cfi_offset 14, -4
 1639 0002 83B0     		sub	sp, sp, #12
 1640              	.LCFI41:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 48


 1641              		.cfi_def_cfa_offset 16
 220:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(col > 127) { col = 127; }
 1642              		.loc 1 220 2 is_stmt 1 view .LVU374
 1643              		.loc 1 220 4 is_stmt 0 view .LVU375
 1644 0004 11F0800F 		tst	r1, #128
 1645 0008 1CD1     		bne	.L111
 1646              	.LVL90:
 1647              	.L106:
 221:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }
 1648              		.loc 1 221 2 is_stmt 1 view .LVU376
 1649              		.loc 1 221 4 is_stmt 0 view .LVU377
 1650 000a 0728     		cmp	r0, #7
 1651 000c 00D9     		bls	.L107
 1652              		.loc 1 221 20 view .LVU378
 1653 000e 0720     		movs	r0, #7
 1654              	.LVL91:
 1655              	.L107:
 222:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char data[]={0,SSD1306_COLUMNADDR,col,0x7F,SSD1306_PAGEADDR,row,SSD_MAGIC};
 1656              		.loc 1 222 2 is_stmt 1 view .LVU379
 1657              		.loc 1 222 16 is_stmt 0 view .LVU380
 1658 0010 0023     		movs	r3, #0
 1659 0012 8DF80030 		strb	r3, [sp]
 1660 0016 2123     		movs	r3, #33
 1661 0018 8DF80130 		strb	r3, [sp, #1]
 1662 001c 8DF80210 		strb	r1, [sp, #2]
 1663 0020 7F23     		movs	r3, #127
 1664 0022 8DF80330 		strb	r3, [sp, #3]
 1665 0026 2223     		movs	r3, #34
 1666 0028 8DF80430 		strb	r3, [sp, #4]
 1667 002c 8DF80500 		strb	r0, [sp, #5]
 1668 0030 0323     		movs	r3, #3
 1669 0032 8DF80630 		strb	r3, [sp, #6]
 223:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(data, sizeof(data));
 1670              		.loc 1 223 2 is_stmt 1 view .LVU381
 1671 0036 0721     		movs	r1, #7
 1672              	.LVL92:
 1673              		.loc 1 223 2 is_stmt 0 view .LVU382
 1674 0038 6846     		mov	r0, sp
 1675              	.LVL93:
 1676              		.loc 1 223 2 view .LVU383
 1677 003a FFF7FEFF 		bl	SSD1306_sendbuffer
 1678              	.LVL94:
 224:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1679              		.loc 1 224 1 view .LVU384
 1680 003e 03B0     		add	sp, sp, #12
 1681              	.LCFI42:
 1682              		.cfi_remember_state
 1683              		.cfi_def_cfa_offset 4
 1684              		@ sp needed
 1685 0040 5DF804FB 		ldr	pc, [sp], #4
 1686              	.LVL95:
 1687              	.L111:
 1688              	.LCFI43:
 1689              		.cfi_restore_state
 220:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }
 1690              		.loc 1 220 22 view .LVU385
 1691 0044 7F21     		movs	r1, #127
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 49


 1692              	.LVL96:
 220:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }
 1693              		.loc 1 220 22 view .LVU386
 1694 0046 E0E7     		b	.L106
 1695              		.cfi_endproc
 1696              	.LFE101:
 1698              		.section	.text.SSD1306_move,"ax",%progbits
 1699              		.align	1
 1700              		.global	SSD1306_move
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1705              	SSD1306_move:
 1706              	.LVL97:
 1707              	.LFB102:
 225:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 226:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* move to position in char positions */
 227:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_move(uint8_t row, uint8_t col) {
 1708              		.loc 1 227 45 is_stmt 1 view -0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712              		.loc 1 227 45 is_stmt 0 view .LVU388
 1713 0000 08B5     		push	{r3, lr}
 1714              	.LCFI44:
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 3, -8
 1717              		.cfi_offset 14, -4
 228:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(col > 15) { col = 15; }
 1718              		.loc 1 228 2 is_stmt 1 view .LVU389
 1719              		.loc 1 228 4 is_stmt 0 view .LVU390
 1720 0002 0F29     		cmp	r1, #15
 1721 0004 00D9     		bls	.L113
 1722              		.loc 1 228 21 view .LVU391
 1723 0006 0F21     		movs	r1, #15
 1724              	.LVL98:
 1725              	.L113:
 229:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }	
 1726              		.loc 1 229 2 is_stmt 1 view .LVU392
 1727              		.loc 1 229 4 is_stmt 0 view .LVU393
 1728 0008 0728     		cmp	r0, #7
 1729 000a 00D9     		bls	.L114
 1730              		.loc 1 229 20 view .LVU394
 1731 000c 0720     		movs	r0, #7
 1732              	.LVL99:
 1733              	.L114:
 230:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move_raw(row, col << 3);
 1734              		.loc 1 230 2 is_stmt 1 view .LVU395
 1735 000e C900     		lsls	r1, r1, #3
 1736              	.LVL100:
 1737              		.loc 1 230 2 is_stmt 0 view .LVU396
 1738 0010 01F0F801 		and	r1, r1, #248
 1739 0014 FFF7FEFF 		bl	SSD1306_move_raw
 1740              	.LVL101:
 231:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1741              		.loc 1 231 1 view .LVU397
 1742 0018 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 50


 1743              		.cfi_endproc
 1744              	.LFE102:
 1746              		.section	.text.SSD1306_home,"ax",%progbits
 1747              		.align	1
 1748              		.global	SSD1306_home
 1749              		.syntax unified
 1750              		.thumb
 1751              		.thumb_func
 1753              	SSD1306_home:
 1754              	.LFB103:
 232:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 233:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* move to "home" positions. Just make it easier to type */
 234:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_home() {SSD1306_move_raw(0,0);}
 1755              		.loc 1 234 21 is_stmt 1 view -0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 0, uses_anonymous_args = 0
 1759 0000 08B5     		push	{r3, lr}
 1760              	.LCFI45:
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 3, -8
 1763              		.cfi_offset 14, -4
 1764              		.loc 1 234 22 view .LVU399
 1765 0002 0021     		movs	r1, #0
 1766 0004 0846     		mov	r0, r1
 1767 0006 FFF7FEFF 		bl	SSD1306_move_raw
 1768              	.LVL102:
 1769              		.loc 1 234 44 is_stmt 0 view .LVU400
 1770 000a 08BD     		pop	{r3, pc}
 1771              		.cfi_endproc
 1772              	.LFE103:
 1774              		.section	.text.SSD1306_clear,"ax",%progbits
 1775              		.align	1
 1776              		.global	SSD1306_clear
 1777              		.syntax unified
 1778              		.thumb
 1779              		.thumb_func
 1781              	SSD1306_clear:
 1782              	.LVL103:
 1783              	.LFB104:
 235:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 236:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* clear screen/fill screen with byte pattern */
 237:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_clear(unsigned char c) {
 1784              		.loc 1 237 37 is_stmt 1 view -0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 16
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788              		.loc 1 237 37 is_stmt 0 view .LVU402
 1789 0000 10B5     		push	{r4, lr}
 1790              	.LCFI46:
 1791              		.cfi_def_cfa_offset 8
 1792              		.cfi_offset 4, -8
 1793              		.cfi_offset 14, -4
 1794 0002 84B0     		sub	sp, sp, #16
 1795              	.LCFI47:
 1796              		.cfi_def_cfa_offset 24
 1797 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 51


 238:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_home();
 1798              		.loc 1 238 2 is_stmt 1 view .LVU403
 1799 0006 FFF7FEFF 		bl	SSD1306_home
 1800              	.LVL104:
 239:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// just fill 128*64 pixels = 8192 bits = 1024bytes =1kb.
 240:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// I do it in 8 bytes blocks= 128 times.
 241:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char tmp[]={0b01000000,c,c,c,c,c,c,c,c};
 1801              		.loc 1 241 1 view .LVU404
 1802              		.loc 1 241 15 is_stmt 0 view .LVU405
 1803 000a 4023     		movs	r3, #64
 1804 000c 8DF80430 		strb	r3, [sp, #4]
 1805 0010 8DF80540 		strb	r4, [sp, #5]
 1806 0014 8DF80640 		strb	r4, [sp, #6]
 1807 0018 8DF80740 		strb	r4, [sp, #7]
 1808 001c 8DF80840 		strb	r4, [sp, #8]
 1809 0020 8DF80940 		strb	r4, [sp, #9]
 1810 0024 8DF80A40 		strb	r4, [sp, #10]
 1811 0028 8DF80B40 		strb	r4, [sp, #11]
 1812 002c 8DF80C40 		strb	r4, [sp, #12]
 242:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 128; i > 0; i--) {SSD1306_sendbuffer(tmp, sizeof(tmp));}
 1813              		.loc 1 242 2 is_stmt 1 view .LVU406
 1814              	.LBB16:
 1815              		.loc 1 242 6 view .LVU407
 1816              	.LVL105:
 1817              		.loc 1 242 14 is_stmt 0 view .LVU408
 1818 0030 8024     		movs	r4, #128
 1819              		.loc 1 242 2 view .LVU409
 1820 0032 05E0     		b	.L121
 1821              	.LVL106:
 1822              	.L122:
 1823              		.loc 1 242 36 is_stmt 1 discriminator 3 view .LVU410
 1824 0034 0921     		movs	r1, #9
 1825 0036 01A8     		add	r0, sp, #4
 1826 0038 FFF7FEFF 		bl	SSD1306_sendbuffer
 1827              	.LVL107:
 1828              		.loc 1 242 30 discriminator 3 view .LVU411
 1829              		.loc 1 242 31 is_stmt 0 discriminator 3 view .LVU412
 1830 003c 013C     		subs	r4, r4, #1
 1831              	.LVL108:
 1832              		.loc 1 242 31 discriminator 3 view .LVU413
 1833 003e E4B2     		uxtb	r4, r4
 1834              	.LVL109:
 1835              	.L121:
 1836              		.loc 1 242 23 is_stmt 1 discriminator 1 view .LVU414
 1837              		.loc 1 242 2 is_stmt 0 discriminator 1 view .LVU415
 1838 0040 002C     		cmp	r4, #0
 1839 0042 F7D1     		bne	.L122
 1840              	.LBE16:
 243:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_scroll(0);
 1841              		.loc 1 243 2 is_stmt 1 view .LVU416
 1842 0044 0020     		movs	r0, #0
 1843 0046 FFF7FEFF 		bl	SSD1306_scroll
 1844              	.LVL110:
 244:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	oled_line=0;
 1845              		.loc 1 244 2 view .LVU417
 1846              		.loc 1 244 11 is_stmt 0 view .LVU418
 1847 004a 024B     		ldr	r3, .L124
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 52


 1848 004c 0022     		movs	r2, #0
 1849 004e 1A70     		strb	r2, [r3]
 245:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1850              		.loc 1 245 1 view .LVU419
 1851 0050 04B0     		add	sp, sp, #16
 1852              	.LCFI48:
 1853              		.cfi_def_cfa_offset 8
 1854              		@ sp needed
 1855 0052 10BD     		pop	{r4, pc}
 1856              	.LVL111:
 1857              	.L125:
 1858              		.loc 1 245 1 view .LVU420
 1859              		.align	2
 1860              	.L124:
 1861 0054 00000000 		.word	.LANCHOR6
 1862              		.cfi_endproc
 1863              	.LFE104:
 1865              		.section	.text.SSD1306_fill,"ax",%progbits
 1866              		.align	1
 1867              		.global	SSD1306_fill
 1868              		.syntax unified
 1869              		.thumb
 1870              		.thumb_func
 1872              	SSD1306_fill:
 1873              	.LVL112:
 1874              	.LFB105:
 246:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 247:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* I don't know what this is doint. Ask kmm */
 248:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_fill(uint8_t row, uint8_t col, uint8_t count, uint8_t max, uint32_t pattern, int8_t ps
 1875              		.loc 1 248 106 is_stmt 1 view -0
 1876              		.cfi_startproc
 1877              		@ args = 8, pretend = 0, frame = 0
 1878              		@ frame_needed = 0, uses_anonymous_args = 0
 1879              		.loc 1 248 106 is_stmt 0 view .LVU422
 1880 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1881              	.LCFI49:
 1882              		.cfi_def_cfa_offset 32
 1883              		.cfi_offset 4, -32
 1884              		.cfi_offset 5, -28
 1885              		.cfi_offset 6, -24
 1886              		.cfi_offset 7, -20
 1887              		.cfi_offset 8, -16
 1888              		.cfi_offset 9, -12
 1889              		.cfi_offset 10, -8
 1890              		.cfi_offset 14, -4
 1891 0004 1746     		mov	r7, r2
 1892 0006 1E46     		mov	r6, r3
 1893 0008 DDF82090 		ldr	r9, [sp, #32]
 1894 000c 9DF92480 		ldrsb	r8, [sp, #36]
 249:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(row, col);
 1895              		.loc 1 249 2 is_stmt 1 view .LVU423
 1896 0010 FFF7FEFF 		bl	SSD1306_move
 1897              	.LVL113:
 250:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t pstate = 0;
 1898              		.loc 1 250 2 view .LVU424
 251:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char i;
 1899              		.loc 1 251 2 view .LVU425
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 53


 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(i=max; i > 0; i--) {
 1900              		.loc 1 252 2 view .LVU426
 1901              		.loc 1 252 7 is_stmt 0 view .LVU427
 1902 0014 3546     		mov	r5, r6
 250:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t pstate = 0;
 1903              		.loc 1 250 10 view .LVU428
 1904 0016 0024     		movs	r4, #0
 1905              		.loc 1 252 2 view .LVU429
 1906 0018 12E0     		b	.L127
 1907              	.LVL114:
 1908              	.L135:
 253:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 254:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			if(pshift < 0) {
 255:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ << 3)) & 0xFF);
 1909              		.loc 1 255 5 is_stmt 1 view .LVU430
 1910              		.loc 1 255 41 is_stmt 0 view .LVU431
 1911 001a 04F1010A 		add	r10, r4, #1
 1912 001e 5FFA8AFA 		uxtb	r10, r10
 1913              	.LVL115:
 1914              		.loc 1 255 44 view .LVU432
 1915 0022 E100     		lsls	r1, r4, #3
 1916              		.loc 1 255 31 view .LVU433
 1917 0024 29FA01F1 		lsr	r1, r9, r1
 1918              		.loc 1 255 5 view .LVU434
 1919 0028 C9B2     		uxtb	r1, r1
 1920 002a 0120     		movs	r0, #1
 1921 002c FFF7FEFF 		bl	SSD1306_write
 1922              	.LVL116:
 1923              		.loc 1 255 41 view .LVU435
 1924 0030 5446     		mov	r4, r10
 1925 0032 18E0     		b	.L130
 1926              	.LVL117:
 1927              	.L128:
 256:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			} 
 257:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			else 
 258:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			{
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ + pshift)) & 0xFF);
 260:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			pstate = (pstate > 3) ? 0 : pstate;
 262:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 263:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		else {
 264:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_write(1, 0x00);
 1928              		.loc 1 264 4 is_stmt 1 view .LVU436
 1929 0034 0021     		movs	r1, #0
 1930 0036 0120     		movs	r0, #1
 1931 0038 FFF7FEFF 		bl	SSD1306_write
 1932              	.LVL118:
 1933              	.L131:
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1934              		.loc 1 252 20 discriminator 2 view .LVU437
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1935              		.loc 1 252 21 is_stmt 0 discriminator 2 view .LVU438
 1936 003c 691E     		subs	r1, r5, #1
 1937 003e CDB2     		uxtb	r5, r1
 1938              	.LVL119:
 1939              	.L127:
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 54


 1940              		.loc 1 252 13 is_stmt 1 discriminator 1 view .LVU439
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1941              		.loc 1 252 2 is_stmt 0 discriminator 1 view .LVU440
 1942 0040 ADB1     		cbz	r5, .L134
 253:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1943              		.loc 1 253 3 is_stmt 1 view .LVU441
 253:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1944              		.loc 1 253 5 is_stmt 0 view .LVU442
 1945 0042 BE42     		cmp	r6, r7
 1946 0044 F6D2     		bcs	.L128
 254:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ << 3)) & 0xFF);
 1947              		.loc 1 254 4 is_stmt 1 view .LVU443
 254:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ << 3)) & 0xFF);
 1948              		.loc 1 254 6 is_stmt 0 view .LVU444
 1949 0046 B8F1000F 		cmp	r8, #0
 1950 004a E6DB     		blt	.L135
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1951              		.loc 1 259 5 is_stmt 1 view .LVU445
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1952              		.loc 1 259 41 is_stmt 0 view .LVU446
 1953 004c 04F1010A 		add	r10, r4, #1
 1954 0050 5FFA8AFA 		uxtb	r10, r10
 1955              	.LVL120:
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1956              		.loc 1 259 44 view .LVU447
 1957 0054 08EB0401 		add	r1, r8, r4
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1958              		.loc 1 259 31 view .LVU448
 1959 0058 29FA01F1 		lsr	r1, r9, r1
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1960              		.loc 1 259 5 view .LVU449
 1961 005c C9B2     		uxtb	r1, r1
 1962 005e 0120     		movs	r0, #1
 1963 0060 FFF7FEFF 		bl	SSD1306_write
 1964              	.LVL121:
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1965              		.loc 1 259 41 view .LVU450
 1966 0064 5446     		mov	r4, r10
 1967              	.L130:
 1968              	.LVL122:
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 1969              		.loc 1 261 4 is_stmt 1 view .LVU451
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 1970              		.loc 1 261 11 is_stmt 0 view .LVU452
 1971 0066 032C     		cmp	r4, #3
 1972 0068 E8D9     		bls	.L131
 1973 006a 0024     		movs	r4, #0
 1974              	.LVL123:
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 1975              		.loc 1 261 11 view .LVU453
 1976 006c E6E7     		b	.L131
 1977              	.LVL124:
 1978              	.L134:
 265:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}		
 266:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 267:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1979              		.loc 1 267 1 view .LVU454
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 55


 1980 006e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1981              		.loc 1 267 1 view .LVU455
 1982              		.cfi_endproc
 1983              	.LFE105:
 1985              		.section	.text.SSD1306_putxy,"ax",%progbits
 1986              		.align	1
 1987              		.global	SSD1306_putxy
 1988              		.syntax unified
 1989              		.thumb
 1990              		.thumb_func
 1992              	SSD1306_putxy:
 1993              	.LVL125:
 1994              	.LFB106:
 268:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 269:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 270:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Draw a tile at an arbitrary pixel location (top, left) using an 8 byte tile buffer referenced by
 271:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Slower than oled_putc(), potentially substantially so; only use for things that need
 272:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // finer grained positioning than is possible with tile cells, like sprites.
 273:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Clips right and bottom edges properly; untested and not expected to work with negative positions
 274:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_putxy(uint8_t left_pxl, uint8_t top_pxl, uint8_t *tile) {
 1995              		.loc 1 274 70 is_stmt 1 view -0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 16
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 1999              		.loc 1 274 70 is_stmt 0 view .LVU457
 2000 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2001              	.LCFI50:
 2002              		.cfi_def_cfa_offset 20
 2003              		.cfi_offset 4, -20
 2004              		.cfi_offset 5, -16
 2005              		.cfi_offset 6, -12
 2006              		.cfi_offset 7, -8
 2007              		.cfi_offset 14, -4
 2008 0002 85B0     		sub	sp, sp, #20
 2009              	.LCFI51:
 2010              		.cfi_def_cfa_offset 40
 2011 0004 0546     		mov	r5, r0
 2012 0006 0E46     		mov	r6, r1
 275:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t tbuf[8], obuf[8];
 2013              		.loc 1 275 2 is_stmt 1 view .LVU458
 276:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t top_cell = top_pxl >> 3;
 2014              		.loc 1 276 2 view .LVU459
 2015              		.loc 1 276 10 is_stmt 0 view .LVU460
 2016 0008 CF08     		lsrs	r7, r1, #3
 2017              	.LVL126:
 277:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t left_cell = left_pxl >> 3;
 2018              		.loc 1 277 2 is_stmt 1 view .LVU461
 278:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	int8_t voff = top_pxl - ((top_cell << 3) - 1);
 2019              		.loc 1 278 2 view .LVU462
 2020              		.loc 1 278 24 is_stmt 0 view .LVU463
 2021 000a 01F00700 		and	r0, r1, #7
 2022              	.LVL127:
 279:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	int8_t hoff = left_pxl - ((left_cell << 3) - 1);
 2023              		.loc 1 279 2 is_stmt 1 view .LVU464
 2024              		.loc 1 279 25 is_stmt 0 view .LVU465
 2025 000e 05F00704 		and	r4, r5, #7
 2026 0012 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 56


 2027              	.LVL128:
 280:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	
 281:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(voff == 0 && hoff == 0) {
 2028              		.loc 1 281 2 is_stmt 1 view .LVU466
 2029              		.loc 1 281 4 is_stmt 0 view .LVU467
 2030 0014 0130     		adds	r0, r0, #1
 2031              	.LVL129:
 2032              		.loc 1 281 4 view .LVU468
 2033 0016 0023     		movs	r3, #0
 2034 0018 10E0     		b	.L139
 2035              	.LVL130:
 2036              	.L140:
 2037              	.LBB17:
 282:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(top_cell, left_pxl >> 3);
 283:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_put_tile(tile, 8);
 284:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		return;
 285:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 286:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else {
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		for(uint8_t tcol = 0; tcol < 8; tcol++) { // tile column
 288:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2038              		.loc 1 288 4 is_stmt 1 discriminator 3 view .LVU469
 2039              		.loc 1 288 22 is_stmt 0 discriminator 3 view .LVU470
 2040 001a 12F803C0 		ldrb	ip, [r2, r3]	@ zero_extendqisi2
 2041              		.loc 1 288 30 discriminator 3 view .LVU471
 2042 001e 0CFA00FE 		lsl	lr, ip, r0
 2043              		.loc 1 288 15 discriminator 3 view .LVU472
 2044 0022 03F11001 		add	r1, r3, #16
 2045 0026 6944     		add	r1, sp, r1
 2046 0028 01F808EC 		strb	lr, [r1, #-8]
 289:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			obuf[tcol] = (tile[tcol]) >> (8 - (uint8_t)voff); //shift right (up) by voff
 2047              		.loc 1 289 4 is_stmt 1 discriminator 3 view .LVU473
 2048              		.loc 1 289 36 is_stmt 0 discriminator 3 view .LVU474
 2049 002c C0F1080E 		rsb	lr, r0, #8
 2050              		.loc 1 289 30 discriminator 3 view .LVU475
 2051 0030 4CFA0EFC 		asr	ip, ip, lr
 2052              		.loc 1 289 15 discriminator 3 view .LVU476
 2053 0034 01F810CC 		strb	ip, [r1, #-16]
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2054              		.loc 1 287 35 is_stmt 1 discriminator 3 view .LVU477
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2055              		.loc 1 287 39 is_stmt 0 discriminator 3 view .LVU478
 2056 0038 0133     		adds	r3, r3, #1
 2057              	.LVL131:
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2058              		.loc 1 287 39 discriminator 3 view .LVU479
 2059 003a DBB2     		uxtb	r3, r3
 2060              	.LVL132:
 2061              	.L139:
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2062              		.loc 1 287 25 is_stmt 1 discriminator 1 view .LVU480
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2063              		.loc 1 287 3 is_stmt 0 discriminator 1 view .LVU481
 2064 003c 072B     		cmp	r3, #7
 2065 003e ECD9     		bls	.L140
 2066              	.LBE17:
 290:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 291:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 57


 292:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move_raw(top_cell, left_pxl); // move_raw(row[0:7], column[0:127]) rows and pixels for ex
 2067              		.loc 1 292 3 is_stmt 1 view .LVU482
 2068 0040 2946     		mov	r1, r5
 2069 0042 3846     		mov	r0, r7
 2070              	.LVL133:
 2071              		.loc 1 292 3 is_stmt 0 view .LVU483
 2072 0044 FFF7FEFF 		bl	SSD1306_move_raw
 2073              	.LVL134:
 293:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_put_tile(tbuf, (left_pxl > (SSD1306_WIDTH - 8)) ? 8 - hoff : 8);
 2074              		.loc 1 293 3 is_stmt 1 view .LVU484
 2075 0048 782D     		cmp	r5, #120
 2076 004a 0AD9     		bls	.L145
 2077              		.loc 1 293 3 is_stmt 0 discriminator 1 view .LVU485
 2078 004c C4F10804 		rsb	r4, r4, #8
 2079              	.LVL135:
 2080              		.loc 1 293 3 discriminator 1 view .LVU486
 2081 0050 E4B2     		uxtb	r4, r4
 2082              	.L141:
 2083              		.loc 1 293 3 discriminator 4 view .LVU487
 2084 0052 2146     		mov	r1, r4
 2085 0054 02A8     		add	r0, sp, #8
 2086 0056 FFF7FEFF 		bl	SSD1306_put_tile
 2087              	.LVL136:
 294:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(top_pxl < (SSD1306_HEIGHT - 8)) {
 2088              		.loc 1 294 3 is_stmt 1 discriminator 4 view .LVU488
 2089              		.loc 1 294 5 is_stmt 0 discriminator 4 view .LVU489
 2090 005a 172E     		cmp	r6, #23
 2091 005c 03D9     		bls	.L147
 2092              	.L136:
 295:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_move_raw((top_cell + 1), left_pxl);
 296:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_put_tile(obuf, (left_pxl > (SSD1306_WIDTH - 8)) ? 8 - hoff : 8);
 297:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}		
 298:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}	
 299:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2093              		.loc 1 299 1 view .LVU490
 2094 005e 05B0     		add	sp, sp, #20
 2095              	.LCFI52:
 2096              		.cfi_remember_state
 2097              		.cfi_def_cfa_offset 20
 2098              		@ sp needed
 2099 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 2100              	.LVL137:
 2101              	.L145:
 2102              	.LCFI53:
 2103              		.cfi_restore_state
 293:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(top_pxl < (SSD1306_HEIGHT - 8)) {
 2104              		.loc 1 293 3 view .LVU491
 2105 0062 0824     		movs	r4, #8
 2106              	.LVL138:
 293:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(top_pxl < (SSD1306_HEIGHT - 8)) {
 2107              		.loc 1 293 3 view .LVU492
 2108 0064 F5E7     		b	.L141
 2109              	.L147:
 295:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_move_raw((top_cell + 1), left_pxl);
 2110              		.loc 1 295 4 is_stmt 1 view .LVU493
 2111 0066 2946     		mov	r1, r5
 2112 0068 781C     		adds	r0, r7, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 58


 2113 006a FFF7FEFF 		bl	SSD1306_move_raw
 2114              	.LVL139:
 296:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}		
 2115              		.loc 1 296 4 view .LVU494
 2116 006e 2146     		mov	r1, r4
 2117 0070 6846     		mov	r0, sp
 2118 0072 FFF7FEFF 		bl	SSD1306_put_tile
 2119              	.LVL140:
 2120 0076 F2E7     		b	.L136
 2121              		.cfi_endproc
 2122              	.LFE106:
 2124              		.section	.text.SSD1306_puts,"ax",%progbits
 2125              		.align	1
 2126              		.global	SSD1306_puts
 2127              		.syntax unified
 2128              		.thumb
 2129              		.thumb_func
 2131              	SSD1306_puts:
 2132              	.LVL141:
 2133              	.LFB107:
 300:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 301:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* print string at current position */
 302:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_puts(char *str) {
 2134              		.loc 1 302 30 view -0
 2135              		.cfi_startproc
 2136              		@ args = 0, pretend = 0, frame = 0
 2137              		@ frame_needed = 0, uses_anonymous_args = 0
 2138              		.loc 1 302 30 is_stmt 0 view .LVU496
 2139 0000 10B5     		push	{r4, lr}
 2140              	.LCFI54:
 2141              		.cfi_def_cfa_offset 8
 2142              		.cfi_offset 4, -8
 2143              		.cfi_offset 14, -4
 2144 0002 0446     		mov	r4, r0
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2145              		.loc 1 303 2 is_stmt 1 view .LVU497
 2146              		.loc 1 303 7 is_stmt 0 view .LVU498
 2147 0004 02E0     		b	.L149
 2148              	.LVL142:
 2149              	.L150:
 304:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(*str++);
 2150              		.loc 1 304 3 is_stmt 1 view .LVU499
 2151              		.loc 1 304 20 is_stmt 0 view .LVU500
 2152 0006 0134     		adds	r4, r4, #1
 2153              	.LVL143:
 2154              		.loc 1 304 3 view .LVU501
 2155 0008 FFF7FEFF 		bl	SSD1306_putc
 2156              	.LVL144:
 2157              	.L149:
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2158              		.loc 1 303 7 is_stmt 1 view .LVU502
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2159              		.loc 1 303 8 is_stmt 0 view .LVU503
 2160 000c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2161              		.loc 1 303 7 view .LVU504
 2162 000e 0028     		cmp	r0, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 59


 2163 0010 F9D1     		bne	.L150
 305:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 306:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2164              		.loc 1 306 1 view .LVU505
 2165 0012 10BD     		pop	{r4, pc}
 2166              		.loc 1 306 1 view .LVU506
 2167              		.cfi_endproc
 2168              	.LFE107:
 2170              		.section	.text.SSD1306_bigdigit,"ax",%progbits
 2171              		.align	1
 2172              		.global	SSD1306_bigdigit
 2173              		.syntax unified
 2174              		.thumb
 2175              		.thumb_func
 2177              	SSD1306_bigdigit:
 2178              	.LVL145:
 2179              	.LFB108:
 307:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 308:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // print bigger digits using Commodore 64 symbols.
 309:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // box graphics digit (a single digit, not byte or word; use this to render output of an int->bcd c
 310:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	const uint8_t chartable[]  = { 0x10, 0x0E, 0x5D, 0x5D, 0x0D, 0x1D, // zero
 311:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x20, 0x0E, 0x20, 0x5D, 0x20, 0x11, // one
 312:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		                                  0x10, 0x0E, 0x10, 0x1D, 0x0D, 0x1D, // two
 313:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x20, 0x13, 0x0D, 0x1D, // three
 314:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x5F, 0x5F, 0x0D, 0x13, 0x20, 0x5E, // four
 315:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0D, 0x0E, 0x0D, 0x1D, // five
 316:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0B, 0x0E, 0x0D, 0x1D, // six
 317:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x20, 0x5B, 0x20, 0x5E, // seven
 318:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0B, 0x13, 0x0D, 0x1D, // eight
 319:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0d, 0x13, 0x0D, 0x1D  // nine
 320:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 						                };
 321:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_bigdigit(uint8_t top, uint8_t left, uint8_t num) {
 2180              		.loc 1 321 63 is_stmt 1 view -0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 0
 2183              		@ frame_needed = 0, uses_anonymous_args = 0
 322:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(num > 9) { return; }
 2184              		.loc 1 322 2 view .LVU508
 2185              		.loc 1 322 4 is_stmt 0 view .LVU509
 2186 0000 092A     		cmp	r2, #9
 2187 0002 00D9     		bls	.L162
 2188 0004 7047     		bx	lr
 2189              	.L162:
 321:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(num > 9) { return; }
 2190              		.loc 1 321 63 view .LVU510
 2191 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2192              	.LCFI55:
 2193              		.cfi_def_cfa_offset 24
 2194              		.cfi_offset 3, -24
 2195              		.cfi_offset 4, -20
 2196              		.cfi_offset 5, -16
 2197              		.cfi_offset 6, -12
 2198              		.cfi_offset 7, -8
 2199              		.cfi_offset 14, -4
 2200 0008 0646     		mov	r6, r0
 2201 000a 0F46     		mov	r7, r1
 2202 000c 1546     		mov	r5, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 60


 323:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(top, left);
 2203              		.loc 1 323 2 is_stmt 1 view .LVU511
 2204 000e FFF7FEFF 		bl	SSD1306_move
 2205              	.LVL146:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2206              		.loc 1 324 2 view .LVU512
 2207              	.LBB18:
 2208              		.loc 1 324 6 view .LVU513
 2209              		.loc 1 324 14 is_stmt 0 view .LVU514
 2210 0012 0024     		movs	r4, #0
 2211              		.loc 1 324 2 view .LVU515
 2212 0014 0FE0     		b	.L154
 2213              	.LVL147:
 2214              	.L155:
 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2215              		.loc 1 325 26 is_stmt 1 discriminator 3 view .LVU516
 2216 0016 0136     		adds	r6, r6, #1
 2217              	.LVL148:
 2218              		.loc 1 325 26 is_stmt 0 discriminator 3 view .LVU517
 2219 0018 F6B2     		uxtb	r6, r6
 2220              	.LVL149:
 2221              		.loc 1 325 26 discriminator 3 view .LVU518
 2222 001a 3946     		mov	r1, r7
 2223 001c 3046     		mov	r0, r6
 2224 001e FFF7FEFF 		bl	SSD1306_move
 2225              	.LVL150:
 2226              	.L156:
 326:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(chartable[(num * 6) + i]);
 2227              		.loc 1 326 3 is_stmt 1 discriminator 2 view .LVU519
 2228              		.loc 1 326 31 is_stmt 0 discriminator 2 view .LVU520
 2229 0022 05EB4503 		add	r3, r5, r5, lsl #1
 2230              		.loc 1 326 36 discriminator 2 view .LVU521
 2231 0026 04EB4303 		add	r3, r4, r3, lsl #1
 2232              		.loc 1 326 3 discriminator 2 view .LVU522
 2233 002a 074A     		ldr	r2, .L164
 2234 002c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 2235 002e FFF7FEFF 		bl	SSD1306_putc
 2236              	.LVL151:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2237              		.loc 1 324 28 is_stmt 1 discriminator 2 view .LVU523
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2238              		.loc 1 324 29 is_stmt 0 discriminator 2 view .LVU524
 2239 0032 0134     		adds	r4, r4, #1
 2240              	.LVL152:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2241              		.loc 1 324 29 discriminator 2 view .LVU525
 2242 0034 E4B2     		uxtb	r4, r4
 2243              	.LVL153:
 2244              	.L154:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2245              		.loc 1 324 21 is_stmt 1 discriminator 1 view .LVU526
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2246              		.loc 1 324 2 is_stmt 0 discriminator 1 view .LVU527
 2247 0036 052C     		cmp	r4, #5
 2248 0038 04D8     		bhi	.L163
 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2249              		.loc 1 325 3 is_stmt 1 view .LVU528
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 61


 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2250              		.loc 1 325 5 is_stmt 0 view .LVU529
 2251 003a 022C     		cmp	r4, #2
 2252 003c EBD0     		beq	.L155
 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2253              		.loc 1 325 13 discriminator 2 view .LVU530
 2254 003e 042C     		cmp	r4, #4
 2255 0040 EFD1     		bne	.L156
 2256 0042 E8E7     		b	.L155
 2257              	.L163:
 2258              	.LBE18:
 327:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}		
 328:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2259              		.loc 1 328 1 view .LVU531
 2260 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2261              	.LVL154:
 2262              	.L165:
 2263              		.loc 1 328 1 view .LVU532
 2264 0046 00BF     		.align	2
 2265              	.L164:
 2266 0048 00000000 		.word	.LANCHOR7
 2267              		.cfi_endproc
 2268              	.LFE108:
 2270              		.section	.text.SSD1306_box,"ax",%progbits
 2271              		.align	1
 2272              		.global	SSD1306_box
 2273              		.syntax unified
 2274              		.thumb
 2275              		.thumb_func
 2277              	SSD1306_box:
 2278              	.LVL155:
 2279              	.LFB109:
 329:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 330:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* draw box from PET symbols */
 331:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_box(uint8_t top, uint8_t left, uint8_t width, uint8_t height) {
 2280              		.loc 1 331 76 is_stmt 1 view -0
 2281              		.cfi_startproc
 2282              		@ args = 0, pretend = 0, frame = 0
 2283              		@ frame_needed = 0, uses_anonymous_args = 0
 2284              		.loc 1 331 76 is_stmt 0 view .LVU534
 2285 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2286              	.LCFI56:
 2287              		.cfi_def_cfa_offset 32
 2288              		.cfi_offset 3, -32
 2289              		.cfi_offset 4, -28
 2290              		.cfi_offset 5, -24
 2291              		.cfi_offset 6, -20
 2292              		.cfi_offset 7, -16
 2293              		.cfi_offset 8, -12
 2294              		.cfi_offset 9, -8
 2295              		.cfi_offset 14, -4
 2296 0004 8046     		mov	r8, r0
 2297 0006 0E46     		mov	r6, r1
 2298 0008 1746     		mov	r7, r2
 2299 000a 9946     		mov	r9, r3
 332:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(top, left);
 2300              		.loc 1 332 2 is_stmt 1 view .LVU535
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 62


 2301 000c FFF7FEFF 		bl	SSD1306_move
 2302              	.LVL156:
 333:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc(BOX_TL); for(uint8_t i = 0; i < width - 2; i++) { SSD1306_putc(BOX_HL);} SSD1306_putc
 2303              		.loc 1 333 2 view .LVU536
 2304 0010 1020     		movs	r0, #16
 2305 0012 FFF7FEFF 		bl	SSD1306_putc
 2306              	.LVL157:
 2307              		.loc 1 333 24 view .LVU537
 2308              	.LBB19:
 2309              		.loc 1 333 28 view .LVU538
 2310              		.loc 1 333 36 is_stmt 0 view .LVU539
 2311 0016 0024     		movs	r4, #0
 2312              		.loc 1 333 24 view .LVU540
 2313 0018 04E0     		b	.L167
 2314              	.LVL158:
 2315              	.L168:
 2316              		.loc 1 333 65 is_stmt 1 discriminator 3 view .LVU541
 2317 001a 4020     		movs	r0, #64
 2318 001c FFF7FEFF 		bl	SSD1306_putc
 2319              	.LVL159:
 2320              		.loc 1 333 58 discriminator 3 view .LVU542
 2321              		.loc 1 333 59 is_stmt 0 discriminator 3 view .LVU543
 2322 0020 0134     		adds	r4, r4, #1
 2323              	.LVL160:
 2324              		.loc 1 333 59 discriminator 3 view .LVU544
 2325 0022 E4B2     		uxtb	r4, r4
 2326              	.LVL161:
 2327              	.L167:
 2328              		.loc 1 333 43 is_stmt 1 discriminator 1 view .LVU545
 2329              		.loc 1 333 53 is_stmt 0 discriminator 1 view .LVU546
 2330 0024 BD1E     		subs	r5, r7, #2
 2331              		.loc 1 333 24 discriminator 1 view .LVU547
 2332 0026 AC42     		cmp	r4, r5
 2333 0028 F7DB     		blt	.L168
 2334              	.LBE19:
 2335              		.loc 1 333 88 is_stmt 1 discriminator 4 view .LVU548
 2336 002a 0E20     		movs	r0, #14
 2337 002c FFF7FEFF 		bl	SSD1306_putc
 2338              	.LVL162:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = top+1; i < top+height-1; i++) {
 2339              		.loc 1 334 2 discriminator 4 view .LVU549
 2340              	.LBB20:
 2341              		.loc 1 334 6 discriminator 4 view .LVU550
 2342              		.loc 1 334 14 is_stmt 0 discriminator 4 view .LVU551
 2343 0030 08F10104 		add	r4, r8, #1
 2344              	.LVL163:
 2345              		.loc 1 334 14 discriminator 4 view .LVU552
 2346 0034 E4B2     		uxtb	r4, r4
 2347              	.LVL164:
 2348              		.loc 1 334 2 discriminator 4 view .LVU553
 2349 0036 12E0     		b	.L169
 2350              	.L170:
 335:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2351              		.loc 1 335 3 is_stmt 1 discriminator 3 view .LVU554
 2352 0038 3146     		mov	r1, r6
 2353 003a 2046     		mov	r0, r4
 2354 003c FFF7FEFF 		bl	SSD1306_move
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 63


 2355              	.LVL165:
 336:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(BOX_VL); 
 2356              		.loc 1 336 3 discriminator 3 view .LVU555
 2357 0040 5D20     		movs	r0, #93
 2358 0042 FFF7FEFF 		bl	SSD1306_putc
 2359              	.LVL166:
 337:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left + width - 1);
 2360              		.loc 1 337 3 discriminator 3 view .LVU556
 2361              		.loc 1 337 24 is_stmt 0 discriminator 3 view .LVU557
 2362 0046 F119     		adds	r1, r6, r7
 2363 0048 C9B2     		uxtb	r1, r1
 2364              		.loc 1 337 3 discriminator 3 view .LVU558
 2365 004a 0139     		subs	r1, r1, #1
 2366 004c C9B2     		uxtb	r1, r1
 2367 004e 2046     		mov	r0, r4
 2368 0050 FFF7FEFF 		bl	SSD1306_move
 2369              	.LVL167:
 338:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(BOX_VL);
 2370              		.loc 1 338 3 is_stmt 1 discriminator 3 view .LVU559
 2371 0054 5D20     		movs	r0, #93
 2372 0056 FFF7FEFF 		bl	SSD1306_putc
 2373              	.LVL168:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2374              		.loc 1 334 43 discriminator 3 view .LVU560
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2375              		.loc 1 334 44 is_stmt 0 discriminator 3 view .LVU561
 2376 005a 0134     		adds	r4, r4, #1
 2377              	.LVL169:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2378              		.loc 1 334 44 discriminator 3 view .LVU562
 2379 005c E4B2     		uxtb	r4, r4
 2380              	.LVL170:
 2381              	.L169:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2382              		.loc 1 334 25 is_stmt 1 discriminator 1 view .LVU563
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2383              		.loc 1 334 32 is_stmt 0 discriminator 1 view .LVU564
 2384 005e 08EB0903 		add	r3, r8, r9
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2385              		.loc 1 334 39 discriminator 1 view .LVU565
 2386 0062 013B     		subs	r3, r3, #1
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2387              		.loc 1 334 2 discriminator 1 view .LVU566
 2388 0064 9C42     		cmp	r4, r3
 2389 0066 E7DB     		blt	.L170
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2390              		.loc 1 334 2 discriminator 1 view .LVU567
 2391              	.LBE20:
 339:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 340:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(top + height - 1, left);
 2392              		.loc 1 340 2 is_stmt 1 view .LVU568
 2393              		.loc 1 340 19 is_stmt 0 view .LVU569
 2394 0068 08EB0900 		add	r0, r8, r9
 2395 006c C0B2     		uxtb	r0, r0
 2396              		.loc 1 340 2 view .LVU570
 2397 006e 0138     		subs	r0, r0, #1
 2398 0070 3146     		mov	r1, r6
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 64


 2399 0072 C0B2     		uxtb	r0, r0
 2400 0074 FFF7FEFF 		bl	SSD1306_move
 2401              	.LVL171:
 341:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc(BOX_BL); for(uint8_t i = 0; i < width - 2; i++) { SSD1306_putc(BOX_HL);} SSD1306_putc
 2402              		.loc 1 341 2 is_stmt 1 view .LVU571
 2403 0078 0D20     		movs	r0, #13
 2404 007a FFF7FEFF 		bl	SSD1306_putc
 2405              	.LVL172:
 2406              		.loc 1 341 24 view .LVU572
 2407              	.LBB21:
 2408              		.loc 1 341 28 view .LVU573
 2409              		.loc 1 341 36 is_stmt 0 view .LVU574
 2410 007e 0024     		movs	r4, #0
 2411              	.LVL173:
 2412              		.loc 1 341 24 view .LVU575
 2413 0080 04E0     		b	.L171
 2414              	.LVL174:
 2415              	.L172:
 2416              		.loc 1 341 65 is_stmt 1 discriminator 3 view .LVU576
 2417 0082 4020     		movs	r0, #64
 2418 0084 FFF7FEFF 		bl	SSD1306_putc
 2419              	.LVL175:
 2420              		.loc 1 341 58 discriminator 3 view .LVU577
 2421              		.loc 1 341 59 is_stmt 0 discriminator 3 view .LVU578
 2422 0088 0134     		adds	r4, r4, #1
 2423              	.LVL176:
 2424              		.loc 1 341 59 discriminator 3 view .LVU579
 2425 008a E4B2     		uxtb	r4, r4
 2426              	.LVL177:
 2427              	.L171:
 2428              		.loc 1 341 43 is_stmt 1 discriminator 1 view .LVU580
 2429              		.loc 1 341 24 is_stmt 0 discriminator 1 view .LVU581
 2430 008c A542     		cmp	r5, r4
 2431 008e F8DC     		bgt	.L172
 2432              	.LBE21:
 2433              		.loc 1 341 88 is_stmt 1 discriminator 4 view .LVU582
 2434 0090 1D20     		movs	r0, #29
 2435 0092 FFF7FEFF 		bl	SSD1306_putc
 2436              	.LVL178:
 342:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2437              		.loc 1 342 1 is_stmt 0 discriminator 4 view .LVU583
 2438 0096 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2439              		.loc 1 342 1 discriminator 4 view .LVU584
 2440              		.cfi_endproc
 2441              	.LFE109:
 2443              		.section	.text.SSD1306_scroll_print,"ax",%progbits
 2444              		.align	1
 2445              		.global	SSD1306_scroll_print
 2446              		.syntax unified
 2447              		.thumb
 2448              		.thumb_func
 2450              	SSD1306_scroll_print:
 2451              	.LVL179:
 2452              	.LFB110:
 343:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 344:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* 
 345:Core/Src/USER/oled/ssd1306_oled_i2c.c **** "I tell you, we are here on Earth to fart around, and don't let anybody tell you different." - Kurt
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 65


 346:Core/Src/USER/oled/ssd1306_oled_i2c.c **** */
 347:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 348:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* www.vabolis.lt adds */
 349:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* scroll stuff up and print on bottom of the screen. "listing" emulation */ 
 350:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_scroll_print(char *n)
 351:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 2453              		.loc 1 351 1 is_stmt 1 view -0
 2454              		.cfi_startproc
 2455              		@ args = 0, pretend = 0, frame = 0
 2456              		@ frame_needed = 0, uses_anonymous_args = 0
 2457              		.loc 1 351 1 is_stmt 0 view .LVU586
 2458 0000 38B5     		push	{r3, r4, r5, lr}
 2459              	.LCFI57:
 2460              		.cfi_def_cfa_offset 16
 2461              		.cfi_offset 3, -16
 2462              		.cfi_offset 4, -12
 2463              		.cfi_offset 5, -8
 2464              		.cfi_offset 14, -4
 2465 0002 0446     		mov	r4, r0
 352:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char tmp;
 2466              		.loc 1 352 1 is_stmt 1 view .LVU587
 353:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_scroll(oled_line*8);
 2467              		.loc 1 353 2 view .LVU588
 2468 0004 0E4D     		ldr	r5, .L179
 2469 0006 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 2470              	.LVL180:
 2471              		.loc 1 353 2 is_stmt 0 view .LVU589
 2472 0008 C000     		lsls	r0, r0, #3
 2473 000a 00F0F800 		and	r0, r0, #248
 2474 000e FFF7FEFF 		bl	SSD1306_scroll
 2475              	.LVL181:
 354:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(oled_line==0){tmp=7;} else {tmp=oled_line-1;}
 2476              		.loc 1 354 2 is_stmt 1 view .LVU590
 2477              		.loc 1 354 14 is_stmt 0 view .LVU591
 2478 0012 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2479              		.loc 1 354 4 view .LVU592
 2480 0014 93B1     		cbz	r3, .L177
 2481              		.loc 1 354 33 is_stmt 1 discriminator 2 view .LVU593
 2482              		.loc 1 354 36 is_stmt 0 discriminator 2 view .LVU594
 2483 0016 013B     		subs	r3, r3, #1
 2484 0018 D8B2     		uxtb	r0, r3
 2485              	.LVL182:
 2486              	.L175:
 355:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(tmp, 0);
 2487              		.loc 1 355 2 is_stmt 1 view .LVU595
 2488 001a 0021     		movs	r1, #0
 2489 001c FFF7FEFF 		bl	SSD1306_move
 2490              	.LVL183:
 356:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_puts(n);
 2491              		.loc 1 356 2 view .LVU596
 2492 0020 2046     		mov	r0, r4
 2493 0022 FFF7FEFF 		bl	SSD1306_puts
 2494              	.LVL184:
 357:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	oled_line++; if(oled_line>7)oled_line=0;
 2495              		.loc 1 357 2 view .LVU597
 2496              		.loc 1 357 11 is_stmt 0 view .LVU598
 2497 0026 064A     		ldr	r2, .L179
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 66


 2498 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2499 002a 0133     		adds	r3, r3, #1
 2500 002c DBB2     		uxtb	r3, r3
 2501 002e 1370     		strb	r3, [r2]
 2502              		.loc 1 357 15 is_stmt 1 view .LVU599
 2503              		.loc 1 357 17 is_stmt 0 view .LVU600
 2504 0030 072B     		cmp	r3, #7
 2505 0032 02D9     		bls	.L174
 2506              		.loc 1 357 30 is_stmt 1 discriminator 1 view .LVU601
 2507              		.loc 1 357 39 is_stmt 0 discriminator 1 view .LVU602
 2508 0034 1346     		mov	r3, r2
 2509 0036 0022     		movs	r2, #0
 2510 0038 1A70     		strb	r2, [r3]
 2511              	.L174:
 358:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2512              		.loc 1 358 1 view .LVU603
 2513 003a 38BD     		pop	{r3, r4, r5, pc}
 2514              	.LVL185:
 2515              	.L177:
 354:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(tmp, 0);
 2516              		.loc 1 354 22 view .LVU604
 2517 003c 0720     		movs	r0, #7
 2518 003e ECE7     		b	.L175
 2519              	.L180:
 2520              		.align	2
 2521              	.L179:
 2522 0040 00000000 		.word	.LANCHOR6
 2523              		.cfi_endproc
 2524              	.LFE110:
 2526              		.section	.text.SSD1306_stopscroll,"ax",%progbits
 2527              		.align	1
 2528              		.global	SSD1306_stopscroll
 2529              		.syntax unified
 2530              		.thumb
 2531              		.thumb_func
 2533              	SSD1306_stopscroll:
 2534              	.LFB111:
 359:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 360:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_stopscroll(void){
 2535              		.loc 1 360 30 is_stmt 1 view -0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 0
 2538              		@ frame_needed = 0, uses_anonymous_args = 0
 2539 0000 08B5     		push	{r3, lr}
 2540              	.LCFI58:
 2541              		.cfi_def_cfa_offset 8
 2542              		.cfi_offset 3, -8
 2543              		.cfi_offset 14, -4
 361:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_DEACTIVATE_SCROLL);
 2544              		.loc 1 361 3 view .LVU606
 2545 0002 2E20     		movs	r0, #46
 2546 0004 FFF7FEFF 		bl	SSD1306_command1
 2547              	.LVL186:
 362:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2548              		.loc 1 362 1 is_stmt 0 view .LVU607
 2549 0008 08BD     		pop	{r3, pc}
 2550              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 67


 2551              	.LFE111:
 2553              		.section	.text.SSD1306_dim,"ax",%progbits
 2554              		.align	1
 2555              		.global	SSD1306_dim
 2556              		.syntax unified
 2557              		.thumb
 2558              		.thumb_func
 2560              	SSD1306_dim:
 2561              	.LVL187:
 2562              	.LFB112:
 363:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 364:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 365:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Dim the display
 366:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // dim = true: display is dimmed
 367:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // dim = false: display is normal
 368:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_dim(unsigned char dim) {
 2563              		.loc 1 368 37 is_stmt 1 view -0
 2564              		.cfi_startproc
 2565              		@ args = 0, pretend = 0, frame = 0
 2566              		@ frame_needed = 0, uses_anonymous_args = 0
 2567              		.loc 1 368 37 is_stmt 0 view .LVU609
 2568 0000 10B5     		push	{r4, lr}
 2569              	.LCFI59:
 2570              		.cfi_def_cfa_offset 8
 2571              		.cfi_offset 4, -8
 2572              		.cfi_offset 14, -4
 369:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   uint8_t contrast;
 2573              		.loc 1 369 3 is_stmt 1 view .LVU610
 370:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 371:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   if (dim) {
 2574              		.loc 1 371 3 view .LVU611
 2575              		.loc 1 371 6 is_stmt 0 view .LVU612
 2576 0002 38B1     		cbz	r0, .L185
 372:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			contrast = 0; // Dimmed display
 2577              		.loc 1 372 13 view .LVU613
 2578 0004 0024     		movs	r4, #0
 2579              	.L184:
 2580              	.LVL188:
 373:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			} else {
 374:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //				if (_vccstate == SSD1306_EXTERNALVCC) {
 375:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //						contrast = 0x9F;
 376:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //					} else {
 377:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			contrast = 0xCF;
 378:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //    }
 379:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   }
 380:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   // the range of contrast to too small to be really useful
 381:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   // it is useful to dim the display
 382:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_SETCONTRAST);
 2581              		.loc 1 382 3 is_stmt 1 view .LVU614
 2582 0006 8120     		movs	r0, #129
 2583              	.LVL189:
 2584              		.loc 1 382 3 is_stmt 0 view .LVU615
 2585 0008 FFF7FEFF 		bl	SSD1306_command1
 2586              	.LVL190:
 383:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(contrast);
 2587              		.loc 1 383 3 is_stmt 1 view .LVU616
 2588 000c 2046     		mov	r0, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 68


 2589 000e FFF7FEFF 		bl	SSD1306_command1
 2590              	.LVL191:
 384:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2591              		.loc 1 384 1 is_stmt 0 view .LVU617
 2592 0012 10BD     		pop	{r4, pc}
 2593              	.LVL192:
 2594              	.L185:
 377:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //    }
 2595              		.loc 1 377 13 view .LVU618
 2596 0014 CF24     		movs	r4, #207
 2597 0016 F6E7     		b	.L184
 2598              		.cfi_endproc
 2599              	.LFE112:
 2601              		.section	.text.SSD1306_startscrollright,"ax",%progbits
 2602              		.align	1
 2603              		.global	SSD1306_startscrollright
 2604              		.syntax unified
 2605              		.thumb
 2606              		.thumb_func
 2608              	SSD1306_startscrollright:
 2609              	.LVL193:
 2610              	.LFB113:
 385:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 386:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 387:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrollright
 388:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a right handed scroll for rows start through stop
 389:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
 390:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 391:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrollright(uint8_t start, uint8_t stop){
 2611              		.loc 1 391 59 is_stmt 1 view -0
 2612              		.cfi_startproc
 2613              		@ args = 0, pretend = 0, frame = 0
 2614              		@ frame_needed = 0, uses_anonymous_args = 0
 2615              		.loc 1 391 59 is_stmt 0 view .LVU620
 2616 0000 38B5     		push	{r3, r4, r5, lr}
 2617              	.LCFI60:
 2618              		.cfi_def_cfa_offset 16
 2619              		.cfi_offset 3, -16
 2620              		.cfi_offset 4, -12
 2621              		.cfi_offset 5, -8
 2622              		.cfi_offset 14, -4
 2623 0002 0546     		mov	r5, r0
 2624 0004 0C46     		mov	r4, r1
 392:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_RIGHT_HORIZONTAL_SCROLL);
 2625              		.loc 1 392 3 is_stmt 1 view .LVU621
 2626 0006 2620     		movs	r0, #38
 2627              	.LVL194:
 2628              		.loc 1 392 3 is_stmt 0 view .LVU622
 2629 0008 FFF7FEFF 		bl	SSD1306_command1
 2630              	.LVL195:
 393:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2631              		.loc 1 393 3 is_stmt 1 view .LVU623
 2632 000c 0020     		movs	r0, #0
 2633 000e FFF7FEFF 		bl	SSD1306_command1
 2634              	.LVL196:
 394:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2635              		.loc 1 394 3 view .LVU624
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 69


 2636 0012 2846     		mov	r0, r5
 2637 0014 FFF7FEFF 		bl	SSD1306_command1
 2638              	.LVL197:
 395:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2639              		.loc 1 395 3 view .LVU625
 2640 0018 0020     		movs	r0, #0
 2641 001a FFF7FEFF 		bl	SSD1306_command1
 2642              	.LVL198:
 396:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2643              		.loc 1 396 3 view .LVU626
 2644 001e 2046     		mov	r0, r4
 2645 0020 FFF7FEFF 		bl	SSD1306_command1
 2646              	.LVL199:
 397:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2647              		.loc 1 397 3 view .LVU627
 2648 0024 0020     		movs	r0, #0
 2649 0026 FFF7FEFF 		bl	SSD1306_command1
 2650              	.LVL200:
 398:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0XFF);
 2651              		.loc 1 398 3 view .LVU628
 2652 002a FF20     		movs	r0, #255
 2653 002c FFF7FEFF 		bl	SSD1306_command1
 2654              	.LVL201:
 399:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2655              		.loc 1 399 3 view .LVU629
 2656 0030 2F20     		movs	r0, #47
 2657 0032 FFF7FEFF 		bl	SSD1306_command1
 2658              	.LVL202:
 400:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2659              		.loc 1 400 1 is_stmt 0 view .LVU630
 2660 0036 38BD     		pop	{r3, r4, r5, pc}
 2661              		.cfi_endproc
 2662              	.LFE113:
 2664              		.section	.text.SSD1306_startscrollleft,"ax",%progbits
 2665              		.align	1
 2666              		.global	SSD1306_startscrollleft
 2667              		.syntax unified
 2668              		.thumb
 2669              		.thumb_func
 2671              	SSD1306_startscrollleft:
 2672              	.LVL203:
 2673              	.LFB114:
 401:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 402:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrollleft
 403:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a right handed scroll for rows start through stop
 404:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
 405:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 406:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrollleft(uint8_t start, uint8_t stop){
 2674              		.loc 1 406 58 is_stmt 1 view -0
 2675              		.cfi_startproc
 2676              		@ args = 0, pretend = 0, frame = 0
 2677              		@ frame_needed = 0, uses_anonymous_args = 0
 2678              		.loc 1 406 58 is_stmt 0 view .LVU632
 2679 0000 38B5     		push	{r3, r4, r5, lr}
 2680              	.LCFI61:
 2681              		.cfi_def_cfa_offset 16
 2682              		.cfi_offset 3, -16
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 70


 2683              		.cfi_offset 4, -12
 2684              		.cfi_offset 5, -8
 2685              		.cfi_offset 14, -4
 2686 0002 0546     		mov	r5, r0
 2687 0004 0C46     		mov	r4, r1
 407:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_LEFT_HORIZONTAL_SCROLL);
 2688              		.loc 1 407 3 is_stmt 1 view .LVU633
 2689 0006 2720     		movs	r0, #39
 2690              	.LVL204:
 2691              		.loc 1 407 3 is_stmt 0 view .LVU634
 2692 0008 FFF7FEFF 		bl	SSD1306_command1
 2693              	.LVL205:
 408:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2694              		.loc 1 408 3 is_stmt 1 view .LVU635
 2695 000c 0020     		movs	r0, #0
 2696 000e FFF7FEFF 		bl	SSD1306_command1
 2697              	.LVL206:
 409:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2698              		.loc 1 409 3 view .LVU636
 2699 0012 2846     		mov	r0, r5
 2700 0014 FFF7FEFF 		bl	SSD1306_command1
 2701              	.LVL207:
 410:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2702              		.loc 1 410 3 view .LVU637
 2703 0018 0020     		movs	r0, #0
 2704 001a FFF7FEFF 		bl	SSD1306_command1
 2705              	.LVL208:
 411:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2706              		.loc 1 411 3 view .LVU638
 2707 001e 2046     		mov	r0, r4
 2708 0020 FFF7FEFF 		bl	SSD1306_command1
 2709              	.LVL209:
 412:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2710              		.loc 1 412 3 view .LVU639
 2711 0024 0020     		movs	r0, #0
 2712 0026 FFF7FEFF 		bl	SSD1306_command1
 2713              	.LVL210:
 413:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0XFF);
 2714              		.loc 1 413 3 view .LVU640
 2715 002a FF20     		movs	r0, #255
 2716 002c FFF7FEFF 		bl	SSD1306_command1
 2717              	.LVL211:
 414:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2718              		.loc 1 414 3 view .LVU641
 2719 0030 2F20     		movs	r0, #47
 2720 0032 FFF7FEFF 		bl	SSD1306_command1
 2721              	.LVL212:
 415:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2722              		.loc 1 415 1 is_stmt 0 view .LVU642
 2723 0036 38BD     		pop	{r3, r4, r5, pc}
 2724              		.cfi_endproc
 2725              	.LFE114:
 2727              		.section	.text.SSD1306_startscrolldiagright,"ax",%progbits
 2728              		.align	1
 2729              		.global	SSD1306_startscrolldiagright
 2730              		.syntax unified
 2731              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 71


 2732              		.thumb_func
 2734              	SSD1306_startscrolldiagright:
 2735              	.LVL213:
 2736              	.LFB115:
 416:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 417:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrolldiagright
 418:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a diagonal scroll for rows start through stop
 419:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
 420:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 421:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrolldiagright(uint8_t start, uint8_t stop){
 2737              		.loc 1 421 63 is_stmt 1 view -0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
 2741              		.loc 1 421 63 is_stmt 0 view .LVU644
 2742 0000 38B5     		push	{r3, r4, r5, lr}
 2743              	.LCFI62:
 2744              		.cfi_def_cfa_offset 16
 2745              		.cfi_offset 3, -16
 2746              		.cfi_offset 4, -12
 2747              		.cfi_offset 5, -8
 2748              		.cfi_offset 14, -4
 2749 0002 0546     		mov	r5, r0
 2750 0004 0C46     		mov	r4, r1
 422:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_SET_VERTICAL_SCROLL_AREA);
 2751              		.loc 1 422 3 is_stmt 1 view .LVU645
 2752 0006 A320     		movs	r0, #163
 2753              	.LVL214:
 2754              		.loc 1 422 3 is_stmt 0 view .LVU646
 2755 0008 FFF7FEFF 		bl	SSD1306_command1
 2756              	.LVL215:
 423:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2757              		.loc 1 423 3 is_stmt 1 view .LVU647
 2758 000c 0020     		movs	r0, #0
 2759 000e FFF7FEFF 		bl	SSD1306_command1
 2760              	.LVL216:
 424:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_HEIGHT);
 2761              		.loc 1 424 3 view .LVU648
 2762 0012 2020     		movs	r0, #32
 2763 0014 FFF7FEFF 		bl	SSD1306_command1
 2764              	.LVL217:
 425:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL);
 2765              		.loc 1 425 3 view .LVU649
 2766 0018 2920     		movs	r0, #41
 2767 001a FFF7FEFF 		bl	SSD1306_command1
 2768              	.LVL218:
 426:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2769              		.loc 1 426 3 view .LVU650
 2770 001e 0020     		movs	r0, #0
 2771 0020 FFF7FEFF 		bl	SSD1306_command1
 2772              	.LVL219:
 427:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2773              		.loc 1 427 3 view .LVU651
 2774 0024 2846     		mov	r0, r5
 2775 0026 FFF7FEFF 		bl	SSD1306_command1
 2776              	.LVL220:
 428:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 72


 2777              		.loc 1 428 3 view .LVU652
 2778 002a 0020     		movs	r0, #0
 2779 002c FFF7FEFF 		bl	SSD1306_command1
 2780              	.LVL221:
 429:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2781              		.loc 1 429 3 view .LVU653
 2782 0030 2046     		mov	r0, r4
 2783 0032 FFF7FEFF 		bl	SSD1306_command1
 2784              	.LVL222:
 430:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X01);
 2785              		.loc 1 430 3 view .LVU654
 2786 0036 0120     		movs	r0, #1
 2787 0038 FFF7FEFF 		bl	SSD1306_command1
 2788              	.LVL223:
 431:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2789              		.loc 1 431 3 view .LVU655
 2790 003c 2F20     		movs	r0, #47
 2791 003e FFF7FEFF 		bl	SSD1306_command1
 2792              	.LVL224:
 432:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2793              		.loc 1 432 1 is_stmt 0 view .LVU656
 2794 0042 38BD     		pop	{r3, r4, r5, pc}
 2795              		.cfi_endproc
 2796              	.LFE115:
 2798              		.section	.text.SSD1306_startscrolldiagleft,"ax",%progbits
 2799              		.align	1
 2800              		.global	SSD1306_startscrolldiagleft
 2801              		.syntax unified
 2802              		.thumb
 2803              		.thumb_func
 2805              	SSD1306_startscrolldiagleft:
 2806              	.LVL225:
 2807              	.LFB116:
 433:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 434:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrolldiagleft
 435:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a diagonal scroll for rows start through stop
 436:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
 437:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 438:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrolldiagleft(uint8_t start, uint8_t stop){
 2808              		.loc 1 438 62 is_stmt 1 view -0
 2809              		.cfi_startproc
 2810              		@ args = 0, pretend = 0, frame = 0
 2811              		@ frame_needed = 0, uses_anonymous_args = 0
 2812              		.loc 1 438 62 is_stmt 0 view .LVU658
 2813 0000 38B5     		push	{r3, r4, r5, lr}
 2814              	.LCFI63:
 2815              		.cfi_def_cfa_offset 16
 2816              		.cfi_offset 3, -16
 2817              		.cfi_offset 4, -12
 2818              		.cfi_offset 5, -8
 2819              		.cfi_offset 14, -4
 2820 0002 0546     		mov	r5, r0
 2821 0004 0C46     		mov	r4, r1
 439:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_SET_VERTICAL_SCROLL_AREA);
 2822              		.loc 1 439 3 is_stmt 1 view .LVU659
 2823 0006 A320     		movs	r0, #163
 2824              	.LVL226:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 73


 2825              		.loc 1 439 3 is_stmt 0 view .LVU660
 2826 0008 FFF7FEFF 		bl	SSD1306_command1
 2827              	.LVL227:
 440:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2828              		.loc 1 440 3 is_stmt 1 view .LVU661
 2829 000c 0020     		movs	r0, #0
 2830 000e FFF7FEFF 		bl	SSD1306_command1
 2831              	.LVL228:
 441:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_HEIGHT);
 2832              		.loc 1 441 3 view .LVU662
 2833 0012 2020     		movs	r0, #32
 2834 0014 FFF7FEFF 		bl	SSD1306_command1
 2835              	.LVL229:
 442:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL);
 2836              		.loc 1 442 3 view .LVU663
 2837 0018 2A20     		movs	r0, #42
 2838 001a FFF7FEFF 		bl	SSD1306_command1
 2839              	.LVL230:
 443:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2840              		.loc 1 443 3 view .LVU664
 2841 001e 0020     		movs	r0, #0
 2842 0020 FFF7FEFF 		bl	SSD1306_command1
 2843              	.LVL231:
 444:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2844              		.loc 1 444 3 view .LVU665
 2845 0024 2846     		mov	r0, r5
 2846 0026 FFF7FEFF 		bl	SSD1306_command1
 2847              	.LVL232:
 445:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2848              		.loc 1 445 3 view .LVU666
 2849 002a 0020     		movs	r0, #0
 2850 002c FFF7FEFF 		bl	SSD1306_command1
 2851              	.LVL233:
 446:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2852              		.loc 1 446 3 view .LVU667
 2853 0030 2046     		mov	r0, r4
 2854 0032 FFF7FEFF 		bl	SSD1306_command1
 2855              	.LVL234:
 447:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X01);
 2856              		.loc 1 447 3 view .LVU668
 2857 0036 0120     		movs	r0, #1
 2858 0038 FFF7FEFF 		bl	SSD1306_command1
 2859              	.LVL235:
 448:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2860              		.loc 1 448 3 view .LVU669
 2861 003c 2F20     		movs	r0, #47
 2862 003e FFF7FEFF 		bl	SSD1306_command1
 2863              	.LVL236:
 449:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2864              		.loc 1 449 1 is_stmt 0 view .LVU670
 2865 0042 38BD     		pop	{r3, r4, r5, pc}
 2866              		.cfi_endproc
 2867              	.LFE116:
 2869              		.section	.text.user_usb_rx,"ax",%progbits
 2870              		.align	1
 2871              		.global	user_usb_rx
 2872              		.syntax unified
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 74


 2873              		.thumb
 2874              		.thumb_func
 2876              	user_usb_rx:
 2877              	.LVL237:
 2878              	.LFB117:
 2879              		.file 5 "Core/Src/USER/user.c"
   1:Core/Src/USER/user.c **** /* ***********************************************
   2:Core/Src/USER/user.c **** **                                              **
   3:Core/Src/USER/user.c **** ** 40mA   RTC clock V1.0 www.vabolis.lt (c)2023 **
   4:Core/Src/USER/user.c **** **                                              **
   5:Core/Src/USER/user.c **** ************************************************ */
   6:Core/Src/USER/user.c **** 
   7:Core/Src/USER/user.c **** #include "user.h"
   8:Core/Src/USER/user.c **** 
   9:Core/Src/USER/user.c **** 
  10:Core/Src/USER/user.c **** #include "rtc.c"
  11:Core/Src/USER/user.c **** #include "circular_buffer.c"
  12:Core/Src/USER/user.c **** #include "oled/ssd1306_oled_i2c.c"
  13:Core/Src/USER/user.c **** 
  14:Core/Src/USER/user.c **** extern IWDG_HandleTypeDef hiwdg;
  15:Core/Src/USER/user.c **** extern RTC_HandleTypeDef hrtc;
  16:Core/Src/USER/user.c **** extern TIM_HandleTypeDef htim1;
  17:Core/Src/USER/user.c **** extern TIM_HandleTypeDef htim2;
  18:Core/Src/USER/user.c **** 
  19:Core/Src/USER/user.c **** unsigned char invertuotas=0;
  20:Core/Src/USER/user.c **** uint32_t bootsecons;
  21:Core/Src/USER/user.c **** 
  22:Core/Src/USER/user.c **** #define BUFFER_SIZE 64
  23:Core/Src/USER/user.c **** unsigned char testas[BUFFER_SIZE];
  24:Core/Src/USER/user.c **** 
  25:Core/Src/USER/user.c **** CCBuf cc; //struktura
  26:Core/Src/USER/user.c **** 
  27:Core/Src/USER/user.c **** volatile char seconds;
  28:Core/Src/USER/user.c **** volatile char buttons;
  29:Core/Src/USER/user.c **** volatile char old_buttons;
  30:Core/Src/USER/user.c **** volatile char mode;
  31:Core/Src/USER/user.c **** volatile char start_hour;
  32:Core/Src/USER/user.c **** volatile char start_minutes;
  33:Core/Src/USER/user.c **** /* program state:
  34:Core/Src/USER/user.c **** 
  35:Core/Src/USER/user.c **** 0- normal,boot, time
  36:Core/Src/USER/user.c **** 1- setup hour
  37:Core/Src/USER/user.c **** 2- setup minutes
  38:Core/Src/USER/user.c **** 3- setup start hour
  39:Core/Src/USER/user.c **** 4- setup start minute
  40:Core/Src/USER/user.c **** 
  41:Core/Src/USER/user.c **** 255-OLED saver
  42:Core/Src/USER/user.c **** */
  43:Core/Src/USER/user.c **** volatile unsigned char mode_delay=30;
  44:Core/Src/USER/user.c **** 
  45:Core/Src/USER/user.c **** void user_usb_rx(uint8_t* Buf, uint32_t *Len)
  46:Core/Src/USER/user.c **** {
 2880              		.loc 5 46 1 is_stmt 1 view -0
 2881              		.cfi_startproc
 2882              		@ args = 0, pretend = 0, frame = 0
 2883              		@ frame_needed = 0, uses_anonymous_args = 0
 2884              		.loc 5 46 1 is_stmt 0 view .LVU672
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 75


 2885 0000 70B5     		push	{r4, r5, r6, lr}
 2886              	.LCFI64:
 2887              		.cfi_def_cfa_offset 16
 2888              		.cfi_offset 4, -16
 2889              		.cfi_offset 5, -12
 2890              		.cfi_offset 6, -8
 2891              		.cfi_offset 14, -4
 2892 0002 0646     		mov	r6, r0
 2893 0004 0D46     		mov	r5, r1
  47:Core/Src/USER/user.c **** unsigned char i,a;
 2894              		.loc 5 47 1 is_stmt 1 view .LVU673
  48:Core/Src/USER/user.c **** for (i=0;i<*Len;i++)
 2895              		.loc 5 48 1 view .LVU674
 2896              	.LVL238:
 2897              		.loc 5 48 7 is_stmt 0 view .LVU675
 2898 0006 0024     		movs	r4, #0
 2899              		.loc 5 48 1 view .LVU676
 2900 0008 01E0     		b	.L196
 2901              	.LVL239:
 2902              	.L197:
 2903              		.loc 5 48 17 is_stmt 1 discriminator 2 view .LVU677
 2904              		.loc 5 48 18 is_stmt 0 discriminator 2 view .LVU678
 2905 000a 0134     		adds	r4, r4, #1
 2906              	.LVL240:
 2907              		.loc 5 48 18 discriminator 2 view .LVU679
 2908 000c E4B2     		uxtb	r4, r4
 2909              	.LVL241:
 2910              	.L196:
 2911              		.loc 5 48 10 is_stmt 1 discriminator 1 view .LVU680
 2912              		.loc 5 48 12 is_stmt 0 discriminator 1 view .LVU681
 2913 000e 2B68     		ldr	r3, [r5]
 2914              		.loc 5 48 1 discriminator 1 view .LVU682
 2915 0010 9C42     		cmp	r4, r3
 2916 0012 06D2     		bcs	.L200
  49:Core/Src/USER/user.c **** 	{
  50:Core/Src/USER/user.c **** 		a=Buf[i];
 2917              		.loc 5 50 3 is_stmt 1 view .LVU683
 2918              		.loc 5 50 4 is_stmt 0 view .LVU684
 2919 0014 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 2920              	.LVL242:
  51:Core/Src/USER/user.c **** 		if (a>10) circle_push(&cc , a);
 2921              		.loc 5 51 3 is_stmt 1 view .LVU685
 2922              		.loc 5 51 6 is_stmt 0 view .LVU686
 2923 0016 0A29     		cmp	r1, #10
 2924 0018 F7D9     		bls	.L197
 2925              		.loc 5 51 13 is_stmt 1 discriminator 1 view .LVU687
 2926 001a 0248     		ldr	r0, .L201
 2927 001c FFF7FEFF 		bl	circle_push
 2928              	.LVL243:
 2929              		.loc 5 51 13 is_stmt 0 discriminator 1 view .LVU688
 2930 0020 F3E7     		b	.L197
 2931              	.L200:
  52:Core/Src/USER/user.c **** 	}
  53:Core/Src/USER/user.c **** }
 2932              		.loc 5 53 1 view .LVU689
 2933 0022 70BD     		pop	{r4, r5, r6, pc}
 2934              	.LVL244:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 76


 2935              	.L202:
 2936              		.loc 5 53 1 view .LVU690
 2937              		.align	2
 2938              	.L201:
 2939 0024 00000000 		.word	.LANCHOR8
 2940              		.cfi_endproc
 2941              	.LFE117:
 2943              		.section	.rodata.user_init.str1.4,"aMS",%progbits,1
 2944              		.align	2
 2945              	.LC0:
 2946 0000 5757572E 		.ascii	"WWW.VABOLIS.LT\000"
 2946      5641424F 
 2946      4C49532E 
 2946      4C5400
 2947              		.section	.text.user_init,"ax",%progbits
 2948              		.align	1
 2949              		.global	user_init
 2950              		.syntax unified
 2951              		.thumb
 2952              		.thumb_func
 2954              	user_init:
 2955              	.LFB118:
  54:Core/Src/USER/user.c **** 
  55:Core/Src/USER/user.c **** void user_init(void)
  56:Core/Src/USER/user.c **** {
 2956              		.loc 5 56 1 is_stmt 1 view -0
 2957              		.cfi_startproc
 2958              		@ args = 0, pretend = 0, frame = 8
 2959              		@ frame_needed = 0, uses_anonymous_args = 0
 2960 0000 70B5     		push	{r4, r5, r6, lr}
 2961              	.LCFI65:
 2962              		.cfi_def_cfa_offset 16
 2963              		.cfi_offset 4, -16
 2964              		.cfi_offset 5, -12
 2965              		.cfi_offset 6, -8
 2966              		.cfi_offset 14, -4
 2967 0002 82B0     		sub	sp, sp, #8
 2968              	.LCFI66:
 2969              		.cfi_def_cfa_offset 24
  57:Core/Src/USER/user.c **** 	cc.buffer=testas;
 2970              		.loc 5 57 2 view .LVU692
 2971              		.loc 5 57 11 is_stmt 0 view .LVU693
 2972 0004 3148     		ldr	r0, .L205
 2973 0006 324B     		ldr	r3, .L205+4
 2974 0008 0360     		str	r3, [r0]
  58:Core/Src/USER/user.c **** 	circle_reset(&cc,BUFFER_SIZE);			//init circle buffer
 2975              		.loc 5 58 2 is_stmt 1 view .LVU694
 2976 000a 4021     		movs	r1, #64
 2977 000c FFF7FEFF 		bl	circle_reset
 2978              	.LVL245:
  59:Core/Src/USER/user.c **** 
  60:Core/Src/USER/user.c **** 	HAL_IWDG_Refresh(&hiwdg); //watchdogas
 2979              		.loc 5 60 2 view .LVU695
 2980 0010 304C     		ldr	r4, .L205+8
 2981 0012 2046     		mov	r0, r4
 2982 0014 FFF7FEFF 		bl	HAL_IWDG_Refresh
 2983              	.LVL246:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 77


  61:Core/Src/USER/user.c **** 
  62:Core/Src/USER/user.c **** 	
  63:Core/Src/USER/user.c **** 	SSD1306_Init();
 2984              		.loc 5 63 2 view .LVU696
 2985 0018 FFF7FEFF 		bl	SSD1306_Init
 2986              	.LVL247:
  64:Core/Src/USER/user.c **** 	HAL_IWDG_Refresh(&hiwdg); //watchdogas
 2987              		.loc 5 64 2 view .LVU697
 2988 001c 2046     		mov	r0, r4
 2989 001e FFF7FEFF 		bl	HAL_IWDG_Refresh
 2990              	.LVL248:
  65:Core/Src/USER/user.c **** 	HAL_Delay(500);
 2991              		.loc 5 65 2 view .LVU698
 2992 0022 4FF4FA70 		mov	r0, #500
 2993 0026 FFF7FEFF 		bl	HAL_Delay
 2994              	.LVL249:
  66:Core/Src/USER/user.c **** 	SSD1306_Init();
 2995              		.loc 5 66 2 view .LVU699
 2996 002a FFF7FEFF 		bl	SSD1306_Init
 2997              	.LVL250:
  67:Core/Src/USER/user.c **** 	SSD1306_clear(0);
 2998              		.loc 5 67 2 view .LVU700
 2999 002e 0020     		movs	r0, #0
 3000 0030 FFF7FEFF 		bl	SSD1306_clear
 3001              	.LVL251:
  68:Core/Src/USER/user.c **** 	SSD1306_move(0,0);
 3002              		.loc 5 68 2 view .LVU701
 3003 0034 0021     		movs	r1, #0
 3004 0036 0846     		mov	r0, r1
 3005 0038 FFF7FEFF 		bl	SSD1306_move
 3006              	.LVL252:
  69:Core/Src/USER/user.c **** 	HAL_IWDG_Refresh(&hiwdg); //watchdogas
 3007              		.loc 5 69 2 view .LVU702
 3008 003c 2046     		mov	r0, r4
 3009 003e FFF7FEFF 		bl	HAL_IWDG_Refresh
 3010              	.LVL253:
  70:Core/Src/USER/user.c **** 
  71:Core/Src/USER/user.c **** 	SSD1306_puts("WWW.VABOLIS.LT");
 3011              		.loc 5 71 2 view .LVU703
 3012 0042 2548     		ldr	r0, .L205+12
 3013 0044 FFF7FEFF 		bl	SSD1306_puts
 3014              	.LVL254:
  72:Core/Src/USER/user.c **** 	HAL_Delay(500);
 3015              		.loc 5 72 2 view .LVU704
 3016 0048 4FF4FA70 		mov	r0, #500
 3017 004c FFF7FEFF 		bl	HAL_Delay
 3018              	.LVL255:
  73:Core/Src/USER/user.c **** 	SSD1306_dim(1);
 3019              		.loc 5 73 2 view .LVU705
 3020 0050 0120     		movs	r0, #1
 3021 0052 FFF7FEFF 		bl	SSD1306_dim
 3022              	.LVL256:
  74:Core/Src/USER/user.c **** 	HAL_IWDG_Refresh(&hiwdg); //watchdogas
 3023              		.loc 5 74 2 view .LVU706
 3024 0056 2046     		mov	r0, r4
 3025 0058 FFF7FEFF 		bl	HAL_IWDG_Refresh
 3026              	.LVL257:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 78


  75:Core/Src/USER/user.c **** 	HAL_Delay(500);
 3027              		.loc 5 75 2 view .LVU707
 3028 005c 4FF4FA70 		mov	r0, #500
 3029 0060 FFF7FEFF 		bl	HAL_Delay
 3030              	.LVL258:
  76:Core/Src/USER/user.c **** 	SSD1306_clear(0);
 3031              		.loc 5 76 2 view .LVU708
 3032 0064 0020     		movs	r0, #0
 3033 0066 FFF7FEFF 		bl	SSD1306_clear
 3034              	.LVL259:
  77:Core/Src/USER/user.c **** 	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 3035              		.loc 5 77 2 view .LVU709
 3036 006a 1C4C     		ldr	r4, .L205+16
 3037 006c 0021     		movs	r1, #0
 3038 006e 2046     		mov	r0, r4
 3039 0070 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 3040              	.LVL260:
  78:Core/Src/USER/user.c **** 	HAL_TIM_Base_Start_IT 	(&htim2);
 3041              		.loc 5 78 2 view .LVU710
 3042 0074 1A48     		ldr	r0, .L205+20
 3043 0076 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 3044              	.LVL261:
  79:Core/Src/USER/user.c **** 	__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,5*255);
 3045              		.loc 5 79 2 view .LVU711
 3046 007a 2368     		ldr	r3, [r4]
 3047 007c 40F2FB42 		movw	r2, #1275
 3048 0080 5A63     		str	r2, [r3, #52]
  80:Core/Src/USER/user.c **** 	//HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10); // du nuliai nes F1 nera. paskutinis- skaicius 0-7F, tik
  81:Core/Src/USER/user.c **** 
  82:Core/Src/USER/user.c **** 	RTC_DateTypeDef dienos= {0};
 3049              		.loc 5 82 2 view .LVU712
 3050              		.loc 5 82 18 is_stmt 0 view .LVU713
 3051 0082 0025     		movs	r5, #0
 3052 0084 0195     		str	r5, [sp, #4]
  83:Core/Src/USER/user.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 3053              		.loc 5 83 2 is_stmt 1 view .LVU714
 3054 0086 174E     		ldr	r6, .L205+24
 3055 0088 2A46     		mov	r2, r5
 3056 008a 01A9     		add	r1, sp, #4
 3057 008c 3046     		mov	r0, r6
 3058 008e FFF7FEFF 		bl	HAL_RTC_GetDate
 3059              	.LVL262:
  84:Core/Src/USER/user.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3060              		.loc 5 84 2 view .LVU715
 3061 0092 154C     		ldr	r4, .L205+28
 3062 0094 2A46     		mov	r2, r5
 3063 0096 2146     		mov	r1, r4
 3064 0098 3046     		mov	r0, r6
 3065 009a FFF7FEFF 		bl	HAL_RTC_GetTime
 3066              	.LVL263:
  85:Core/Src/USER/user.c **** 	bootsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*86400;
 3067              		.loc 5 85 2 view .LVU716
 3068              		.loc 5 85 21 is_stmt 0 view .LVU717
 3069 009e 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 3070              		.loc 5 85 41 view .LVU718
 3071 00a0 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 3072              		.loc 5 85 49 view .LVU719
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 79


 3073 00a2 C2EB0212 		rsb	r2, r2, r2, lsl #4
 3074 00a6 9300     		lsls	r3, r2, #2
 3075              		.loc 5 85 32 view .LVU720
 3076 00a8 4FF46162 		mov	r2, #3600
 3077 00ac 02FB0133 		mla	r3, r2, r1, r3
 3078              		.loc 5 85 61 view .LVU721
 3079 00b0 A278     		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 3080              		.loc 5 85 52 view .LVU722
 3081 00b2 1344     		add	r3, r3, r2
 3082              		.loc 5 85 77 view .LVU723
 3083 00b4 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 3084              		.loc 5 85 82 view .LVU724
 3085 00b8 013A     		subs	r2, r2, #1
 3086              		.loc 5 85 69 view .LVU725
 3087 00ba 0C49     		ldr	r1, .L205+32
 3088 00bc 01FB0233 		mla	r3, r1, r2, r3
 3089              		.loc 5 85 12 view .LVU726
 3090 00c0 0B4A     		ldr	r2, .L205+36
 3091 00c2 1360     		str	r3, [r2]
  86:Core/Src/USER/user.c **** 	rtc_int_init();
 3092              		.loc 5 86 2 is_stmt 1 view .LVU727
 3093 00c4 FFF7FEFF 		bl	rtc_int_init
 3094              	.LVL264:
  87:Core/Src/USER/user.c **** }
 3095              		.loc 5 87 1 is_stmt 0 view .LVU728
 3096 00c8 02B0     		add	sp, sp, #8
 3097              	.LCFI67:
 3098              		.cfi_def_cfa_offset 16
 3099              		@ sp needed
 3100 00ca 70BD     		pop	{r4, r5, r6, pc}
 3101              	.L206:
 3102              		.align	2
 3103              	.L205:
 3104 00cc 00000000 		.word	.LANCHOR8
 3105 00d0 00000000 		.word	.LANCHOR9
 3106 00d4 00000000 		.word	.LANCHOR10
 3107 00d8 00000000 		.word	.LC0
 3108 00dc 00000000 		.word	.LANCHOR11
 3109 00e0 00000000 		.word	.LANCHOR12
 3110 00e4 00000000 		.word	.LANCHOR3
 3111 00e8 00000000 		.word	.LANCHOR2
 3112 00ec 80510100 		.word	86400
 3113 00f0 00000000 		.word	.LANCHOR13
 3114              		.cfi_endproc
 3115              	.LFE118:
 3117              		.section	.text.ReadPins,"ax",%progbits
 3118              		.align	1
 3119              		.global	ReadPins
 3120              		.syntax unified
 3121              		.thumb
 3122              		.thumb_func
 3124              	ReadPins:
 3125              	.LFB119:
  88:Core/Src/USER/user.c **** 
  89:Core/Src/USER/user.c **** void ReadPins(void)
  90:Core/Src/USER/user.c **** {
 3126              		.loc 5 90 1 is_stmt 1 view -0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 80


 3127              		.cfi_startproc
 3128              		@ args = 0, pretend = 0, frame = 0
 3129              		@ frame_needed = 0, uses_anonymous_args = 0
 3130 0000 08B5     		push	{r3, lr}
 3131              	.LCFI68:
 3132              		.cfi_def_cfa_offset 8
 3133              		.cfi_offset 3, -8
 3134              		.cfi_offset 14, -4
  91:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN1_Pin)){buttons=buttons | 1;} else {buttons=buttons & 0xFE;}
 3135              		.loc 5 91 1 view .LVU730
 3136              		.loc 5 91 5 is_stmt 0 view .LVU731
 3137 0002 4FF40051 		mov	r1, #8192
 3138 0006 1948     		ldr	r0, .L215
 3139 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3140              	.LVL265:
 3141              		.loc 5 91 3 view .LVU732
 3142 000c D8B9     		cbnz	r0, .L208
 3143              		.loc 5 91 40 is_stmt 1 discriminator 1 view .LVU733
 3144              		.loc 5 91 47 is_stmt 0 discriminator 1 view .LVU734
 3145 000e 184A     		ldr	r2, .L215+4
 3146 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3147 0012 43F00103 		orr	r3, r3, #1
 3148 0016 1370     		strb	r3, [r2]
 3149              	.L209:
  92:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN2_Pin)){buttons=buttons | 2;} else {buttons=buttons & 0xFD;}
 3150              		.loc 5 92 1 is_stmt 1 view .LVU735
 3151              		.loc 5 92 5 is_stmt 0 view .LVU736
 3152 0018 4FF48041 		mov	r1, #16384
 3153 001c 1348     		ldr	r0, .L215
 3154 001e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3155              	.LVL266:
 3156              		.loc 5 92 3 view .LVU737
 3157 0022 B0B9     		cbnz	r0, .L210
 3158              		.loc 5 92 40 is_stmt 1 discriminator 1 view .LVU738
 3159              		.loc 5 92 47 is_stmt 0 discriminator 1 view .LVU739
 3160 0024 124A     		ldr	r2, .L215+4
 3161 0026 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3162 0028 43F00203 		orr	r3, r3, #2
 3163 002c 1370     		strb	r3, [r2]
 3164              	.L211:
  93:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN3_Pin)){buttons=buttons | 4;} else {buttons=buttons & 0xFB;}
 3165              		.loc 5 93 1 is_stmt 1 view .LVU740
 3166              		.loc 5 93 5 is_stmt 0 view .LVU741
 3167 002e 4FF40041 		mov	r1, #32768
 3168 0032 0E48     		ldr	r0, .L215
 3169 0034 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 3170              	.LVL267:
 3171              		.loc 5 93 3 view .LVU742
 3172 0038 88B9     		cbnz	r0, .L212
 3173              		.loc 5 93 40 is_stmt 1 discriminator 1 view .LVU743
 3174              		.loc 5 93 47 is_stmt 0 discriminator 1 view .LVU744
 3175 003a 0D4A     		ldr	r2, .L215+4
 3176 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3177 003e 43F00403 		orr	r3, r3, #4
 3178 0042 1370     		strb	r3, [r2]
 3179              	.L207:
  94:Core/Src/USER/user.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 81


 3180              		.loc 5 94 1 view .LVU745
 3181 0044 08BD     		pop	{r3, pc}
 3182              	.L208:
  91:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN2_Pin)){buttons=buttons | 2;} else {buttons=buttons & 0xFD;}
 3183              		.loc 5 91 68 is_stmt 1 discriminator 2 view .LVU746
  91:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN2_Pin)){buttons=buttons | 2;} else {buttons=buttons & 0xFD;}
 3184              		.loc 5 91 84 is_stmt 0 discriminator 2 view .LVU747
 3185 0046 0A4A     		ldr	r2, .L215+4
 3186 0048 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3187 004a 03F0FE03 		and	r3, r3, #254
  91:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN2_Pin)){buttons=buttons | 2;} else {buttons=buttons & 0xFD;}
 3188              		.loc 5 91 75 discriminator 2 view .LVU748
 3189 004e 1370     		strb	r3, [r2]
 3190 0050 E2E7     		b	.L209
 3191              	.L210:
  92:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN3_Pin)){buttons=buttons | 4;} else {buttons=buttons & 0xFB;}
 3192              		.loc 5 92 68 is_stmt 1 discriminator 2 view .LVU749
  92:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN3_Pin)){buttons=buttons | 4;} else {buttons=buttons & 0xFB;}
 3193              		.loc 5 92 84 is_stmt 0 discriminator 2 view .LVU750
 3194 0052 074A     		ldr	r2, .L215+4
 3195 0054 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3196 0056 03F0FD03 		and	r3, r3, #253
  92:Core/Src/USER/user.c **** if(!HAL_GPIO_ReadPin(GPIOB, BTN3_Pin)){buttons=buttons | 4;} else {buttons=buttons & 0xFB;}
 3197              		.loc 5 92 75 discriminator 2 view .LVU751
 3198 005a 1370     		strb	r3, [r2]
 3199 005c E7E7     		b	.L211
 3200              	.L212:
  93:Core/Src/USER/user.c **** }
 3201              		.loc 5 93 68 is_stmt 1 discriminator 2 view .LVU752
  93:Core/Src/USER/user.c **** }
 3202              		.loc 5 93 84 is_stmt 0 discriminator 2 view .LVU753
 3203 005e 044A     		ldr	r2, .L215+4
 3204 0060 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3205 0062 03F0FB03 		and	r3, r3, #251
  93:Core/Src/USER/user.c **** }
 3206              		.loc 5 93 75 discriminator 2 view .LVU754
 3207 0066 1370     		strb	r3, [r2]
 3208              		.loc 5 94 1 discriminator 2 view .LVU755
 3209 0068 ECE7     		b	.L207
 3210              	.L216:
 3211 006a 00BF     		.align	2
 3212              	.L215:
 3213 006c 000C0140 		.word	1073810432
 3214 0070 00000000 		.word	.LANCHOR14
 3215              		.cfi_endproc
 3216              	.LFE119:
 3218              		.section	.text.show_time,"ax",%progbits
 3219              		.align	1
 3220              		.global	show_time
 3221              		.syntax unified
 3222              		.thumb
 3223              		.thumb_func
 3225              	show_time:
 3226              	.LFB124:
  95:Core/Src/USER/user.c **** 
  96:Core/Src/USER/user.c **** void commandcom(char * txt) // network (UART,USB) command interpreter
  97:Core/Src/USER/user.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 82


  98:Core/Src/USER/user.c **** 
  99:Core/Src/USER/user.c **** if (txt[0] !='A' || txt[1]!='T') return;
 100:Core/Src/USER/user.c **** 
 101:Core/Src/USER/user.c **** 	switch(txt[2])
 102:Core/Src/USER/user.c **** 	{
 103:Core/Src/USER/user.c **** 		case 'T':
 104:Core/Src/USER/user.c **** 			rtc_set_time_text(txt+3);
 105:Core/Src/USER/user.c **** 		break;
 106:Core/Src/USER/user.c **** 		case 'D':
 107:Core/Src/USER/user.c **** 			rtc_set_date_text(txt+3);		
 108:Core/Src/USER/user.c **** 		break; 
 109:Core/Src/USER/user.c **** 		case 'I':
 110:Core/Src/USER/user.c **** 			CDC_Transmit_FS((uint8_t*) "9H CLOCK\r\n(c)2023 Vabolis.lt\r\n",33);
 111:Core/Src/USER/user.c **** 		break;
 112:Core/Src/USER/user.c **** 		case 'A':
 113:Core/Src/USER/user.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,55*255);
 114:Core/Src/USER/user.c **** 		break;
 115:Core/Src/USER/user.c **** 	}
 116:Core/Src/USER/user.c **** }
 117:Core/Src/USER/user.c **** 
 118:Core/Src/USER/user.c **** 
 119:Core/Src/USER/user.c **** void user_loop(void)
 120:Core/Src/USER/user.c **** {
 121:Core/Src/USER/user.c **** char a;
 122:Core/Src/USER/user.c **** char txt[32];
 123:Core/Src/USER/user.c **** unsigned char txtp=0;
 124:Core/Src/USER/user.c **** 
 125:Core/Src/USER/user.c **** while(1)
 126:Core/Src/USER/user.c **** 	{
 127:Core/Src/USER/user.c **** 	HAL_IWDG_Refresh(&hiwdg); //watchdogas
 128:Core/Src/USER/user.c **** 	while(circle_available(&cc)>0) 
 129:Core/Src/USER/user.c **** 		{
 130:Core/Src/USER/user.c **** 			a=circle_pull(&cc);
 131:Core/Src/USER/user.c **** 			
 132:Core/Src/USER/user.c **** 			if (a>=' ' && a<='z')
 133:Core/Src/USER/user.c **** 			{
 134:Core/Src/USER/user.c **** 				txt[txtp]=a;
 135:Core/Src/USER/user.c **** 				txtp++;
 136:Core/Src/USER/user.c **** 				txt[txtp]=0;
 137:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 138:Core/Src/USER/user.c **** 			}
 139:Core/Src/USER/user.c **** 			else if (a<' ')
 140:Core/Src/USER/user.c **** 			{
 141:Core/Src/USER/user.c **** 				if (txtp>2)commandcom(txt);
 142:Core/Src/USER/user.c **** 				txt[0]=0;
 143:Core/Src/USER/user.c **** 				txtp=0;
 144:Core/Src/USER/user.c **** 			}
 145:Core/Src/USER/user.c **** 		}
 146:Core/Src/USER/user.c **** 	}
 147:Core/Src/USER/user.c **** } /* be isejimo is loop! */
 148:Core/Src/USER/user.c **** 
 149:Core/Src/USER/user.c **** 
 150:Core/Src/USER/user.c **** 
 151:Core/Src/USER/user.c **** void user_seconds_job(void)
 152:Core/Src/USER/user.c **** {
 153:Core/Src/USER/user.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 154:Core/Src/USER/user.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 83


 155:Core/Src/USER/user.c **** 	
 156:Core/Src/USER/user.c **** 	show_time();
 157:Core/Src/USER/user.c **** 	
 158:Core/Src/USER/user.c **** seconds++;
 159:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,seconds*255);
 160:Core/Src/USER/user.c **** }
 161:Core/Src/USER/user.c **** 
 162:Core/Src/USER/user.c **** 
 163:Core/Src/USER/user.c **** 
 164:Core/Src/USER/user.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)  //2Hz?
 165:Core/Src/USER/user.c **** {
 166:Core/Src/USER/user.c **** //char text[2];
 167:Core/Src/USER/user.c **** unsigned char tmp;
 168:Core/Src/USER/user.c **** 
 169:Core/Src/USER/user.c ****   if (htim == &htim2 )
 170:Core/Src/USER/user.c ****   {
 171:Core/Src/USER/user.c ****   	ReadPins();
 172:Core/Src/USER/user.c **** 	HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 173:Core/Src/USER/user.c **** 	if (buttons==0 && mode_delay>0) {mode_delay--;}
 174:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 175:Core/Src/USER/user.c **** 	
 176:Core/Src/USER/user.c **** 	if (buttons != old_buttons)
 177:Core/Src/USER/user.c **** 		{
 178:Core/Src/USER/user.c **** 		old_buttons=buttons;		
 179:Core/Src/USER/user.c **** 		
 180:Core/Src/USER/user.c **** 		if (buttons==1)
 181:Core/Src/USER/user.c **** 			{
 182:Core/Src/USER/user.c **** 			mode++;
 183:Core/Src/USER/user.c **** 			mode_delay=30;
 184:Core/Src/USER/user.c **** 			if (mode>4) {mode=0;}
 185:Core/Src/USER/user.c **** 			}
 186:Core/Src/USER/user.c **** 		if (buttons==6) {HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN); mode=0; currTime.Seconds=0; H
 187:Core/Src/USER/user.c **** 			//########## 
 188:Core/Src/USER/user.c **** 			switch( mode ) 
 189:Core/Src/USER/user.c **** 				{
 190:Core/Src/USER/user.c **** 					case 0x00: //normal mode
 191:Core/Src/USER/user.c **** 					SSD1306_move(3,0); SSD1306_puts("                ");
 192:Core/Src/USER/user.c **** 					break;
 193:Core/Src/USER/user.c **** 					case 0x01: //setup hour
 194:Core/Src/USER/user.c **** 						
 195:Core/Src/USER/user.c **** 						__disable_irq();
 196:Core/Src/USER/user.c **** 						HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 197:Core/Src/USER/user.c **** 						if(buttons==2) {
 198:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 199:Core/Src/USER/user.c **** 											tmp++; if (tmp>23) tmp=0;
 200:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 201:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 202:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 203:Core/Src/USER/user.c **** 										}
 204:Core/Src/USER/user.c **** 						if(buttons==4) {
 205:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 206:Core/Src/USER/user.c **** 											tmp--;
 207:Core/Src/USER/user.c **** 											if(tmp == 255) {tmp=23;}
 208:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 209:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 210:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 211:Core/Src/USER/user.c **** 										}
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 84


 212:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("Setting hours ");
 213:Core/Src/USER/user.c **** 						__enable_irq();
 214:Core/Src/USER/user.c **** 					break;
 215:Core/Src/USER/user.c **** 					case 0x02: //setup minute
 216:Core/Src/USER/user.c **** 						__disable_irq();
 217:Core/Src/USER/user.c **** 						HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 218:Core/Src/USER/user.c **** 						if(buttons==2) {
 219:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
 220:Core/Src/USER/user.c **** 											tmp++; if(tmp>59) tmp=0;
 221:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 222:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 223:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 224:Core/Src/USER/user.c **** 										}
 225:Core/Src/USER/user.c **** 						if(buttons==4) {
 226:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
 227:Core/Src/USER/user.c **** 											tmp--; if(tmp ==255 ) {tmp=59;}
 228:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 229:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 230:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 231:Core/Src/USER/user.c **** 										}
 232:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("Setting mins  ");
 233:Core/Src/USER/user.c **** 						__enable_irq();
 234:Core/Src/USER/user.c **** 					break;
 235:Core/Src/USER/user.c **** 					case 0x03: //setup start hour
 236:Core/Src/USER/user.c **** 						if(buttons==2) {start_hour++;}
 237:Core/Src/USER/user.c **** 						if(buttons==4) {start_hour--;}
 238:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End hour:");
 239:Core/Src/USER/user.c **** 					break;
 240:Core/Src/USER/user.c **** 					case 0x04: //setup start minute
 241:Core/Src/USER/user.c **** 						if(buttons==2) {start_minutes++;}
 242:Core/Src/USER/user.c **** 						if(buttons==4) {start_minutes--;}
 243:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End min:");
 244:Core/Src/USER/user.c **** 					break;
 245:Core/Src/USER/user.c **** 					case 0x05: //xxx
 246:Core/Src/USER/user.c **** 					break;
 247:Core/Src/USER/user.c **** 				}
 248:Core/Src/USER/user.c **** 
 249:Core/Src/USER/user.c **** 		}
 250:Core/Src/USER/user.c **** 		
 251:Core/Src/USER/user.c **** 		
 252:Core/Src/USER/user.c **** 	//text[0]=mode+'0';
 253:Core/Src/USER/user.c **** 	//text[1]=0;
 254:Core/Src/USER/user.c **** 	
 255:Core/Src/USER/user.c **** 	//SSD1306_puts(text);
 256:Core/Src/USER/user.c **** 		
 257:Core/Src/USER/user.c **** 		
 258:Core/Src/USER/user.c ****   }
 259:Core/Src/USER/user.c **** }
 260:Core/Src/USER/user.c **** 
 261:Core/Src/USER/user.c **** 
 262:Core/Src/USER/user.c **** 
 263:Core/Src/USER/user.c **** void show_time(void)
 264:Core/Src/USER/user.c **** {
 3227              		.loc 5 264 1 is_stmt 1 view -0
 3228              		.cfi_startproc
 3229              		@ args = 0, pretend = 0, frame = 16
 3230              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 85


 3231 0000 70B5     		push	{r4, r5, r6, lr}
 3232              	.LCFI69:
 3233              		.cfi_def_cfa_offset 16
 3234              		.cfi_offset 4, -16
 3235              		.cfi_offset 5, -12
 3236              		.cfi_offset 6, -8
 3237              		.cfi_offset 14, -4
 3238 0002 84B0     		sub	sp, sp, #16
 3239              	.LCFI70:
 3240              		.cfi_def_cfa_offset 32
 265:Core/Src/USER/user.c **** unsigned char font[]={0x00, 0x00, 0xe7, 0xe7, 0xe7, 0xe7, 0x00, 0x00};
 3241              		.loc 5 265 1 view .LVU757
 3242              		.loc 5 265 15 is_stmt 0 view .LVU758
 3243 0004 4D4B     		ldr	r3, .L221
 3244 0006 93E80300 		ldm	r3, {r0, r1}
 3245 000a 04AB     		add	r3, sp, #16
 3246 000c 03E90300 		stmdb	r3, {r0, r1}
 266:Core/Src/USER/user.c **** uint32_t nowsecons, uptime;
 3247              		.loc 5 266 1 is_stmt 1 view .LVU759
 267:Core/Src/USER/user.c **** //char text[9];
 268:Core/Src/USER/user.c **** 
 269:Core/Src/USER/user.c **** RTC_DateTypeDef dienos;
 3248              		.loc 5 269 1 view .LVU760
 270:Core/Src/USER/user.c **** 
 271:Core/Src/USER/user.c **** HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 3249              		.loc 5 271 1 view .LVU761
 3250 0010 0022     		movs	r2, #0
 3251 0012 0121     		movs	r1, #1
 3252 0014 4A48     		ldr	r0, .L221+4
 3253 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3254              	.LVL268:
 272:Core/Src/USER/user.c **** HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 3255              		.loc 5 272 1 view .LVU762
 3256 001a 4A4C     		ldr	r4, .L221+8
 3257 001c 0022     		movs	r2, #0
 3258 001e 01A9     		add	r1, sp, #4
 3259 0020 2046     		mov	r0, r4
 3260 0022 FFF7FEFF 		bl	HAL_RTC_GetDate
 3261              	.LVL269:
 273:Core/Src/USER/user.c **** //HAL_Delay(5);
 274:Core/Src/USER/user.c **** 
 275:Core/Src/USER/user.c **** HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3262              		.loc 5 275 1 view .LVU763
 3263 0026 484D     		ldr	r5, .L221+12
 3264 0028 0022     		movs	r2, #0
 3265 002a 2946     		mov	r1, r5
 3266 002c 2046     		mov	r0, r4
 3267 002e FFF7FEFF 		bl	HAL_RTC_GetTime
 3268              	.LVL270:
 276:Core/Src/USER/user.c **** nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*86400;
 3269              		.loc 5 276 1 view .LVU764
 3270              		.loc 5 276 19 is_stmt 0 view .LVU765
 3271 0032 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3272              		.loc 5 276 39 view .LVU766
 3273 0034 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 3274              		.loc 5 276 47 view .LVU767
 3275 0036 C3EB0313 		rsb	r3, r3, r3, lsl #4
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 86


 3276 003a 9C00     		lsls	r4, r3, #2
 3277              		.loc 5 276 30 view .LVU768
 3278 003c 4FF46163 		mov	r3, #3600
 3279 0040 03FB0244 		mla	r4, r3, r2, r4
 3280              		.loc 5 276 59 view .LVU769
 3281 0044 AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 3282              		.loc 5 276 50 view .LVU770
 3283 0046 1C44     		add	r4, r4, r3
 3284              		.loc 5 276 75 view .LVU771
 3285 0048 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 3286              		.loc 5 276 80 view .LVU772
 3287 004c 013B     		subs	r3, r3, #1
 3288              		.loc 5 276 67 view .LVU773
 3289 004e 3F49     		ldr	r1, .L221+16
 3290 0050 01FB0344 		mla	r4, r1, r3, r4
 3291              	.LVL271:
 277:Core/Src/USER/user.c **** 
 278:Core/Src/USER/user.c **** if(nowsecons>bootsecons){uptime=nowsecons-bootsecons;} else {uptime=0;} //error!
 3292              		.loc 5 278 1 is_stmt 1 view .LVU774
 3293              		.loc 5 278 13 is_stmt 0 view .LVU775
 3294 0054 3E4B     		ldr	r3, .L221+20
 3295 0056 1B68     		ldr	r3, [r3]
 3296              		.loc 5 278 3 view .LVU776
 3297 0058 A342     		cmp	r3, r4
 3298 005a 6CD2     		bcs	.L219
 3299              		.loc 5 278 26 is_stmt 1 discriminator 1 view .LVU777
 3300              		.loc 5 278 32 is_stmt 0 discriminator 1 view .LVU778
 3301 005c E41A     		subs	r4, r4, r3
 3302              	.LVL272:
 3303              	.L218:
 279:Core/Src/USER/user.c **** 
 280:Core/Src/USER/user.c **** 
 281:Core/Src/USER/user.c **** 
 282:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+0,currTime.Hours/10);
 3304              		.loc 5 282 1 is_stmt 1 view .LVU779
 3305 005e 3D4D     		ldr	r5, .L221+24
 3306 0060 A5FB0232 		umull	r3, r2, r5, r2
 3307              	.LVL273:
 3308              		.loc 5 282 1 is_stmt 0 view .LVU780
 3309 0064 D208     		lsrs	r2, r2, #3
 3310 0066 0121     		movs	r1, #1
 3311              	.LVL274:
 3312              		.loc 5 282 1 view .LVU781
 3313 0068 0020     		movs	r0, #0
 3314 006a FFF7FEFF 		bl	SSD1306_bigdigit
 3315              	.LVL275:
 283:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+2,currTime.Hours%10);
 3316              		.loc 5 283 1 is_stmt 1 view .LVU782
 3317              		.loc 5 283 32 is_stmt 0 view .LVU783
 3318 006e 364E     		ldr	r6, .L221+12
 3319 0070 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 3320              		.loc 5 283 1 view .LVU784
 3321 0072 A5FB0213 		umull	r1, r3, r5, r2
 3322 0076 DB08     		lsrs	r3, r3, #3
 3323 0078 03EB8303 		add	r3, r3, r3, lsl #2
 3324 007c 5900     		lsls	r1, r3, #1
 3325 007e 521A     		subs	r2, r2, r1
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 87


 3326 0080 D2B2     		uxtb	r2, r2
 3327 0082 0321     		movs	r1, #3
 3328 0084 0020     		movs	r0, #0
 3329 0086 FFF7FEFF 		bl	SSD1306_bigdigit
 3330              	.LVL276:
 284:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+5,currTime.Minutes/10);
 3331              		.loc 5 284 1 is_stmt 1 view .LVU785
 3332              		.loc 5 284 32 is_stmt 0 view .LVU786
 3333 008a 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3334              		.loc 5 284 1 view .LVU787
 3335 008c A5FB0232 		umull	r3, r2, r5, r2
 3336 0090 D208     		lsrs	r2, r2, #3
 3337 0092 0621     		movs	r1, #6
 3338 0094 0020     		movs	r0, #0
 3339 0096 FFF7FEFF 		bl	SSD1306_bigdigit
 3340              	.LVL277:
 285:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+7,currTime.Minutes%10);
 3341              		.loc 5 285 1 is_stmt 1 view .LVU788
 3342              		.loc 5 285 32 is_stmt 0 view .LVU789
 3343 009a 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3344              		.loc 5 285 1 view .LVU790
 3345 009c A5FB0213 		umull	r1, r3, r5, r2
 3346 00a0 DB08     		lsrs	r3, r3, #3
 3347 00a2 03EB8303 		add	r3, r3, r3, lsl #2
 3348 00a6 5900     		lsls	r1, r3, #1
 3349 00a8 521A     		subs	r2, r2, r1
 3350 00aa D2B2     		uxtb	r2, r2
 3351 00ac 0821     		movs	r1, #8
 3352 00ae 0020     		movs	r0, #0
 3353 00b0 FFF7FEFF 		bl	SSD1306_bigdigit
 3354              	.LVL278:
 286:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+10,currTime.Seconds/10);
 3355              		.loc 5 286 1 is_stmt 1 view .LVU791
 3356              		.loc 5 286 33 is_stmt 0 view .LVU792
 3357 00b4 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 3358              		.loc 5 286 1 view .LVU793
 3359 00b6 A5FB0232 		umull	r3, r2, r5, r2
 3360 00ba D208     		lsrs	r2, r2, #3
 3361 00bc 0B21     		movs	r1, #11
 3362 00be 0020     		movs	r0, #0
 3363 00c0 FFF7FEFF 		bl	SSD1306_bigdigit
 3364              	.LVL279:
 287:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+12,currTime.Seconds%10);
 3365              		.loc 5 287 1 is_stmt 1 view .LVU794
 3366              		.loc 5 287 33 is_stmt 0 view .LVU795
 3367 00c4 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 3368              		.loc 5 287 1 view .LVU796
 3369 00c6 A5FB0235 		umull	r3, r5, r5, r2
 3370 00ca ED08     		lsrs	r5, r5, #3
 3371 00cc 05EB8505 		add	r5, r5, r5, lsl #2
 3372 00d0 6B00     		lsls	r3, r5, #1
 3373 00d2 D21A     		subs	r2, r2, r3
 3374 00d4 D2B2     		uxtb	r2, r2
 3375 00d6 0D21     		movs	r1, #13
 3376 00d8 0020     		movs	r0, #0
 3377 00da FFF7FEFF 		bl	SSD1306_bigdigit
 3378              	.LVL280:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 88


 288:Core/Src/USER/user.c **** 
 289:Core/Src/USER/user.c **** SSD1306_move(1, 1+4);
 3379              		.loc 5 289 1 is_stmt 1 view .LVU797
 3380 00de 0521     		movs	r1, #5
 3381 00e0 0120     		movs	r0, #1
 3382 00e2 FFF7FEFF 		bl	SSD1306_move
 3383              	.LVL281:
 290:Core/Src/USER/user.c **** 
 291:Core/Src/USER/user.c **** SSD1306_put_tile(font,8);
 3384              		.loc 5 291 1 view .LVU798
 3385 00e6 0821     		movs	r1, #8
 3386 00e8 0DEB0100 		add	r0, sp, r1
 3387 00ec FFF7FEFF 		bl	SSD1306_put_tile
 3388              	.LVL282:
 292:Core/Src/USER/user.c **** 
 293:Core/Src/USER/user.c **** SSD1306_move(1, 1+9);
 3389              		.loc 5 293 1 view .LVU799
 3390 00f0 0A21     		movs	r1, #10
 3391 00f2 0120     		movs	r0, #1
 3392 00f4 FFF7FEFF 		bl	SSD1306_move
 3393              	.LVL283:
 294:Core/Src/USER/user.c **** SSD1306_put_tile(font,8);
 3394              		.loc 5 294 1 view .LVU800
 3395 00f8 0821     		movs	r1, #8
 3396 00fa 0DEB0100 		add	r0, sp, r1
 3397 00fe FFF7FEFF 		bl	SSD1306_put_tile
 3398              	.LVL284:
 295:Core/Src/USER/user.c **** 
 296:Core/Src/USER/user.c **** currTime.Hours=uptime/3600;
 3399              		.loc 5 296 1 view .LVU801
 3400              		.loc 5 296 22 is_stmt 0 view .LVU802
 3401 0102 154A     		ldr	r2, .L221+28
 3402 0104 A2FB0432 		umull	r3, r2, r2, r4
 3403              		.loc 5 296 15 view .LVU803
 3404 0108 C2F3C722 		ubfx	r2, r2, #11, #8
 3405 010c 3270     		strb	r2, [r6]
 297:Core/Src/USER/user.c **** currTime.Minutes=(uptime-currTime.Hours*3600)/60;
 3406              		.loc 5 297 1 is_stmt 1 view .LVU804
 3407              		.loc 5 297 25 is_stmt 0 view .LVU805
 3408 010e 4FF46163 		mov	r3, #3600
 3409 0112 03FB1243 		mls	r3, r3, r2, r4
 3410              		.loc 5 297 46 view .LVU806
 3411 0116 1149     		ldr	r1, .L221+32
 3412 0118 A1FB0313 		umull	r1, r3, r1, r3
 3413              		.loc 5 297 17 view .LVU807
 3414 011c C3F34713 		ubfx	r3, r3, #5, #8
 3415 0120 7370     		strb	r3, [r6, #1]
 298:Core/Src/USER/user.c **** currTime.Seconds=uptime-currTime.Hours*3600-currTime.Minutes*60;
 3416              		.loc 5 298 1 is_stmt 1 view .LVU808
 3417              		.loc 5 298 24 is_stmt 0 view .LVU809
 3418 0122 A4EB0214 		sub	r4, r4, r2, lsl #4
 3419              	.LVL285:
 3420              		.loc 5 298 24 view .LVU810
 3421 0126 E4B2     		uxtb	r4, r4
 3422              		.loc 5 298 44 view .LVU811
 3423 0128 C3EB0313 		rsb	r3, r3, r3, lsl #4
 3424 012c 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 89


 3425 012e A41A     		subs	r4, r4, r2
 3426              		.loc 5 298 17 view .LVU812
 3427 0130 B470     		strb	r4, [r6, #2]
 299:Core/Src/USER/user.c **** 
 300:Core/Src/USER/user.c **** 
 301:Core/Src/USER/user.c **** /*
 302:Core/Src/USER/user.c **** text[0]=(currTime.Hours)/10+'0';
 303:Core/Src/USER/user.c **** text[1]=(currTime.Hours)%10+'0';
 304:Core/Src/USER/user.c **** text[2]=':';	
 305:Core/Src/USER/user.c **** 
 306:Core/Src/USER/user.c **** text[3]=(currTime.Minutes)/10+'0';
 307:Core/Src/USER/user.c **** text[4]=(currTime.Minutes)%10+'0';
 308:Core/Src/USER/user.c **** text[5]=':';	
 309:Core/Src/USER/user.c **** 
 310:Core/Src/USER/user.c **** 
 311:Core/Src/USER/user.c **** text[6]=(currTime.Seconds)/10+'0';
 312:Core/Src/USER/user.c **** text[7]=(currTime.Seconds)%10+'0';
 313:Core/Src/USER/user.c **** 
 314:Core/Src/USER/user.c **** text[8]=0;
 315:Core/Src/USER/user.c **** 
 316:Core/Src/USER/user.c **** //itoa(uptime,text,10);
 317:Core/Src/USER/user.c **** 
 318:Core/Src/USER/user.c **** 
 319:Core/Src/USER/user.c **** 
 320:Core/Src/USER/user.c **** SSD1306_move(3,4);
 321:Core/Src/USER/user.c **** SSD1306_puts(text);
 322:Core/Src/USER/user.c **** 
 323:Core/Src/USER/user.c **** if(uptime>3*3600) {invertuotas=1;}
 324:Core/Src/USER/user.c **** 
 325:Core/Src/USER/user.c **** if(invertuotas>0){SSD1306_invert(); invertuotas--;} else {SSD1306_normal();}
 326:Core/Src/USER/user.c **** */
 327:Core/Src/USER/user.c **** //HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 328:Core/Src/USER/user.c **** }
 3428              		.loc 5 328 1 view .LVU813
 3429 0132 04B0     		add	sp, sp, #16
 3430              	.LCFI71:
 3431              		.cfi_remember_state
 3432              		.cfi_def_cfa_offset 16
 3433              		@ sp needed
 3434 0134 70BD     		pop	{r4, r5, r6, pc}
 3435              	.LVL286:
 3436              	.L219:
 3437              	.LCFI72:
 3438              		.cfi_restore_state
 278:Core/Src/USER/user.c **** 
 3439              		.loc 5 278 68 view .LVU814
 3440 0136 0024     		movs	r4, #0
 3441              	.LVL287:
 278:Core/Src/USER/user.c **** 
 3442              		.loc 5 278 68 view .LVU815
 3443 0138 91E7     		b	.L218
 3444              	.L222:
 3445 013a 00BF     		.align	2
 3446              	.L221:
 3447 013c 00000000 		.word	.LANCHOR15
 3448 0140 00080140 		.word	1073809408
 3449 0144 00000000 		.word	.LANCHOR3
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 90


 3450 0148 00000000 		.word	.LANCHOR2
 3451 014c 80510100 		.word	86400
 3452 0150 00000000 		.word	.LANCHOR13
 3453 0154 CDCCCCCC 		.word	-858993459
 3454 0158 C5B3A291 		.word	-1851608123
 3455 015c 89888888 		.word	-2004318071
 3456              		.cfi_endproc
 3457              	.LFE124:
 3459              		.section	.text.user_seconds_job,"ax",%progbits
 3460              		.align	1
 3461              		.global	user_seconds_job
 3462              		.syntax unified
 3463              		.thumb
 3464              		.thumb_func
 3466              	user_seconds_job:
 3467              	.LFB122:
 152:Core/Src/USER/user.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3468              		.loc 5 152 1 is_stmt 1 view -0
 3469              		.cfi_startproc
 3470              		@ args = 0, pretend = 0, frame = 0
 3471              		@ frame_needed = 0, uses_anonymous_args = 0
 3472 0000 08B5     		push	{r3, lr}
 3473              	.LCFI73:
 3474              		.cfi_def_cfa_offset 8
 3475              		.cfi_offset 3, -8
 3476              		.cfi_offset 14, -4
 153:Core/Src/USER/user.c **** 
 3477              		.loc 5 153 2 view .LVU817
 3478 0002 0022     		movs	r2, #0
 3479 0004 0849     		ldr	r1, .L225
 3480 0006 0948     		ldr	r0, .L225+4
 3481 0008 FFF7FEFF 		bl	HAL_RTC_GetTime
 3482              	.LVL288:
 156:Core/Src/USER/user.c **** 	
 3483              		.loc 5 156 2 view .LVU818
 3484 000c FFF7FEFF 		bl	show_time
 3485              	.LVL289:
 158:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,seconds*255);
 3486              		.loc 5 158 1 view .LVU819
 158:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,seconds*255);
 3487              		.loc 5 158 8 is_stmt 0 view .LVU820
 3488 0010 074A     		ldr	r2, .L225+8
 3489 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3490 0014 0133     		adds	r3, r3, #1
 3491 0016 DBB2     		uxtb	r3, r3
 3492 0018 1370     		strb	r3, [r2]
 159:Core/Src/USER/user.c **** }
 3493              		.loc 5 159 1 is_stmt 1 view .LVU821
 3494 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3495 001c 054A     		ldr	r2, .L225+12
 3496 001e 1268     		ldr	r2, [r2]
 3497 0020 C3EB0323 		rsb	r3, r3, r3, lsl #8
 3498 0024 5363     		str	r3, [r2, #52]
 160:Core/Src/USER/user.c **** 
 3499              		.loc 5 160 1 is_stmt 0 view .LVU822
 3500 0026 08BD     		pop	{r3, pc}
 3501              	.L226:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 91


 3502              		.align	2
 3503              	.L225:
 3504 0028 00000000 		.word	.LANCHOR2
 3505 002c 00000000 		.word	.LANCHOR3
 3506 0030 00000000 		.word	.LANCHOR16
 3507 0034 00000000 		.word	.LANCHOR11
 3508              		.cfi_endproc
 3509              	.LFE122:
 3511              		.section	.text.HAL_RTCEx_RTCEventCallback,"ax",%progbits
 3512              		.align	1
 3513              		.global	HAL_RTCEx_RTCEventCallback
 3514              		.syntax unified
 3515              		.thumb
 3516              		.thumb_func
 3518              	HAL_RTCEx_RTCEventCallback:
 3519              	.LVL290:
 3520              	.LFB78:
 235:Core/Src/USER/rtc.c **** 
 236:Core/Src/USER/rtc.c **** 
 237:Core/Src/USER/rtc.c **** /**
 238:Core/Src/USER/rtc.c ****   * @brief  Second event callback.
 239:Core/Src/USER/rtc.c **** **/
 240:Core/Src/USER/rtc.c **** /* kas sekunde, turi buti ijungtas INT */
 241:Core/Src/USER/rtc.c **** void HAL_RTCEx_RTCEventCallback(RTC_HandleTypeDef *hrtc)
 242:Core/Src/USER/rtc.c **** {
 3521              		.loc 3 242 1 is_stmt 1 view -0
 3522              		.cfi_startproc
 3523              		@ args = 0, pretend = 0, frame = 0
 3524              		@ frame_needed = 0, uses_anonymous_args = 0
 3525              		.loc 3 242 1 is_stmt 0 view .LVU824
 3526 0000 08B5     		push	{r3, lr}
 3527              	.LCFI74:
 3528              		.cfi_def_cfa_offset 8
 3529              		.cfi_offset 3, -8
 3530              		.cfi_offset 14, -4
 243:Core/Src/USER/rtc.c **** 	user_seconds_job();
 3531              		.loc 3 243 2 is_stmt 1 view .LVU825
 3532 0002 FFF7FEFF 		bl	user_seconds_job
 3533              	.LVL291:
 244:Core/Src/USER/rtc.c **** 	//if(LastHour != currTime.Hours) {rtc_backup_date(); LastHour=currTime.Hours;}
 245:Core/Src/USER/rtc.c **** }...
 3534              		.loc 3 245 1 is_stmt 0 view .LVU826
 3535 0006 08BD     		pop	{r3, pc}
 3536              		.cfi_endproc
 3537              	.LFE78:
 3539              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 3540              		.align	2
 3541              	.LC2:
 3542 0000 20202020 		.ascii	"                \000"
 3542      20202020 
 3542      20202020 
 3542      20202020 
 3542      00
 3543 0011 000000   		.align	2
 3544              	.LC3:
 3545 0014 53657474 		.ascii	"Setting hours \000"
 3545      696E6720 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 92


 3545      686F7572 
 3545      732000
 3546 0023 00       		.align	2
 3547              	.LC4:
 3548 0024 53657474 		.ascii	"Setting mins  \000"
 3548      696E6720 
 3548      6D696E73 
 3548      202000
 3549 0033 00       		.align	2
 3550              	.LC5:
 3551 0034 456E6420 		.ascii	"End hour:\000"
 3551      686F7572 
 3551      3A00
 3552 003e 0000     		.align	2
 3553              	.LC6:
 3554 0040 456E6420 		.ascii	"End min:\000"
 3554      6D696E3A 
 3554      00
 3555              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 3556              		.align	1
 3557              		.global	HAL_TIM_PeriodElapsedCallback
 3558              		.syntax unified
 3559              		.thumb
 3560              		.thumb_func
 3562              	HAL_TIM_PeriodElapsedCallback:
 3563              	.LVL292:
 3564              	.LFB123:
 165:Core/Src/USER/user.c **** //char text[2];
 3565              		.loc 5 165 1 is_stmt 1 view -0
 3566              		.cfi_startproc
 3567              		@ args = 0, pretend = 0, frame = 0
 3568              		@ frame_needed = 0, uses_anonymous_args = 0
 165:Core/Src/USER/user.c **** //char text[2];
 3569              		.loc 5 165 1 is_stmt 0 view .LVU828
 3570 0000 38B5     		push	{r3, r4, r5, lr}
 3571              	.LCFI75:
 3572              		.cfi_def_cfa_offset 16
 3573              		.cfi_offset 3, -16
 3574              		.cfi_offset 4, -12
 3575              		.cfi_offset 5, -8
 3576              		.cfi_offset 14, -4
 167:Core/Src/USER/user.c **** 
 3577              		.loc 5 167 1 is_stmt 1 view .LVU829
 169:Core/Src/USER/user.c ****   {
 3578              		.loc 5 169 3 view .LVU830
 169:Core/Src/USER/user.c ****   {
 3579              		.loc 5 169 6 is_stmt 0 view .LVU831
 3580 0002 954B     		ldr	r3, .L272
 3581 0004 8342     		cmp	r3, r0
 3582 0006 00D0     		beq	.L258
 3583              	.LVL293:
 3584              	.L229:
 259:Core/Src/USER/user.c **** 
 3585              		.loc 5 259 1 view .LVU832
 3586 0008 38BD     		pop	{r3, r4, r5, pc}
 3587              	.LVL294:
 3588              	.L258:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 93


 171:Core/Src/USER/user.c **** 	HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 3589              		.loc 5 171 4 is_stmt 1 view .LVU833
 3590 000a FFF7FEFF 		bl	ReadPins
 3591              	.LVL295:
 172:Core/Src/USER/user.c **** 	if (buttons==0 && mode_delay>0) {mode_delay--;}
 3592              		.loc 5 172 2 view .LVU834
 3593 000e 0121     		movs	r1, #1
 3594 0010 9248     		ldr	r0, .L272+4
 3595 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 3596              	.LVL296:
 173:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 3597              		.loc 5 173 2 view .LVU835
 173:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 3598              		.loc 5 173 13 is_stmt 0 view .LVU836
 3599 0016 924B     		ldr	r3, .L272+8
 3600 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 3601              		.loc 5 173 5 view .LVU837
 3602 001a 3BB9     		cbnz	r3, .L231
 173:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 3603              		.loc 5 173 30 discriminator 1 view .LVU838
 3604 001c 914B     		ldr	r3, .L272+12
 3605 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 173:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 3606              		.loc 5 173 17 discriminator 1 view .LVU839
 3607 0020 23B1     		cbz	r3, .L231
 173:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 3608              		.loc 5 173 35 is_stmt 1 discriminator 2 view .LVU840
 173:Core/Src/USER/user.c **** 	if (mode_delay==0) {mode=0; SSD1306_move(3,0); SSD1306_puts("                "); }
 3609              		.loc 5 173 45 is_stmt 0 discriminator 2 view .LVU841
 3610 0022 904A     		ldr	r2, .L272+12
 3611 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3612 0026 013B     		subs	r3, r3, #1
 3613 0028 DBB2     		uxtb	r3, r3
 3614 002a 1370     		strb	r3, [r2]
 3615              	.L231:
 174:Core/Src/USER/user.c **** 	
 3616              		.loc 5 174 2 is_stmt 1 view .LVU842
 174:Core/Src/USER/user.c **** 	
 3617              		.loc 5 174 16 is_stmt 0 view .LVU843
 3618 002c 8D4B     		ldr	r3, .L272+12
 3619 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 174:Core/Src/USER/user.c **** 	
 3620              		.loc 5 174 5 view .LVU844
 3621 0030 0BB3     		cbz	r3, .L259
 3622              	.L232:
 176:Core/Src/USER/user.c **** 		{
 3623              		.loc 5 176 2 is_stmt 1 view .LVU845
 176:Core/Src/USER/user.c **** 		{
 3624              		.loc 5 176 14 is_stmt 0 view .LVU846
 3625 0032 8B4B     		ldr	r3, .L272+8
 3626 0034 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3627 0036 D2B2     		uxtb	r2, r2
 3628 0038 8B4B     		ldr	r3, .L272+16
 3629 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3630 003c DBB2     		uxtb	r3, r3
 176:Core/Src/USER/user.c **** 		{
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 94


 3631              		.loc 5 176 5 view .LVU847
 3632 003e 9A42     		cmp	r2, r3
 3633 0040 E2D0     		beq	.L229
 178:Core/Src/USER/user.c **** 		
 3634              		.loc 5 178 3 is_stmt 1 view .LVU848
 178:Core/Src/USER/user.c **** 		
 3635              		.loc 5 178 14 is_stmt 0 view .LVU849
 3636 0042 874A     		ldr	r2, .L272+8
 3637 0044 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3638 0046 DBB2     		uxtb	r3, r3
 3639 0048 8749     		ldr	r1, .L272+16
 3640 004a 0B70     		strb	r3, [r1]
 180:Core/Src/USER/user.c **** 			{
 3641              		.loc 5 180 3 is_stmt 1 view .LVU850
 180:Core/Src/USER/user.c **** 			{
 3642              		.loc 5 180 14 is_stmt 0 view .LVU851
 3643 004c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3644 004e DBB2     		uxtb	r3, r3
 180:Core/Src/USER/user.c **** 			{
 3645              		.loc 5 180 6 view .LVU852
 3646 0050 012B     		cmp	r3, #1
 3647 0052 1AD0     		beq	.L260
 3648              	.L233:
 186:Core/Src/USER/user.c **** 			//########## 
 3649              		.loc 5 186 3 is_stmt 1 view .LVU853
 186:Core/Src/USER/user.c **** 			//########## 
 3650              		.loc 5 186 14 is_stmt 0 view .LVU854
 3651 0054 824B     		ldr	r3, .L272+8
 3652 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3653 0058 DBB2     		uxtb	r3, r3
 186:Core/Src/USER/user.c **** 			//########## 
 3654              		.loc 5 186 6 view .LVU855
 3655 005a 062B     		cmp	r3, #6
 3656 005c 25D0     		beq	.L261
 3657              	.L234:
 188:Core/Src/USER/user.c **** 				{
 3658              		.loc 5 188 4 is_stmt 1 view .LVU856
 3659 005e 834B     		ldr	r3, .L272+20
 3660 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3661 0062 DBB2     		uxtb	r3, r3
 3662 0064 042B     		cmp	r3, #4
 3663 0066 CFD8     		bhi	.L229
 3664 0068 DFE813F0 		tbh	[pc, r3, lsl #1]
 3665              	.L236:
 3666 006c 3100     		.2byte	(.L240-.L236)/2
 3667 006e 3900     		.2byte	(.L239-.L236)/2
 3668 0070 7900     		.2byte	(.L238-.L236)/2
 3669 0072 B900     		.2byte	(.L237-.L236)/2
 3670 0074 D700     		.2byte	(.L235-.L236)/2
 3671              		.p2align 1
 3672              	.L259:
 174:Core/Src/USER/user.c **** 	
 3673              		.loc 5 174 22 discriminator 1 view .LVU857
 174:Core/Src/USER/user.c **** 	
 3674              		.loc 5 174 26 is_stmt 0 discriminator 1 view .LVU858
 3675 0076 0021     		movs	r1, #0
 3676 0078 7C4B     		ldr	r3, .L272+20
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 95


 3677 007a 1970     		strb	r1, [r3]
 174:Core/Src/USER/user.c **** 	
 3678              		.loc 5 174 30 is_stmt 1 discriminator 1 view .LVU859
 3679 007c 0320     		movs	r0, #3
 3680 007e FFF7FEFF 		bl	SSD1306_move
 3681              	.LVL297:
 174:Core/Src/USER/user.c **** 	
 3682              		.loc 5 174 49 discriminator 1 view .LVU860
 3683 0082 7B48     		ldr	r0, .L272+24
 3684 0084 FFF7FEFF 		bl	SSD1306_puts
 3685              	.LVL298:
 3686 0088 D3E7     		b	.L232
 3687              	.L260:
 182:Core/Src/USER/user.c **** 			mode_delay=30;
 3688              		.loc 5 182 4 view .LVU861
 182:Core/Src/USER/user.c **** 			mode_delay=30;
 3689              		.loc 5 182 8 is_stmt 0 view .LVU862
 3690 008a 784A     		ldr	r2, .L272+20
 3691 008c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3692 008e 0133     		adds	r3, r3, #1
 3693 0090 DBB2     		uxtb	r3, r3
 3694 0092 1370     		strb	r3, [r2]
 183:Core/Src/USER/user.c **** 			if (mode>4) {mode=0;}
 3695              		.loc 5 183 4 is_stmt 1 view .LVU863
 183:Core/Src/USER/user.c **** 			if (mode>4) {mode=0;}
 3696              		.loc 5 183 14 is_stmt 0 view .LVU864
 3697 0094 734B     		ldr	r3, .L272+12
 3698 0096 1E21     		movs	r1, #30
 3699 0098 1970     		strb	r1, [r3]
 184:Core/Src/USER/user.c **** 			}
 3700              		.loc 5 184 4 is_stmt 1 view .LVU865
 184:Core/Src/USER/user.c **** 			}
 3701              		.loc 5 184 12 is_stmt 0 view .LVU866
 3702 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3703 009c DBB2     		uxtb	r3, r3
 184:Core/Src/USER/user.c **** 			}
 3704              		.loc 5 184 7 view .LVU867
 3705 009e 042B     		cmp	r3, #4
 3706 00a0 D8D9     		bls	.L233
 184:Core/Src/USER/user.c **** 			}
 3707              		.loc 5 184 17 is_stmt 1 discriminator 1 view .LVU868
 184:Core/Src/USER/user.c **** 			}
 3708              		.loc 5 184 21 is_stmt 0 discriminator 1 view .LVU869
 3709 00a2 1346     		mov	r3, r2
 3710 00a4 0022     		movs	r2, #0
 3711 00a6 1A70     		strb	r2, [r3]
 3712 00a8 D4E7     		b	.L233
 3713              	.L261:
 186:Core/Src/USER/user.c **** 			//########## 
 3714              		.loc 5 186 20 is_stmt 1 discriminator 1 view .LVU870
 3715 00aa 724C     		ldr	r4, .L272+28
 3716 00ac 724D     		ldr	r5, .L272+32
 3717 00ae 0022     		movs	r2, #0
 3718 00b0 2146     		mov	r1, r4
 3719 00b2 2846     		mov	r0, r5
 3720 00b4 FFF7FEFF 		bl	HAL_RTC_GetTime
 3721              	.LVL299:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 96


 186:Core/Src/USER/user.c **** 			//########## 
 3722              		.loc 5 186 71 discriminator 1 view .LVU871
 186:Core/Src/USER/user.c **** 			//########## 
 3723              		.loc 5 186 75 is_stmt 0 discriminator 1 view .LVU872
 3724 00b8 0022     		movs	r2, #0
 3725 00ba 6C4B     		ldr	r3, .L272+20
 3726 00bc 1A70     		strb	r2, [r3]
 186:Core/Src/USER/user.c **** 			//########## 
 3727              		.loc 5 186 79 is_stmt 1 discriminator 1 view .LVU873
 186:Core/Src/USER/user.c **** 			//########## 
 3728              		.loc 5 186 95 is_stmt 0 discriminator 1 view .LVU874
 3729 00be A270     		strb	r2, [r4, #2]
 186:Core/Src/USER/user.c **** 			//########## 
 3730              		.loc 5 186 99 is_stmt 1 discriminator 1 view .LVU875
 3731 00c0 2146     		mov	r1, r4
 3732 00c2 2846     		mov	r0, r5
 3733 00c4 FFF7FEFF 		bl	HAL_RTC_SetTime
 3734              	.LVL300:
 186:Core/Src/USER/user.c **** 			//########## 
 3735              		.loc 5 186 149 discriminator 1 view .LVU876
 3736 00c8 FFF7FEFF 		bl	show_time
 3737              	.LVL301:
 3738 00cc C7E7     		b	.L234
 3739              	.L240:
 191:Core/Src/USER/user.c **** 					break;
 3740              		.loc 5 191 6 view .LVU877
 3741 00ce 0021     		movs	r1, #0
 3742 00d0 0320     		movs	r0, #3
 3743 00d2 FFF7FEFF 		bl	SSD1306_move
 3744              	.LVL302:
 191:Core/Src/USER/user.c **** 					break;
 3745              		.loc 5 191 25 view .LVU878
 3746 00d6 6648     		ldr	r0, .L272+24
 3747 00d8 FFF7FEFF 		bl	SSD1306_puts
 3748              	.LVL303:
 192:Core/Src/USER/user.c **** 					case 0x01: //setup hour
 3749              		.loc 5 192 6 view .LVU879
 3750 00dc 94E7     		b	.L229
 3751              	.L239:
 195:Core/Src/USER/user.c **** 						HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3752              		.loc 5 195 7 view .LVU880
 3753              	.LBB22:
 3754              	.LBI22:
 3755              		.file 6 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 97


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 98


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 99


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 3756              		.loc 6 140 27 view .LVU881
 3757              	.LBB23:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3758              		.loc 6 142 3 view .LVU882
 3759              		.syntax unified
 3760              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3761 00de 72B6     		cpsid i
 3762              	@ 0 "" 2
 3763              		.thumb
 3764              		.syntax unified
 3765              	.LBE23:
 3766              	.LBE22:
 196:Core/Src/USER/user.c **** 						if(buttons==2) {
 3767              		.loc 5 196 7 view .LVU883
 3768 00e0 0022     		movs	r2, #0
 3769 00e2 6449     		ldr	r1, .L272+28
 3770 00e4 6448     		ldr	r0, .L272+32
 3771 00e6 FFF7FEFF 		bl	HAL_RTC_GetTime
 3772              	.LVL304:
 197:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 3773              		.loc 5 197 7 view .LVU884
 197:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 3774              		.loc 5 197 17 is_stmt 0 view .LVU885
 3775 00ea 5D4B     		ldr	r3, .L272+8
 3776 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3777 00ee DBB2     		uxtb	r3, r3
 197:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 3778              		.loc 5 197 9 view .LVU886
 3779 00f0 022B     		cmp	r3, #2
 3780 00f2 0DD0     		beq	.L262
 3781              	.L241:
 204:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 3782              		.loc 5 204 7 is_stmt 1 view .LVU887
 204:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 3783              		.loc 5 204 17 is_stmt 0 view .LVU888
 3784 00f4 5A4B     		ldr	r3, .L272+8
 3785 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3786 00f8 DBB2     		uxtb	r3, r3
 204:Core/Src/USER/user.c **** 											tmp=currTime.Hours;
 3787              		.loc 5 204 9 view .LVU889
 3788 00fa 042B     		cmp	r3, #4
 3789 00fc 1BD0     		beq	.L263
 3790              	.L243:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 100


 212:Core/Src/USER/user.c **** 						__enable_irq();
 3791              		.loc 5 212 7 is_stmt 1 view .LVU890
 3792 00fe 0021     		movs	r1, #0
 3793 0100 0320     		movs	r0, #3
 3794 0102 FFF7FEFF 		bl	SSD1306_move
 3795              	.LVL305:
 212:Core/Src/USER/user.c **** 						__enable_irq();
 3796              		.loc 5 212 26 view .LVU891
 3797 0106 5D48     		ldr	r0, .L272+36
 3798 0108 FFF7FEFF 		bl	SSD1306_puts
 3799              	.LVL306:
 213:Core/Src/USER/user.c **** 					break;
 3800              		.loc 5 213 7 view .LVU892
 3801              	.LBB24:
 3802              	.LBI24:
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3803              		.loc 6 129 27 view .LVU893
 3804              	.LBB25:
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3805              		.loc 6 131 3 view .LVU894
 3806              		.syntax unified
 3807              	@ 131 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3808 010c 62B6     		cpsie i
 3809              	@ 0 "" 2
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3810              		.loc 6 132 1 is_stmt 0 view .LVU895
 3811              		.thumb
 3812              		.syntax unified
 3813 010e 7BE7     		b	.L229
 3814              	.L262:
 3815              	.LBE25:
 3816              	.LBE24:
 198:Core/Src/USER/user.c **** 											tmp++; if (tmp>23) tmp=0;
 3817              		.loc 5 198 12 is_stmt 1 view .LVU896
 198:Core/Src/USER/user.c **** 											tmp++; if (tmp>23) tmp=0;
 3818              		.loc 5 198 15 is_stmt 0 view .LVU897
 3819 0110 584B     		ldr	r3, .L272+28
 3820 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3821              	.LVL307:
 199:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3822              		.loc 5 199 12 is_stmt 1 view .LVU898
 199:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3823              		.loc 5 199 15 is_stmt 0 view .LVU899
 3824 0114 0133     		adds	r3, r3, #1
 3825              	.LVL308:
 199:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3826              		.loc 5 199 15 view .LVU900
 3827 0116 DBB2     		uxtb	r3, r3
 3828              	.LVL309:
 199:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3829              		.loc 5 199 19 is_stmt 1 view .LVU901
 199:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3830              		.loc 5 199 22 is_stmt 0 view .LVU902
 3831 0118 172B     		cmp	r3, #23
 3832 011a 00D9     		bls	.L242
 199:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3833              		.loc 5 199 34 view .LVU903
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 101


 3834 011c 0023     		movs	r3, #0
 3835              	.LVL310:
 3836              	.L242:
 200:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3837              		.loc 5 200 12 is_stmt 1 view .LVU904
 200:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3838              		.loc 5 200 26 is_stmt 0 view .LVU905
 3839 011e 5549     		ldr	r1, .L272+28
 3840 0120 0B70     		strb	r3, [r1]
 201:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 3841              		.loc 5 201 12 is_stmt 1 view .LVU906
 3842 0122 0022     		movs	r2, #0
 3843 0124 5448     		ldr	r0, .L272+32
 3844 0126 FFF7FEFF 		bl	HAL_RTC_SetTime
 3845              	.LVL311:
 202:Core/Src/USER/user.c **** 										}
 3846              		.loc 5 202 12 view .LVU907
 3847 012a FFF7FEFF 		bl	show_time
 3848              	.LVL312:
 202:Core/Src/USER/user.c **** 										}
 3849              		.loc 5 202 25 view .LVU908
 202:Core/Src/USER/user.c **** 										}
 3850              		.loc 5 202 35 is_stmt 0 view .LVU909
 3851 012e 4D4B     		ldr	r3, .L272+12
 3852 0130 1E22     		movs	r2, #30
 3853 0132 1A70     		strb	r2, [r3]
 3854 0134 DEE7     		b	.L241
 3855              	.L263:
 205:Core/Src/USER/user.c **** 											tmp--;
 3856              		.loc 5 205 12 is_stmt 1 view .LVU910
 205:Core/Src/USER/user.c **** 											tmp--;
 3857              		.loc 5 205 15 is_stmt 0 view .LVU911
 3858 0136 4F4B     		ldr	r3, .L272+28
 3859 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3860              	.LVL313:
 206:Core/Src/USER/user.c **** 											if(tmp == 255) {tmp=23;}
 3861              		.loc 5 206 12 is_stmt 1 view .LVU912
 206:Core/Src/USER/user.c **** 											if(tmp == 255) {tmp=23;}
 3862              		.loc 5 206 15 is_stmt 0 view .LVU913
 3863 013a 013B     		subs	r3, r3, #1
 3864              	.LVL314:
 206:Core/Src/USER/user.c **** 											if(tmp == 255) {tmp=23;}
 3865              		.loc 5 206 15 view .LVU914
 3866 013c DBB2     		uxtb	r3, r3
 3867              	.LVL315:
 207:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3868              		.loc 5 207 12 is_stmt 1 view .LVU915
 207:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3869              		.loc 5 207 14 is_stmt 0 view .LVU916
 3870 013e FF2B     		cmp	r3, #255
 3871 0140 0BD0     		beq	.L264
 3872              	.LVL316:
 3873              	.L244:
 208:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3874              		.loc 5 208 12 is_stmt 1 view .LVU917
 208:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3875              		.loc 5 208 26 is_stmt 0 view .LVU918
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 102


 3876 0142 4C49     		ldr	r1, .L272+28
 3877 0144 0B70     		strb	r3, [r1]
 209:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 3878              		.loc 5 209 12 is_stmt 1 view .LVU919
 3879 0146 0022     		movs	r2, #0
 3880 0148 4B48     		ldr	r0, .L272+32
 3881 014a FFF7FEFF 		bl	HAL_RTC_SetTime
 3882              	.LVL317:
 210:Core/Src/USER/user.c **** 										}
 3883              		.loc 5 210 12 view .LVU920
 3884 014e FFF7FEFF 		bl	show_time
 3885              	.LVL318:
 210:Core/Src/USER/user.c **** 										}
 3886              		.loc 5 210 25 view .LVU921
 210:Core/Src/USER/user.c **** 										}
 3887              		.loc 5 210 35 is_stmt 0 view .LVU922
 3888 0152 444B     		ldr	r3, .L272+12
 3889 0154 1E22     		movs	r2, #30
 3890 0156 1A70     		strb	r2, [r3]
 3891 0158 D1E7     		b	.L243
 3892              	.LVL319:
 3893              	.L264:
 207:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3894              		.loc 5 207 31 view .LVU923
 3895 015a 1723     		movs	r3, #23
 3896              	.LVL320:
 207:Core/Src/USER/user.c **** 											currTime.Hours=(uint8_t)tmp;
 3897              		.loc 5 207 31 view .LVU924
 3898 015c F1E7     		b	.L244
 3899              	.LVL321:
 3900              	.L238:
 216:Core/Src/USER/user.c **** 						HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3901              		.loc 5 216 7 is_stmt 1 view .LVU925
 3902              	.LBB26:
 3903              	.LBI26:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3904              		.loc 6 140 27 view .LVU926
 3905              	.LBB27:
 3906              		.loc 6 142 3 view .LVU927
 3907              		.syntax unified
 3908              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3909 015e 72B6     		cpsid i
 3910              	@ 0 "" 2
 3911              		.thumb
 3912              		.syntax unified
 3913              	.LBE27:
 3914              	.LBE26:
 217:Core/Src/USER/user.c **** 						if(buttons==2) {
 3915              		.loc 5 217 7 view .LVU928
 3916 0160 0022     		movs	r2, #0
 3917 0162 4449     		ldr	r1, .L272+28
 3918 0164 4448     		ldr	r0, .L272+32
 3919 0166 FFF7FEFF 		bl	HAL_RTC_GetTime
 3920              	.LVL322:
 218:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
 3921              		.loc 5 218 7 view .LVU929
 218:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 103


 3922              		.loc 5 218 17 is_stmt 0 view .LVU930
 3923 016a 3D4B     		ldr	r3, .L272+8
 3924 016c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3925 016e DBB2     		uxtb	r3, r3
 218:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
 3926              		.loc 5 218 9 view .LVU931
 3927 0170 022B     		cmp	r3, #2
 3928 0172 0DD0     		beq	.L265
 3929              	.L245:
 225:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
 3930              		.loc 5 225 7 is_stmt 1 view .LVU932
 225:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
 3931              		.loc 5 225 17 is_stmt 0 view .LVU933
 3932 0174 3A4B     		ldr	r3, .L272+8
 3933 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3934 0178 DBB2     		uxtb	r3, r3
 225:Core/Src/USER/user.c **** 											tmp=currTime.Minutes;
 3935              		.loc 5 225 9 view .LVU934
 3936 017a 042B     		cmp	r3, #4
 3937 017c 1BD0     		beq	.L266
 3938              	.L247:
 232:Core/Src/USER/user.c **** 						__enable_irq();
 3939              		.loc 5 232 7 is_stmt 1 view .LVU935
 3940 017e 0021     		movs	r1, #0
 3941 0180 0320     		movs	r0, #3
 3942 0182 FFF7FEFF 		bl	SSD1306_move
 3943              	.LVL323:
 232:Core/Src/USER/user.c **** 						__enable_irq();
 3944              		.loc 5 232 26 view .LVU936
 3945 0186 3E48     		ldr	r0, .L272+40
 3946 0188 FFF7FEFF 		bl	SSD1306_puts
 3947              	.LVL324:
 233:Core/Src/USER/user.c **** 					break;
 3948              		.loc 5 233 7 view .LVU937
 3949              	.LBB28:
 3950              	.LBI28:
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3951              		.loc 6 129 27 view .LVU938
 3952              	.LBB29:
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3953              		.loc 6 131 3 view .LVU939
 3954              		.syntax unified
 3955              	@ 131 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3956 018c 62B6     		cpsie i
 3957              	@ 0 "" 2
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3958              		.loc 6 132 1 is_stmt 0 view .LVU940
 3959              		.thumb
 3960              		.syntax unified
 3961 018e 3BE7     		b	.L229
 3962              	.L265:
 3963              	.LBE29:
 3964              	.LBE28:
 219:Core/Src/USER/user.c **** 											tmp++; if(tmp>59) tmp=0;
 3965              		.loc 5 219 12 is_stmt 1 view .LVU941
 219:Core/Src/USER/user.c **** 											tmp++; if(tmp>59) tmp=0;
 3966              		.loc 5 219 15 is_stmt 0 view .LVU942
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 104


 3967 0190 384B     		ldr	r3, .L272+28
 3968 0192 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3969              	.LVL325:
 220:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 3970              		.loc 5 220 12 is_stmt 1 view .LVU943
 220:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 3971              		.loc 5 220 15 is_stmt 0 view .LVU944
 3972 0194 0133     		adds	r3, r3, #1
 3973              	.LVL326:
 220:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 3974              		.loc 5 220 15 view .LVU945
 3975 0196 DBB2     		uxtb	r3, r3
 3976              	.LVL327:
 220:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 3977              		.loc 5 220 19 is_stmt 1 view .LVU946
 220:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 3978              		.loc 5 220 21 is_stmt 0 view .LVU947
 3979 0198 3B2B     		cmp	r3, #59
 3980 019a 00D9     		bls	.L246
 220:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 3981              		.loc 5 220 33 view .LVU948
 3982 019c 0023     		movs	r3, #0
 3983              	.LVL328:
 3984              	.L246:
 221:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3985              		.loc 5 221 12 is_stmt 1 view .LVU949
 221:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3986              		.loc 5 221 28 is_stmt 0 view .LVU950
 3987 019e 3549     		ldr	r1, .L272+28
 3988 01a0 4B70     		strb	r3, [r1, #1]
 222:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 3989              		.loc 5 222 12 is_stmt 1 view .LVU951
 3990 01a2 0022     		movs	r2, #0
 3991 01a4 3448     		ldr	r0, .L272+32
 3992 01a6 FFF7FEFF 		bl	HAL_RTC_SetTime
 3993              	.LVL329:
 223:Core/Src/USER/user.c **** 										}
 3994              		.loc 5 223 12 view .LVU952
 3995 01aa FFF7FEFF 		bl	show_time
 3996              	.LVL330:
 223:Core/Src/USER/user.c **** 										}
 3997              		.loc 5 223 25 view .LVU953
 223:Core/Src/USER/user.c **** 										}
 3998              		.loc 5 223 35 is_stmt 0 view .LVU954
 3999 01ae 2D4B     		ldr	r3, .L272+12
 4000 01b0 1E22     		movs	r2, #30
 4001 01b2 1A70     		strb	r2, [r3]
 4002 01b4 DEE7     		b	.L245
 4003              	.L266:
 226:Core/Src/USER/user.c **** 											tmp--; if(tmp ==255 ) {tmp=59;}
 4004              		.loc 5 226 12 is_stmt 1 view .LVU955
 226:Core/Src/USER/user.c **** 											tmp--; if(tmp ==255 ) {tmp=59;}
 4005              		.loc 5 226 15 is_stmt 0 view .LVU956
 4006 01b6 2F4B     		ldr	r3, .L272+28
 4007 01b8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4008              	.LVL331:
 227:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 105


 4009              		.loc 5 227 12 is_stmt 1 view .LVU957
 227:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 4010              		.loc 5 227 15 is_stmt 0 view .LVU958
 4011 01ba 013B     		subs	r3, r3, #1
 4012              	.LVL332:
 227:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 4013              		.loc 5 227 15 view .LVU959
 4014 01bc DBB2     		uxtb	r3, r3
 4015              	.LVL333:
 227:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 4016              		.loc 5 227 19 is_stmt 1 view .LVU960
 227:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 4017              		.loc 5 227 21 is_stmt 0 view .LVU961
 4018 01be FF2B     		cmp	r3, #255
 4019 01c0 0BD0     		beq	.L267
 4020              	.LVL334:
 4021              	.L248:
 228:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 4022              		.loc 5 228 12 is_stmt 1 view .LVU962
 228:Core/Src/USER/user.c **** 											HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 4023              		.loc 5 228 28 is_stmt 0 view .LVU963
 4024 01c2 2C49     		ldr	r1, .L272+28
 4025 01c4 4B70     		strb	r3, [r1, #1]
 229:Core/Src/USER/user.c **** 											show_time(); mode_delay=30;
 4026              		.loc 5 229 12 is_stmt 1 view .LVU964
 4027 01c6 0022     		movs	r2, #0
 4028 01c8 2B48     		ldr	r0, .L272+32
 4029 01ca FFF7FEFF 		bl	HAL_RTC_SetTime
 4030              	.LVL335:
 230:Core/Src/USER/user.c **** 										}
 4031              		.loc 5 230 12 view .LVU965
 4032 01ce FFF7FEFF 		bl	show_time
 4033              	.LVL336:
 230:Core/Src/USER/user.c **** 										}
 4034              		.loc 5 230 25 view .LVU966
 230:Core/Src/USER/user.c **** 										}
 4035              		.loc 5 230 35 is_stmt 0 view .LVU967
 4036 01d2 244B     		ldr	r3, .L272+12
 4037 01d4 1E22     		movs	r2, #30
 4038 01d6 1A70     		strb	r2, [r3]
 4039 01d8 D1E7     		b	.L247
 4040              	.LVL337:
 4041              	.L267:
 227:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 4042              		.loc 5 227 38 view .LVU968
 4043 01da 3B23     		movs	r3, #59
 4044              	.LVL338:
 227:Core/Src/USER/user.c **** 											currTime.Minutes=(uint8_t)tmp;
 4045              		.loc 5 227 38 view .LVU969
 4046 01dc F1E7     		b	.L248
 4047              	.LVL339:
 4048              	.L237:
 236:Core/Src/USER/user.c **** 						if(buttons==4) {start_hour--;}
 4049              		.loc 5 236 7 is_stmt 1 view .LVU970
 236:Core/Src/USER/user.c **** 						if(buttons==4) {start_hour--;}
 4050              		.loc 5 236 17 is_stmt 0 view .LVU971
 4051 01de 204B     		ldr	r3, .L272+8
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 106


 4052 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4053 01e2 DBB2     		uxtb	r3, r3
 236:Core/Src/USER/user.c **** 						if(buttons==4) {start_hour--;}
 4054              		.loc 5 236 9 view .LVU972
 4055 01e4 022B     		cmp	r3, #2
 4056 01e6 0CD0     		beq	.L268
 4057              	.L249:
 237:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End hour:");
 4058              		.loc 5 237 7 is_stmt 1 view .LVU973
 237:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End hour:");
 4059              		.loc 5 237 17 is_stmt 0 view .LVU974
 4060 01e8 1D4B     		ldr	r3, .L272+8
 4061 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4062 01ec DBB2     		uxtb	r3, r3
 237:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End hour:");
 4063              		.loc 5 237 9 view .LVU975
 4064 01ee 042B     		cmp	r3, #4
 4065 01f0 0DD0     		beq	.L269
 4066              	.L250:
 238:Core/Src/USER/user.c **** 					break;
 4067              		.loc 5 238 7 is_stmt 1 view .LVU976
 4068 01f2 0021     		movs	r1, #0
 4069 01f4 0320     		movs	r0, #3
 4070 01f6 FFF7FEFF 		bl	SSD1306_move
 4071              	.LVL340:
 238:Core/Src/USER/user.c **** 					break;
 4072              		.loc 5 238 26 view .LVU977
 4073 01fa 2248     		ldr	r0, .L272+44
 4074 01fc FFF7FEFF 		bl	SSD1306_puts
 4075              	.LVL341:
 239:Core/Src/USER/user.c **** 					case 0x04: //setup start minute
 4076              		.loc 5 239 6 view .LVU978
 4077 0200 02E7     		b	.L229
 4078              	.L268:
 236:Core/Src/USER/user.c **** 						if(buttons==4) {start_hour--;}
 4079              		.loc 5 236 23 discriminator 1 view .LVU979
 236:Core/Src/USER/user.c **** 						if(buttons==4) {start_hour--;}
 4080              		.loc 5 236 33 is_stmt 0 discriminator 1 view .LVU980
 4081 0202 214A     		ldr	r2, .L272+48
 4082 0204 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4083 0206 0133     		adds	r3, r3, #1
 4084 0208 DBB2     		uxtb	r3, r3
 4085 020a 1370     		strb	r3, [r2]
 4086 020c ECE7     		b	.L249
 4087              	.L269:
 237:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End hour:");
 4088              		.loc 5 237 23 is_stmt 1 discriminator 1 view .LVU981
 237:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End hour:");
 4089              		.loc 5 237 33 is_stmt 0 discriminator 1 view .LVU982
 4090 020e 1E4A     		ldr	r2, .L272+48
 4091 0210 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4092 0212 013B     		subs	r3, r3, #1
 4093 0214 DBB2     		uxtb	r3, r3
 4094 0216 1370     		strb	r3, [r2]
 4095 0218 EBE7     		b	.L250
 4096              	.L235:
 241:Core/Src/USER/user.c **** 						if(buttons==4) {start_minutes--;}
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 107


 4097              		.loc 5 241 7 is_stmt 1 view .LVU983
 241:Core/Src/USER/user.c **** 						if(buttons==4) {start_minutes--;}
 4098              		.loc 5 241 17 is_stmt 0 view .LVU984
 4099 021a 114B     		ldr	r3, .L272+8
 4100 021c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4101 021e DBB2     		uxtb	r3, r3
 241:Core/Src/USER/user.c **** 						if(buttons==4) {start_minutes--;}
 4102              		.loc 5 241 9 view .LVU985
 4103 0220 022B     		cmp	r3, #2
 4104 0222 0CD0     		beq	.L270
 4105              	.L251:
 242:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End min:");
 4106              		.loc 5 242 7 is_stmt 1 view .LVU986
 242:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End min:");
 4107              		.loc 5 242 17 is_stmt 0 view .LVU987
 4108 0224 0E4B     		ldr	r3, .L272+8
 4109 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4110 0228 DBB2     		uxtb	r3, r3
 242:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End min:");
 4111              		.loc 5 242 9 view .LVU988
 4112 022a 042B     		cmp	r3, #4
 4113 022c 0DD0     		beq	.L271
 4114              	.L252:
 243:Core/Src/USER/user.c **** 					break;
 4115              		.loc 5 243 7 is_stmt 1 view .LVU989
 4116 022e 0021     		movs	r1, #0
 4117 0230 0320     		movs	r0, #3
 4118 0232 FFF7FEFF 		bl	SSD1306_move
 4119              	.LVL342:
 243:Core/Src/USER/user.c **** 					break;
 4120              		.loc 5 243 26 view .LVU990
 4121 0236 1548     		ldr	r0, .L272+52
 4122 0238 FFF7FEFF 		bl	SSD1306_puts
 4123              	.LVL343:
 244:Core/Src/USER/user.c **** 					case 0x05: //xxx
 4124              		.loc 5 244 6 view .LVU991
 259:Core/Src/USER/user.c **** 
 4125              		.loc 5 259 1 is_stmt 0 view .LVU992
 4126 023c E4E6     		b	.L229
 4127              	.L270:
 241:Core/Src/USER/user.c **** 						if(buttons==4) {start_minutes--;}
 4128              		.loc 5 241 23 is_stmt 1 discriminator 1 view .LVU993
 241:Core/Src/USER/user.c **** 						if(buttons==4) {start_minutes--;}
 4129              		.loc 5 241 36 is_stmt 0 discriminator 1 view .LVU994
 4130 023e 144A     		ldr	r2, .L272+56
 4131 0240 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4132 0242 0133     		adds	r3, r3, #1
 4133 0244 DBB2     		uxtb	r3, r3
 4134 0246 1370     		strb	r3, [r2]
 4135 0248 ECE7     		b	.L251
 4136              	.L271:
 242:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End min:");
 4137              		.loc 5 242 23 is_stmt 1 discriminator 1 view .LVU995
 242:Core/Src/USER/user.c **** 						SSD1306_move(3,0); SSD1306_puts("End min:");
 4138              		.loc 5 242 36 is_stmt 0 discriminator 1 view .LVU996
 4139 024a 114A     		ldr	r2, .L272+56
 4140 024c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 108


 4141 024e 013B     		subs	r3, r3, #1
 4142 0250 DBB2     		uxtb	r3, r3
 4143 0252 1370     		strb	r3, [r2]
 4144 0254 EBE7     		b	.L252
 4145              	.L273:
 4146 0256 00BF     		.align	2
 4147              	.L272:
 4148 0258 00000000 		.word	.LANCHOR12
 4149 025c 00080140 		.word	1073809408
 4150 0260 00000000 		.word	.LANCHOR14
 4151 0264 00000000 		.word	.LANCHOR17
 4152 0268 00000000 		.word	.LANCHOR19
 4153 026c 00000000 		.word	.LANCHOR18
 4154 0270 00000000 		.word	.LC2
 4155 0274 00000000 		.word	.LANCHOR2
 4156 0278 00000000 		.word	.LANCHOR3
 4157 027c 14000000 		.word	.LC3
 4158 0280 24000000 		.word	.LC4
 4159 0284 34000000 		.word	.LC5
 4160 0288 00000000 		.word	.LANCHOR20
 4161 028c 40000000 		.word	.LC6
 4162 0290 00000000 		.word	.LANCHOR21
 4163              		.cfi_endproc
 4164              	.LFE123:
 4166              		.section	.text.Error_Handler,"ax",%progbits
 4167              		.align	1
 4168              		.global	Error_Handler
 4169              		.syntax unified
 4170              		.thumb
 4171              		.thumb_func
 4173              	Error_Handler:
 4174              	.LFB133:
 495:Core/Src/main.c **** 
 496:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 497:Core/Src/main.c **** 
 498:Core/Src/main.c **** /* USER CODE END 4 */
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** /**
 501:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 502:Core/Src/main.c ****   * @retval None
 503:Core/Src/main.c ****   */
 504:Core/Src/main.c **** void Error_Handler(void)
 505:Core/Src/main.c **** {
 4175              		.loc 2 505 1 is_stmt 1 view -0
 4176              		.cfi_startproc
 4177              		@ Volatile: function does not return.
 4178              		@ args = 0, pretend = 0, frame = 0
 4179              		@ frame_needed = 0, uses_anonymous_args = 0
 4180              		@ link register save eliminated.
 506:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 507:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 508:Core/Src/main.c ****   __disable_irq();
 4181              		.loc 2 508 3 view .LVU998
 4182              	.LBB30:
 4183              	.LBI30:
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4184              		.loc 6 140 27 view .LVU999
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 109


 4185              	.LBB31:
 4186              		.loc 6 142 3 view .LVU1000
 4187              		.syntax unified
 4188              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4189 0000 72B6     		cpsid i
 4190              	@ 0 "" 2
 4191              		.thumb
 4192              		.syntax unified
 4193              	.L275:
 4194              	.LBE31:
 4195              	.LBE30:
 509:Core/Src/main.c ****   while (1)
 4196              		.loc 2 509 3 discriminator 1 view .LVU1001
 510:Core/Src/main.c ****   {
 511:Core/Src/main.c ****   }
 4197              		.loc 2 511 3 discriminator 1 view .LVU1002
 509:Core/Src/main.c ****   while (1)
 4198              		.loc 2 509 9 discriminator 1 view .LVU1003
 4199 0002 FEE7     		b	.L275
 4200              		.cfi_endproc
 4201              	.LFE133:
 4203              		.section	.text.rtc_set_date_text,"ax",%progbits
 4204              		.align	1
 4205              		.global	rtc_set_date_text
 4206              		.syntax unified
 4207              		.thumb
 4208              		.thumb_func
 4210              	rtc_set_date_text:
 4211              	.LVL344:
 4212              	.LFB70:
  95:Core/Src/USER/rtc.c **** {
 4213              		.loc 3 95 1 view -0
 4214              		.cfi_startproc
 4215              		@ args = 0, pretend = 0, frame = 8
 4216              		@ frame_needed = 0, uses_anonymous_args = 0
  95:Core/Src/USER/rtc.c **** {
 4217              		.loc 3 95 1 is_stmt 0 view .LVU1005
 4218 0000 10B5     		push	{r4, lr}
 4219              	.LCFI76:
 4220              		.cfi_def_cfa_offset 8
 4221              		.cfi_offset 4, -8
 4222              		.cfi_offset 14, -4
 4223 0002 82B0     		sub	sp, sp, #8
 4224              	.LCFI77:
 4225              		.cfi_def_cfa_offset 16
 4226 0004 0446     		mov	r4, r0
  96:Core/Src/USER/rtc.c **** filter_string(Buf);
 4227              		.loc 3 96 1 is_stmt 1 view .LVU1006
 4228 0006 FFF7FEFF 		bl	filter_string
 4229              	.LVL345:
  99:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 4230              		.loc 3 99 1 view .LVU1007
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 4231              		.loc 3 101 1 view .LVU1008
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 4232              		.loc 3 101 4 is_stmt 0 view .LVU1009
 4233 000a 2046     		mov	r0, r4
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 110


 4234 000c FFF7FEFF 		bl	strlen
 4235              	.LVL346:
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 4236              		.loc 3 101 3 view .LVU1010
 4237 0010 0728     		cmp	r0, #7
 4238 0012 01D8     		bhi	.L281
 4239              	.L276:
 119:Core/Src/USER/rtc.c **** }
 4240              		.loc 3 119 1 view .LVU1011
 4241 0014 02B0     		add	sp, sp, #8
 4242              	.LCFI78:
 4243              		.cfi_remember_state
 4244              		.cfi_def_cfa_offset 8
 4245              		@ sp needed
 4246 0016 10BD     		pop	{r4, pc}
 4247              	.LVL347:
 4248              	.L281:
 4249              	.LCFI79:
 4250              		.cfi_restore_state
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 4251              		.loc 3 102 2 is_stmt 1 view .LVU1012
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 4252              		.loc 3 102 7 is_stmt 0 view .LVU1013
 4253 0018 2E23     		movs	r3, #46
 4254 001a ADF80030 		strh	r3, [sp]	@ movhi
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 4255              		.loc 3 104 2 is_stmt 1 view .LVU1014
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 4256              		.loc 3 104 14 is_stmt 0 view .LVU1015
 4257 001e 6946     		mov	r1, sp
 4258 0020 2046     		mov	r0, r4
 4259 0022 FFF7FEFF 		bl	strtok
 4260              	.LVL348:
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 4261              		.loc 3 105 2 is_stmt 1 view .LVU1016
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 4262              		.loc 3 105 14 is_stmt 0 view .LVU1017
 4263 0026 FFF7FEFF 		bl	atoi
 4264              	.LVL349:
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 4265              		.loc 3 105 13 view .LVU1018
 4266 002a 8DF80700 		strb	r0, [sp, #7]
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4267              		.loc 3 107 2 is_stmt 1 view .LVU1019
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4268              		.loc 3 107 8 is_stmt 0 view .LVU1020
 4269 002e 6946     		mov	r1, sp
 4270 0030 0020     		movs	r0, #0
 4271 0032 FFF7FEFF 		bl	strtok
 4272              	.LVL350:
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 4273              		.loc 3 108 2 is_stmt 1 view .LVU1021
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 4274              		.loc 3 108 15 is_stmt 0 view .LVU1022
 4275 0036 FFF7FEFF 		bl	atoi
 4276              	.LVL351:
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 111


 4277              		.loc 3 108 14 view .LVU1023
 4278 003a 8DF80500 		strb	r0, [sp, #5]
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4279              		.loc 3 110 2 is_stmt 1 view .LVU1024
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4280              		.loc 3 110 8 is_stmt 0 view .LVU1025
 4281 003e 6946     		mov	r1, sp
 4282 0040 0020     		movs	r0, #0
 4283 0042 FFF7FEFF 		bl	strtok
 4284              	.LVL352:
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 4285              		.loc 3 111 2 is_stmt 1 view .LVU1026
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 4286              		.loc 3 111 14 is_stmt 0 view .LVU1027
 4287 0046 FFF7FEFF 		bl	atoi
 4288              	.LVL353:
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 4289              		.loc 3 111 13 view .LVU1028
 4290 004a 8DF80600 		strb	r0, [sp, #6]
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4291              		.loc 3 113 2 is_stmt 1 view .LVU1029
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4292              		.loc 3 113 6 is_stmt 0 view .LVU1030
 4293 004e 0022     		movs	r2, #0
 4294 0050 01A9     		add	r1, sp, #4
 4295 0052 0448     		ldr	r0, .L283
 4296 0054 FFF7FEFF 		bl	HAL_RTC_SetDate
 4297              	.LVL354:
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4298              		.loc 3 113 5 view .LVU1031
 4299 0058 10B9     		cbnz	r0, .L282
 118:Core/Src/USER/rtc.c ****   rtc_backup_date();
 4300              		.loc 3 118 3 is_stmt 1 view .LVU1032
 4301 005a FFF7FEFF 		bl	rtc_backup_date
 4302              	.LVL355:
 4303 005e D9E7     		b	.L276
 4304              	.L282:
 115:Core/Src/USER/rtc.c ****     Error_Handler();
 4305              		.loc 3 115 5 view .LVU1033
 4306 0060 FFF7FEFF 		bl	Error_Handler
 4307              	.LVL356:
 4308              	.L284:
 4309              		.align	2
 4310              	.L283:
 4311 0064 00000000 		.word	.LANCHOR3
 4312              		.cfi_endproc
 4313              	.LFE70:
 4315              		.section	.text.rtc_set_time_text,"ax",%progbits
 4316              		.align	1
 4317              		.global	rtc_set_time_text
 4318              		.syntax unified
 4319              		.thumb
 4320              		.thumb_func
 4322              	rtc_set_time_text:
 4323              	.LVL357:
 4324              	.LFB71:
 123:Core/Src/USER/rtc.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 112


 4325              		.loc 3 123 1 view -0
 4326              		.cfi_startproc
 4327              		@ args = 0, pretend = 0, frame = 8
 4328              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Core/Src/USER/rtc.c **** {
 4329              		.loc 3 123 1 is_stmt 0 view .LVU1035
 4330 0000 10B5     		push	{r4, lr}
 4331              	.LCFI80:
 4332              		.cfi_def_cfa_offset 8
 4333              		.cfi_offset 4, -8
 4334              		.cfi_offset 14, -4
 4335 0002 82B0     		sub	sp, sp, #8
 4336              	.LCFI81:
 4337              		.cfi_def_cfa_offset 16
 4338 0004 0446     		mov	r4, r0
 128:Core/Src/USER/rtc.c **** filter_string(Buf);
 4339              		.loc 3 128 1 is_stmt 1 view .LVU1036
 4340 0006 FFF7FEFF 		bl	filter_string
 4341              	.LVL358:
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 4342              		.loc 3 130 1 view .LVU1037
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 4343              		.loc 3 130 4 is_stmt 0 view .LVU1038
 4344 000a 2046     		mov	r0, r4
 4345 000c FFF7FEFF 		bl	strlen
 4346              	.LVL359:
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 4347              		.loc 3 130 3 view .LVU1039
 4348 0010 0728     		cmp	r0, #7
 4349 0012 01D8     		bhi	.L290
 4350              	.LVL360:
 4351              	.L285:
 148:Core/Src/USER/rtc.c **** }
 4352              		.loc 3 148 1 view .LVU1040
 4353 0014 02B0     		add	sp, sp, #8
 4354              	.LCFI82:
 4355              		.cfi_remember_state
 4356              		.cfi_def_cfa_offset 8
 4357              		@ sp needed
 4358 0016 10BD     		pop	{r4, pc}
 4359              	.LVL361:
 4360              	.L290:
 4361              	.LCFI83:
 4362              		.cfi_restore_state
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 4363              		.loc 3 132 2 is_stmt 1 view .LVU1041
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 4364              		.loc 3 132 7 is_stmt 0 view .LVU1042
 4365 0018 3A23     		movs	r3, #58
 4366 001a ADF80430 		strh	r3, [sp, #4]	@ movhi
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 4367              		.loc 3 134 2 is_stmt 1 view .LVU1043
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 4368              		.loc 3 134 14 is_stmt 0 view .LVU1044
 4369 001e 01A9     		add	r1, sp, #4
 4370 0020 2046     		mov	r0, r4
 4371 0022 FFF7FEFF 		bl	strtok
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 113


 4372              	.LVL362:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 4373              		.loc 3 135 2 is_stmt 1 view .LVU1045
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 4374              		.loc 3 135 17 is_stmt 0 view .LVU1046
 4375 0026 FFF7FEFF 		bl	atoi
 4376              	.LVL363:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 4377              		.loc 3 135 16 view .LVU1047
 4378 002a 0C4C     		ldr	r4, .L291
 4379              	.LVL364:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 4380              		.loc 3 135 16 view .LVU1048
 4381 002c 2070     		strb	r0, [r4]
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4382              		.loc 3 137 2 is_stmt 1 view .LVU1049
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4383              		.loc 3 137 8 is_stmt 0 view .LVU1050
 4384 002e 01A9     		add	r1, sp, #4
 4385 0030 0020     		movs	r0, #0
 4386 0032 FFF7FEFF 		bl	strtok
 4387              	.LVL365:
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 4388              		.loc 3 138 2 is_stmt 1 view .LVU1051
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 4389              		.loc 3 138 19 is_stmt 0 view .LVU1052
 4390 0036 FFF7FEFF 		bl	atoi
 4391              	.LVL366:
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 4392              		.loc 3 138 18 view .LVU1053
 4393 003a 6070     		strb	r0, [r4, #1]
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4394              		.loc 3 140 2 is_stmt 1 view .LVU1054
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 4395              		.loc 3 140 8 is_stmt 0 view .LVU1055
 4396 003c 01A9     		add	r1, sp, #4
 4397 003e 0020     		movs	r0, #0
 4398 0040 FFF7FEFF 		bl	strtok
 4399              	.LVL367:
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 4400              		.loc 3 141 2 is_stmt 1 view .LVU1056
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 4401              		.loc 3 141 19 is_stmt 0 view .LVU1057
 4402 0044 FFF7FEFF 		bl	atoi
 4403              	.LVL368:
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 4404              		.loc 3 141 18 view .LVU1058
 4405 0048 A070     		strb	r0, [r4, #2]
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 4406              		.loc 3 143 2 is_stmt 1 view .LVU1059
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 4407              		.loc 3 143 6 is_stmt 0 view .LVU1060
 4408 004a 0022     		movs	r2, #0
 4409 004c 2146     		mov	r1, r4
 4410 004e 0448     		ldr	r0, .L291+4
 4411 0050 FFF7FEFF 		bl	HAL_RTC_SetTime
 4412              	.LVL369:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 114


 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 4413              		.loc 3 143 5 view .LVU1061
 4414 0054 0028     		cmp	r0, #0
 4415 0056 DDD0     		beq	.L285
 145:Core/Src/USER/rtc.c ****     Error_Handler();
 4416              		.loc 3 145 5 is_stmt 1 view .LVU1062
 4417 0058 FFF7FEFF 		bl	Error_Handler
 4418              	.LVL370:
 4419              	.L292:
 4420              		.align	2
 4421              	.L291:
 4422 005c 00000000 		.word	.LANCHOR2
 4423 0060 00000000 		.word	.LANCHOR3
 4424              		.cfi_endproc
 4425              	.LFE71:
 4427              		.section	.rodata.commandcom.str1.4,"aMS",%progbits,1
 4428              		.align	2
 4429              	.LC7:
 4430 0000 39482043 		.ascii	"9H CLOCK\015\012(c)2023 Vabolis.lt\015\012\000"
 4430      4C4F434B 
 4430      0D0A2863 
 4430      29323032 
 4430      33205661 
 4431              		.section	.text.commandcom,"ax",%progbits
 4432              		.align	1
 4433              		.global	commandcom
 4434              		.syntax unified
 4435              		.thumb
 4436              		.thumb_func
 4438              	commandcom:
 4439              	.LVL371:
 4440              	.LFB120:
  97:Core/Src/USER/user.c **** 
 4441              		.loc 5 97 1 view -0
 4442              		.cfi_startproc
 4443              		@ args = 0, pretend = 0, frame = 0
 4444              		@ frame_needed = 0, uses_anonymous_args = 0
  97:Core/Src/USER/user.c **** 
 4445              		.loc 5 97 1 is_stmt 0 view .LVU1064
 4446 0000 08B5     		push	{r3, lr}
 4447              	.LCFI84:
 4448              		.cfi_def_cfa_offset 8
 4449              		.cfi_offset 3, -8
 4450              		.cfi_offset 14, -4
  99:Core/Src/USER/user.c **** 
 4451              		.loc 5 99 1 is_stmt 1 view .LVU1065
  99:Core/Src/USER/user.c **** 
 4452              		.loc 5 99 8 is_stmt 0 view .LVU1066
 4453 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  99:Core/Src/USER/user.c **** 
 4454              		.loc 5 99 4 view .LVU1067
 4455 0004 412B     		cmp	r3, #65
 4456 0006 15D1     		bne	.L293
  99:Core/Src/USER/user.c **** 
 4457              		.loc 5 99 24 discriminator 2 view .LVU1068
 4458 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  99:Core/Src/USER/user.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 115


 4459              		.loc 5 99 18 discriminator 2 view .LVU1069
 4460 000a 542B     		cmp	r3, #84
 4461 000c 12D1     		bne	.L293
 101:Core/Src/USER/user.c **** 	{
 4462              		.loc 5 101 2 is_stmt 1 view .LVU1070
 101:Core/Src/USER/user.c **** 	{
 4463              		.loc 5 101 12 is_stmt 0 view .LVU1071
 4464 000e 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 101:Core/Src/USER/user.c **** 	{
 4465              		.loc 5 101 2 view .LVU1072
 4466 0010 413B     		subs	r3, r3, #65
 4467 0012 132B     		cmp	r3, #19
 4468 0014 0ED8     		bhi	.L293
 4469 0016 DFE803F0 		tbb	[pc, r3]
 4470              	.L296:
 4471 001a 17       		.byte	(.L299-.L296)/2
 4472 001b 0D       		.byte	(.L293-.L296)/2
 4473 001c 0D       		.byte	(.L293-.L296)/2
 4474 001d 0E       		.byte	(.L298-.L296)/2
 4475 001e 0D       		.byte	(.L293-.L296)/2
 4476 001f 0D       		.byte	(.L293-.L296)/2
 4477 0020 0D       		.byte	(.L293-.L296)/2
 4478 0021 0D       		.byte	(.L293-.L296)/2
 4479 0022 12       		.byte	(.L297-.L296)/2
 4480 0023 0D       		.byte	(.L293-.L296)/2
 4481 0024 0D       		.byte	(.L293-.L296)/2
 4482 0025 0D       		.byte	(.L293-.L296)/2
 4483 0026 0D       		.byte	(.L293-.L296)/2
 4484 0027 0D       		.byte	(.L293-.L296)/2
 4485 0028 0D       		.byte	(.L293-.L296)/2
 4486 0029 0D       		.byte	(.L293-.L296)/2
 4487 002a 0D       		.byte	(.L293-.L296)/2
 4488 002b 0D       		.byte	(.L293-.L296)/2
 4489 002c 0D       		.byte	(.L293-.L296)/2
 4490 002d 0A       		.byte	(.L295-.L296)/2
 4491              		.p2align 1
 4492              	.L295:
 104:Core/Src/USER/user.c **** 		break;
 4493              		.loc 5 104 4 is_stmt 1 view .LVU1073
 4494 002e 0330     		adds	r0, r0, #3
 4495              	.LVL372:
 104:Core/Src/USER/user.c **** 		break;
 4496              		.loc 5 104 4 is_stmt 0 view .LVU1074
 4497 0030 FFF7FEFF 		bl	rtc_set_time_text
 4498              	.LVL373:
 105:Core/Src/USER/user.c **** 		case 'D':
 4499              		.loc 5 105 3 is_stmt 1 view .LVU1075
 4500              	.L293:
 116:Core/Src/USER/user.c **** 
 4501              		.loc 5 116 1 is_stmt 0 view .LVU1076
 4502 0034 08BD     		pop	{r3, pc}
 4503              	.LVL374:
 4504              	.L298:
 107:Core/Src/USER/user.c **** 		break; 
 4505              		.loc 5 107 4 is_stmt 1 view .LVU1077
 4506 0036 0330     		adds	r0, r0, #3
 4507              	.LVL375:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 116


 107:Core/Src/USER/user.c **** 		break; 
 4508              		.loc 5 107 4 is_stmt 0 view .LVU1078
 4509 0038 FFF7FEFF 		bl	rtc_set_date_text
 4510              	.LVL376:
 108:Core/Src/USER/user.c **** 		case 'I':
 4511              		.loc 5 108 3 is_stmt 1 view .LVU1079
 4512 003c FAE7     		b	.L293
 4513              	.LVL377:
 4514              	.L297:
 110:Core/Src/USER/user.c **** 		break;
 4515              		.loc 5 110 4 view .LVU1080
 4516 003e 2121     		movs	r1, #33
 4517 0040 0448     		ldr	r0, .L301
 4518              	.LVL378:
 110:Core/Src/USER/user.c **** 		break;
 4519              		.loc 5 110 4 is_stmt 0 view .LVU1081
 4520 0042 FFF7FEFF 		bl	CDC_Transmit_FS
 4521              	.LVL379:
 111:Core/Src/USER/user.c **** 		case 'A':
 4522              		.loc 5 111 3 is_stmt 1 view .LVU1082
 4523 0046 F5E7     		b	.L293
 4524              	.LVL380:
 4525              	.L299:
 113:Core/Src/USER/user.c **** 		break;
 4526              		.loc 5 113 4 view .LVU1083
 4527 0048 034B     		ldr	r3, .L301+4
 4528 004a 1B68     		ldr	r3, [r3]
 4529 004c 43F2C962 		movw	r2, #14025
 4530 0050 5A63     		str	r2, [r3, #52]
 114:Core/Src/USER/user.c **** 	}
 4531              		.loc 5 114 3 view .LVU1084
 4532 0052 EFE7     		b	.L293
 4533              	.L302:
 4534              		.align	2
 4535              	.L301:
 4536 0054 00000000 		.word	.LC7
 4537 0058 00000000 		.word	.LANCHOR11
 4538              		.cfi_endproc
 4539              	.LFE120:
 4541              		.section	.text.user_loop,"ax",%progbits
 4542              		.align	1
 4543              		.global	user_loop
 4544              		.syntax unified
 4545              		.thumb
 4546              		.thumb_func
 4548              	user_loop:
 4549              	.LFB121:
 120:Core/Src/USER/user.c **** char a;
 4550              		.loc 5 120 1 view -0
 4551              		.cfi_startproc
 4552              		@ args = 0, pretend = 0, frame = 32
 4553              		@ frame_needed = 0, uses_anonymous_args = 0
 4554 0000 10B5     		push	{r4, lr}
 4555              	.LCFI85:
 4556              		.cfi_def_cfa_offset 8
 4557              		.cfi_offset 4, -8
 4558              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 117


 4559 0002 88B0     		sub	sp, sp, #32
 4560              	.LCFI86:
 4561              		.cfi_def_cfa_offset 40
 121:Core/Src/USER/user.c **** char txt[32];
 4562              		.loc 5 121 1 view .LVU1086
 122:Core/Src/USER/user.c **** unsigned char txtp=0;
 4563              		.loc 5 122 1 view .LVU1087
 123:Core/Src/USER/user.c **** 
 4564              		.loc 5 123 1 view .LVU1088
 4565              	.LVL381:
 123:Core/Src/USER/user.c **** 
 4566              		.loc 5 123 15 is_stmt 0 view .LVU1089
 4567 0004 0024     		movs	r4, #0
 4568              	.LVL382:
 4569              	.L309:
 125:Core/Src/USER/user.c **** 	{
 4570              		.loc 5 125 1 is_stmt 1 view .LVU1090
 127:Core/Src/USER/user.c **** 	while(circle_available(&cc)>0) 
 4571              		.loc 5 127 2 view .LVU1091
 4572 0006 1648     		ldr	r0, .L313
 4573 0008 FFF7FEFF 		bl	HAL_IWDG_Refresh
 4574              	.LVL383:
 128:Core/Src/USER/user.c **** 		{
 4575              		.loc 5 128 2 view .LVU1092
 4576              	.L304:
 128:Core/Src/USER/user.c **** 		{
 4577              		.loc 5 128 7 view .LVU1093
 128:Core/Src/USER/user.c **** 		{
 4578              		.loc 5 128 8 is_stmt 0 view .LVU1094
 4579 000c 1548     		ldr	r0, .L313+4
 4580 000e FFF7FEFF 		bl	circle_available
 4581              	.LVL384:
 128:Core/Src/USER/user.c **** 		{
 4582              		.loc 5 128 7 view .LVU1095
 4583 0012 0028     		cmp	r0, #0
 4584 0014 F7D0     		beq	.L309
 130:Core/Src/USER/user.c **** 			
 4585              		.loc 5 130 4 is_stmt 1 view .LVU1096
 130:Core/Src/USER/user.c **** 			
 4586              		.loc 5 130 6 is_stmt 0 view .LVU1097
 4587 0016 1348     		ldr	r0, .L313+4
 4588 0018 FFF7FEFF 		bl	circle_pull
 4589              	.LVL385:
 132:Core/Src/USER/user.c **** 			{
 4590              		.loc 5 132 4 is_stmt 1 view .LVU1098
 132:Core/Src/USER/user.c **** 			{
 4591              		.loc 5 132 15 is_stmt 0 view .LVU1099
 4592 001c A0F12003 		sub	r3, r0, #32
 4593 0020 DBB2     		uxtb	r3, r3
 132:Core/Src/USER/user.c **** 			{
 4594              		.loc 5 132 7 view .LVU1100
 4595 0022 5A2B     		cmp	r3, #90
 4596 0024 10D8     		bhi	.L305
 134:Core/Src/USER/user.c **** 				txtp++;
 4597              		.loc 5 134 5 is_stmt 1 view .LVU1101
 134:Core/Src/USER/user.c **** 				txtp++;
 4598              		.loc 5 134 14 is_stmt 0 view .LVU1102
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 118


 4599 0026 04F12003 		add	r3, r4, #32
 4600 002a 6B44     		add	r3, sp, r3
 4601 002c 03F8200C 		strb	r0, [r3, #-32]
 135:Core/Src/USER/user.c **** 				txt[txtp]=0;
 4602              		.loc 5 135 5 is_stmt 1 view .LVU1103
 135:Core/Src/USER/user.c **** 				txt[txtp]=0;
 4603              		.loc 5 135 9 is_stmt 0 view .LVU1104
 4604 0030 0134     		adds	r4, r4, #1
 4605              	.LVL386:
 135:Core/Src/USER/user.c **** 				txt[txtp]=0;
 4606              		.loc 5 135 9 view .LVU1105
 4607 0032 E4B2     		uxtb	r4, r4
 4608              	.LVL387:
 136:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 4609              		.loc 5 136 5 is_stmt 1 view .LVU1106
 136:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 4610              		.loc 5 136 14 is_stmt 0 view .LVU1107
 4611 0034 04F12003 		add	r3, r4, #32
 4612 0038 6B44     		add	r3, sp, r3
 4613 003a 0022     		movs	r2, #0
 4614 003c 03F8202C 		strb	r2, [r3, #-32]
 137:Core/Src/USER/user.c **** 			}
 4615              		.loc 5 137 5 is_stmt 1 view .LVU1108
 137:Core/Src/USER/user.c **** 			}
 4616              		.loc 5 137 8 is_stmt 0 view .LVU1109
 4617 0040 1E2C     		cmp	r4, #30
 4618 0042 E3D9     		bls	.L304
 137:Core/Src/USER/user.c **** 			}
 4619              		.loc 5 137 24 view .LVU1110
 4620 0044 0024     		movs	r4, #0
 4621              	.LVL388:
 137:Core/Src/USER/user.c **** 			}
 4622              		.loc 5 137 24 view .LVU1111
 4623 0046 E1E7     		b	.L304
 4624              	.LVL389:
 4625              	.L305:
 139:Core/Src/USER/user.c **** 			{
 4626              		.loc 5 139 9 is_stmt 1 view .LVU1112
 139:Core/Src/USER/user.c **** 			{
 4627              		.loc 5 139 12 is_stmt 0 view .LVU1113
 4628 0048 1F28     		cmp	r0, #31
 4629 004a DFD8     		bhi	.L304
 141:Core/Src/USER/user.c **** 				txt[0]=0;
 4630              		.loc 5 141 5 is_stmt 1 view .LVU1114
 141:Core/Src/USER/user.c **** 				txt[0]=0;
 4631              		.loc 5 141 8 is_stmt 0 view .LVU1115
 4632 004c 022C     		cmp	r4, #2
 4633 004e 03D8     		bhi	.L312
 4634              	.LVL390:
 4635              	.L307:
 142:Core/Src/USER/user.c **** 				txtp=0;
 4636              		.loc 5 142 5 is_stmt 1 view .LVU1116
 142:Core/Src/USER/user.c **** 				txtp=0;
 4637              		.loc 5 142 11 is_stmt 0 view .LVU1117
 4638 0050 0024     		movs	r4, #0
 4639              	.LVL391:
 142:Core/Src/USER/user.c **** 				txtp=0;
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 119


 4640              		.loc 5 142 11 view .LVU1118
 4641 0052 8DF80040 		strb	r4, [sp]
 143:Core/Src/USER/user.c **** 			}
 4642              		.loc 5 143 5 is_stmt 1 view .LVU1119
 4643              	.LVL392:
 143:Core/Src/USER/user.c **** 			}
 4644              		.loc 5 143 5 is_stmt 0 view .LVU1120
 4645 0056 D9E7     		b	.L304
 4646              	.LVL393:
 4647              	.L312:
 141:Core/Src/USER/user.c **** 				txt[0]=0;
 4648              		.loc 5 141 16 is_stmt 1 discriminator 1 view .LVU1121
 4649 0058 6846     		mov	r0, sp
 4650              	.LVL394:
 141:Core/Src/USER/user.c **** 				txt[0]=0;
 4651              		.loc 5 141 16 is_stmt 0 discriminator 1 view .LVU1122
 4652 005a FFF7FEFF 		bl	commandcom
 4653              	.LVL395:
 4654 005e F7E7     		b	.L307
 4655              	.L314:
 4656              		.align	2
 4657              	.L313:
 4658 0060 00000000 		.word	.LANCHOR10
 4659 0064 00000000 		.word	.LANCHOR8
 4660              		.cfi_endproc
 4661              	.LFE121:
 4663              		.section	.text.rtc_check_screwd_calendar,"ax",%progbits
 4664              		.align	1
 4665              		.global	rtc_check_screwd_calendar
 4666              		.syntax unified
 4667              		.thumb
 4668              		.thumb_func
 4670              	rtc_check_screwd_calendar:
 4671              	.LFB76:
 201:Core/Src/USER/rtc.c **** {
 4672              		.loc 3 201 1 is_stmt 1 view -0
 4673              		.cfi_startproc
 4674              		@ args = 0, pretend = 0, frame = 8
 4675              		@ frame_needed = 0, uses_anonymous_args = 0
 4676 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4677              	.LCFI87:
 4678              		.cfi_def_cfa_offset 24
 4679              		.cfi_offset 4, -24
 4680              		.cfi_offset 5, -20
 4681              		.cfi_offset 6, -16
 4682              		.cfi_offset 7, -12
 4683              		.cfi_offset 8, -8
 4684              		.cfi_offset 14, -4
 4685 0004 82B0     		sub	sp, sp, #8
 4686              	.LCFI88:
 4687              		.cfi_def_cfa_offset 32
 202:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 4688              		.loc 3 202 1 view .LVU1124
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 4689              		.loc 3 203 2 view .LVU1125
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 4690              		.loc 3 203 5 is_stmt 0 view .LVU1126
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 120


 4691 0006 0121     		movs	r1, #1
 4692 0008 2A48     		ldr	r0, .L321
 4693 000a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4694              	.LVL396:
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 4695              		.loc 3 203 4 view .LVU1127
 4696 000e 45F25103 		movw	r3, #20561
 4697 0012 9842     		cmp	r0, r3
 4698 0014 02D0     		beq	.L319
 4699              	.L315:
 225:Core/Src/USER/rtc.c **** }
 4700              		.loc 3 225 1 view .LVU1128
 4701 0016 02B0     		add	sp, sp, #8
 4702              	.LCFI89:
 4703              		.cfi_remember_state
 4704              		.cfi_def_cfa_offset 24
 4705              		@ sp needed
 4706 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4707              	.L319:
 4708              	.LCFI90:
 4709              		.cfi_restore_state
 4710              	.LBB32:
 205:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 4711              		.loc 3 205 3 is_stmt 1 view .LVU1129
 4712 001c DFF89480 		ldr	r8, .L321
 4713 0020 0022     		movs	r2, #0
 4714 0022 01A9     		add	r1, sp, #4
 4715 0024 4046     		mov	r0, r8
 4716 0026 FFF7FEFF 		bl	HAL_RTC_GetDate
 4717              	.LVL397:
 206:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 4718              		.loc 3 206 3 view .LVU1130
 4719 002a 234C     		ldr	r4, .L321+4
 4720 002c 0022     		movs	r2, #0
 4721 002e 2146     		mov	r1, r4
 4722 0030 4046     		mov	r0, r8
 4723 0032 FFF7FEFF 		bl	HAL_RTC_GetTime
 4724              	.LVL398:
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4725              		.loc 3 207 3 view .LVU1131
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4726              		.loc 3 207 27 is_stmt 0 view .LVU1132
 4727 0036 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4728              		.loc 3 207 40 view .LVU1133
 4729 0038 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4730              		.loc 3 207 45 view .LVU1134
 4731 003c 03EB4303 		add	r3, r3, r3, lsl #1
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4732              		.loc 3 207 33 view .LVU1135
 4733 0040 04EBC304 		add	r4, r4, r3, lsl #3
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4734              		.loc 3 207 55 view .LVU1136
 4735 0044 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4736              		.loc 3 207 64 view .LVU1137
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 121


 4737 0048 4FF43A77 		mov	r7, #744
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4738              		.loc 3 207 48 view .LVU1138
 4739 004c 07FB0344 		mla	r4, r7, r3, r4
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4740              		.loc 3 207 74 view .LVU1139
 4741 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4742              		.loc 3 207 83 view .LVU1140
 4743 0054 42F25026 		movw	r6, #8784
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4744              		.loc 3 207 67 view .LVU1141
 4745 0058 06FB0344 		mla	r4, r6, r3, r4
 4746              	.LVL399:
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 4747              		.loc 3 209 3 is_stmt 1 view .LVU1142
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 4748              		.loc 3 209 16 is_stmt 0 view .LVU1143
 4749 005c 0221     		movs	r1, #2
 4750 005e 4046     		mov	r0, r8
 4751 0060 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4752              	.LVL400:
 4753 0064 0546     		mov	r5, r0
 4754              	.LVL401:
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 4755              		.loc 3 210 3 is_stmt 1 view .LVU1144
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 4756              		.loc 3 210 17 is_stmt 0 view .LVU1145
 4757 0066 0321     		movs	r1, #3
 4758 0068 4046     		mov	r0, r8
 4759              	.LVL402:
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 4760              		.loc 3 210 17 view .LVU1146
 4761 006a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4762              	.LVL403:
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4763              		.loc 3 212 3 is_stmt 1 view .LVU1147
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4764              		.loc 3 212 24 is_stmt 0 view .LVU1148
 4765 006e 290A     		lsrs	r1, r5, #8
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4766              		.loc 3 212 41 view .LVU1149
 4767 0070 05F00F03 		and	r3, r5, #15
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4768              		.loc 3 212 53 view .LVU1150
 4769 0074 07FB03F3 		mul	r3, r7, r3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4770              		.loc 3 212 35 view .LVU1151
 4771 0078 06FB0133 		mla	r3, r6, r1, r3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4772              		.loc 3 212 62 view .LVU1152
 4773 007c 020A     		lsrs	r2, r0, #8
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4774              		.loc 3 212 66 view .LVU1153
 4775 007e 02EB4206 		add	r6, r2, r2, lsl #1
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4776              		.loc 3 212 56 view .LVU1154
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 122


 4777 0082 03EBC603 		add	r3, r3, r6, lsl #3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4778              		.loc 3 212 76 view .LVU1155
 4779 0086 C0B2     		uxtb	r0, r0
 4780              	.LVL404:
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4781              		.loc 3 212 12 view .LVU1156
 4782 0088 0344     		add	r3, r3, r0
 4783              	.LVL405:
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 4784              		.loc 3 213 3 is_stmt 1 view .LVU1157
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 4785              		.loc 3 213 5 is_stmt 0 view .LVU1158
 4786 008a 9C42     		cmp	r4, r3
 4787 008c C3D2     		bcs	.L315
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 4788              		.loc 3 215 4 is_stmt 1 view .LVU1159
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 4789              		.loc 3 215 15 is_stmt 0 view .LVU1160
 4790 008e 8DF80710 		strb	r1, [sp, #7]
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 4791              		.loc 3 216 4 is_stmt 1 view .LVU1161
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 4792              		.loc 3 216 21 is_stmt 0 view .LVU1162
 4793 0092 05F00F05 		and	r5, r5, #15
 4794              	.LVL406:
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 4795              		.loc 3 216 16 view .LVU1163
 4796 0096 8DF80550 		strb	r5, [sp, #5]
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 4797              		.loc 3 217 4 is_stmt 1 view .LVU1164
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 4798              		.loc 3 217 15 is_stmt 0 view .LVU1165
 4799 009a 8DF80620 		strb	r2, [sp, #6]
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4800              		.loc 3 218 5 is_stmt 1 view .LVU1166
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4801              		.loc 3 218 9 is_stmt 0 view .LVU1167
 4802 009e 0022     		movs	r2, #0
 4803 00a0 01A9     		add	r1, sp, #4
 4804 00a2 4046     		mov	r0, r8
 4805 00a4 FFF7FEFF 		bl	HAL_RTC_SetDate
 4806              	.LVL407:
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4807              		.loc 3 218 8 view .LVU1168
 4808 00a8 10B9     		cbnz	r0, .L320
 222:Core/Src/USER/rtc.c **** 			 rtc_backup_date();
 4809              		.loc 3 222 5 is_stmt 1 view .LVU1169
 4810 00aa FFF7FEFF 		bl	rtc_backup_date
 4811              	.LVL408:
 4812              	.LBE32:
 225:Core/Src/USER/rtc.c **** }
 4813              		.loc 3 225 1 is_stmt 0 view .LVU1170
 4814 00ae B2E7     		b	.L315
 4815              	.L320:
 4816              	.LBB33:
 220:Core/Src/USER/rtc.c **** 				Error_Handler();
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 123


 4817              		.loc 3 220 5 is_stmt 1 view .LVU1171
 4818 00b0 FFF7FEFF 		bl	Error_Handler
 4819              	.LVL409:
 4820              	.L322:
 4821              		.align	2
 4822              	.L321:
 4823 00b4 00000000 		.word	.LANCHOR3
 4824 00b8 00000000 		.word	.LANCHOR2
 4825              	.LBE33:
 4826              		.cfi_endproc
 4827              	.LFE76:
 4829              		.section	.text.MX_RTC_Init,"ax",%progbits
 4830              		.align	1
 4831              		.syntax unified
 4832              		.thumb
 4833              		.thumb_func
 4835              	MX_RTC_Init:
 4836              	.LFB129:
 242:Core/Src/main.c **** 
 4837              		.loc 2 242 1 view -0
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 16
 4840              		@ frame_needed = 0, uses_anonymous_args = 0
 4841 0000 10B5     		push	{r4, lr}
 4842              	.LCFI91:
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
 4846 0002 84B0     		sub	sp, sp, #16
 4847              	.LCFI92:
 4848              		.cfi_def_cfa_offset 24
 248:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 4849              		.loc 2 248 3 view .LVU1173
 248:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 4850              		.loc 2 248 19 is_stmt 0 view .LVU1174
 4851 0004 0023     		movs	r3, #0
 4852 0006 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 4853 000a 8DF80E30 		strb	r3, [sp, #14]
 249:Core/Src/main.c **** 
 4854              		.loc 2 249 3 is_stmt 1 view .LVU1175
 249:Core/Src/main.c **** 
 4855              		.loc 2 249 19 is_stmt 0 view .LVU1176
 4856 000e 0293     		str	r3, [sp, #8]
 252:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 4857              		.loc 2 252 3 is_stmt 1 view .LVU1177
 252:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 4858              		.loc 2 252 17 is_stmt 0 view .LVU1178
 4859 0010 2E4B     		ldr	r3, .L333
 4860 0012 2F4A     		ldr	r2, .L333+4
 4861 0014 1A60     		str	r2, [r3]
 253:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 4862              		.loc 2 253 3 is_stmt 1 view .LVU1179
 253:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 4863              		.loc 2 253 26 is_stmt 0 view .LVU1180
 4864 0016 4FF0FF32 		mov	r2, #-1
 4865 001a 5A60     		str	r2, [r3, #4]
 254:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 124


 4866              		.loc 2 254 3 is_stmt 1 view .LVU1181
 254:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
 4867              		.loc 2 254 20 is_stmt 0 view .LVU1182
 4868 001c 4FF48072 		mov	r2, #256
 4869 0020 9A60     		str	r2, [r3, #8]
 255:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 4870              		.loc 2 255 3 is_stmt 1 view .LVU1183
 255:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 4871              		.loc 2 255 11 is_stmt 0 view .LVU1184
 4872 0022 2C4B     		ldr	r3, .L333+8
 4873 0024 1B6A     		ldr	r3, [r3, #32]
 255:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 4874              		.loc 2 255 6 view .LVU1185
 4875 0026 13F4004F 		tst	r3, #32768
 4876 002a 05D1     		bne	.L324
 260:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 4877              		.loc 2 260 3 is_stmt 1 view .LVU1186
 261:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 4878              		.loc 2 261 3 view .LVU1187
 262:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 4879              		.loc 2 262 3 view .LVU1188
 263:Core/Src/main.c ****   {
 4880              		.loc 2 263 3 view .LVU1189
 263:Core/Src/main.c ****   {
 4881              		.loc 2 263 7 is_stmt 0 view .LVU1190
 4882 002c 2748     		ldr	r0, .L333
 4883 002e FFF7FEFF 		bl	HAL_RTC_Init
 4884              	.LVL410:
 263:Core/Src/main.c ****   {
 4885              		.loc 2 263 6 view .LVU1191
 4886 0032 48B1     		cbz	r0, .L325
 265:Core/Src/main.c ****   }
 4887              		.loc 2 265 5 is_stmt 1 view .LVU1192
 4888 0034 FFF7FEFF 		bl	Error_Handler
 4889              	.LVL411:
 4890              	.L324:
 271:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(RTC_IRQn);
 4891              		.loc 2 271 4 view .LVU1193
 4892 0038 0022     		movs	r2, #0
 4893 003a 0F21     		movs	r1, #15
 4894 003c 0320     		movs	r0, #3
 4895 003e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 4896              	.LVL412:
 272:Core/Src/main.c **** 	}
 4897              		.loc 2 272 4 view .LVU1194
 4898 0042 0320     		movs	r0, #3
 4899 0044 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 4900              	.LVL413:
 4901              	.L325:
 274:Core/Src/main.c **** 	{
 4902              		.loc 2 274 2 view .LVU1195
 274:Core/Src/main.c **** 	{
 4903              		.loc 2 274 5 is_stmt 0 view .LVU1196
 4904 0048 0121     		movs	r1, #1
 4905 004a 2048     		ldr	r0, .L333
 4906 004c FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4907              	.LVL414:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 125


 274:Core/Src/main.c **** 	{
 4908              		.loc 2 274 4 view .LVU1197
 4909 0050 45F25103 		movw	r3, #20561
 4910 0054 9842     		cmp	r0, r3
 4911 0056 1AD0     		beq	.L326
 280:Core/Src/main.c ****   sTime.Minutes = 0;
 4912              		.loc 2 280 3 is_stmt 1 view .LVU1198
 280:Core/Src/main.c ****   sTime.Minutes = 0;
 4913              		.loc 2 280 15 is_stmt 0 view .LVU1199
 4914 0058 0022     		movs	r2, #0
 4915 005a 8DF80C20 		strb	r2, [sp, #12]
 281:Core/Src/main.c ****   sTime.Seconds = 0;
 4916              		.loc 2 281 3 is_stmt 1 view .LVU1200
 281:Core/Src/main.c ****   sTime.Seconds = 0;
 4917              		.loc 2 281 17 is_stmt 0 view .LVU1201
 4918 005e 8DF80D20 		strb	r2, [sp, #13]
 282:Core/Src/main.c **** 
 4919              		.loc 2 282 3 is_stmt 1 view .LVU1202
 282:Core/Src/main.c **** 
 4920              		.loc 2 282 17 is_stmt 0 view .LVU1203
 4921 0062 8DF80E20 		strb	r2, [sp, #14]
 284:Core/Src/main.c ****   {
 4922              		.loc 2 284 3 is_stmt 1 view .LVU1204
 284:Core/Src/main.c ****   {
 4923              		.loc 2 284 7 is_stmt 0 view .LVU1205
 4924 0066 03A9     		add	r1, sp, #12
 4925 0068 1848     		ldr	r0, .L333
 4926 006a FFF7FEFF 		bl	HAL_RTC_SetTime
 4927              	.LVL415:
 284:Core/Src/main.c ****   {
 4928              		.loc 2 284 6 view .LVU1206
 4929 006e 30BB     		cbnz	r0, .L330
 288:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 4930              		.loc 2 288 3 is_stmt 1 view .LVU1207
 288:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 4931              		.loc 2 288 24 is_stmt 0 view .LVU1208
 4932 0070 0123     		movs	r3, #1
 4933 0072 8DF80830 		strb	r3, [sp, #8]
 289:Core/Src/main.c ****   DateToUpdate.Date = 1;
 4934              		.loc 2 289 3 is_stmt 1 view .LVU1209
 289:Core/Src/main.c ****   DateToUpdate.Date = 1;
 4935              		.loc 2 289 22 is_stmt 0 view .LVU1210
 4936 0076 8DF80930 		strb	r3, [sp, #9]
 290:Core/Src/main.c ****   DateToUpdate.Year = 0;
 4937              		.loc 2 290 3 is_stmt 1 view .LVU1211
 290:Core/Src/main.c ****   DateToUpdate.Year = 0;
 4938              		.loc 2 290 21 is_stmt 0 view .LVU1212
 4939 007a 8DF80A30 		strb	r3, [sp, #10]
 291:Core/Src/main.c **** 
 4940              		.loc 2 291 3 is_stmt 1 view .LVU1213
 291:Core/Src/main.c **** 
 4941              		.loc 2 291 21 is_stmt 0 view .LVU1214
 4942 007e 0022     		movs	r2, #0
 4943 0080 8DF80B20 		strb	r2, [sp, #11]
 293:Core/Src/main.c ****   {
 4944              		.loc 2 293 3 is_stmt 1 view .LVU1215
 293:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 126


 4945              		.loc 2 293 7 is_stmt 0 view .LVU1216
 4946 0084 02A9     		add	r1, sp, #8
 4947 0086 1148     		ldr	r0, .L333
 4948 0088 FFF7FEFF 		bl	HAL_RTC_SetDate
 4949              	.LVL416:
 293:Core/Src/main.c ****   {
 4950              		.loc 2 293 6 view .LVU1217
 4951 008c C8B9     		cbnz	r0, .L331
 4952              	.L326:
 305:Core/Src/main.c **** /* read time seconds for epoch */
 4953              		.loc 2 305 2 is_stmt 1 view .LVU1218
 4954 008e 0F4C     		ldr	r4, .L333
 4955 0090 0022     		movs	r2, #0
 4956 0092 1149     		ldr	r1, .L333+12
 4957 0094 2046     		mov	r0, r4
 4958 0096 FFF7FEFF 		bl	HAL_RTC_GetTime
 4959              	.LVL417:
 312:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 4960              		.loc 2 312 2 view .LVU1219
 312:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 4961              		.loc 2 312 18 is_stmt 0 view .LVU1220
 4962 009a 0022     		movs	r2, #0
 4963 009c 0192     		str	r2, [sp, #4]
 313:Core/Src/main.c **** 	if(dienos.Year < 20) {rtc_check_screwd_calendar();}
 4964              		.loc 2 313 2 is_stmt 1 view .LVU1221
 4965 009e 01A9     		add	r1, sp, #4
 4966 00a0 2046     		mov	r0, r4
 4967 00a2 FFF7FEFF 		bl	HAL_RTC_GetDate
 4968              	.LVL418:
 314:Core/Src/main.c **** 	
 4969              		.loc 2 314 2 view .LVU1222
 314:Core/Src/main.c **** 	
 4970              		.loc 2 314 11 is_stmt 0 view .LVU1223
 4971 00a6 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 314:Core/Src/main.c **** 	
 4972              		.loc 2 314 4 view .LVU1224
 4973 00aa 132B     		cmp	r3, #19
 4974 00ac 0BD9     		bls	.L332
 4975              	.L328:
 319:Core/Src/main.c **** 
 4976              		.loc 2 319 2 is_stmt 1 view .LVU1225
 4977 00ae 45F25102 		movw	r2, #20561
 4978 00b2 0121     		movs	r1, #1
 4979 00b4 0548     		ldr	r0, .L333
 4980 00b6 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 4981              	.LVL419:
 324:Core/Src/main.c **** 
 4982              		.loc 2 324 1 is_stmt 0 view .LVU1226
 4983 00ba 04B0     		add	sp, sp, #16
 4984              	.LCFI93:
 4985              		.cfi_remember_state
 4986              		.cfi_def_cfa_offset 8
 4987              		@ sp needed
 4988 00bc 10BD     		pop	{r4, pc}
 4989              	.L330:
 4990              	.LCFI94:
 4991              		.cfi_restore_state
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 127


 286:Core/Src/main.c ****   }
 4992              		.loc 2 286 5 is_stmt 1 view .LVU1227
 4993 00be FFF7FEFF 		bl	Error_Handler
 4994              	.LVL420:
 4995              	.L331:
 295:Core/Src/main.c ****   }
 4996              		.loc 2 295 5 view .LVU1228
 4997 00c2 FFF7FEFF 		bl	Error_Handler
 4998              	.LVL421:
 4999              	.L332:
 314:Core/Src/main.c **** 	
 5000              		.loc 2 314 24 discriminator 1 view .LVU1229
 5001 00c6 FFF7FEFF 		bl	rtc_check_screwd_calendar
 5002              	.LVL422:
 5003 00ca F0E7     		b	.L328
 5004              	.L334:
 5005              		.align	2
 5006              	.L333:
 5007 00cc 00000000 		.word	.LANCHOR3
 5008 00d0 00280040 		.word	1073752064
 5009 00d4 00100240 		.word	1073876992
 5010 00d8 00000000 		.word	.LANCHOR2
 5011              		.cfi_endproc
 5012              	.LFE129:
 5014              		.section	.text.MX_TIM1_Init,"ax",%progbits
 5015              		.align	1
 5016              		.syntax unified
 5017              		.thumb
 5018              		.thumb_func
 5020              	MX_TIM1_Init:
 5021              	.LFB130:
 332:Core/Src/main.c **** 
 5022              		.loc 2 332 1 view -0
 5023              		.cfi_startproc
 5024              		@ args = 0, pretend = 0, frame = 88
 5025              		@ frame_needed = 0, uses_anonymous_args = 0
 5026 0000 10B5     		push	{r4, lr}
 5027              	.LCFI95:
 5028              		.cfi_def_cfa_offset 8
 5029              		.cfi_offset 4, -8
 5030              		.cfi_offset 14, -4
 5031 0002 96B0     		sub	sp, sp, #88
 5032              	.LCFI96:
 5033              		.cfi_def_cfa_offset 96
 338:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 5034              		.loc 2 338 3 view .LVU1231
 338:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 5035              		.loc 2 338 26 is_stmt 0 view .LVU1232
 5036 0004 0024     		movs	r4, #0
 5037 0006 1294     		str	r4, [sp, #72]
 5038 0008 1394     		str	r4, [sp, #76]
 5039 000a 1494     		str	r4, [sp, #80]
 5040 000c 1594     		str	r4, [sp, #84]
 339:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 5041              		.loc 2 339 3 is_stmt 1 view .LVU1233
 339:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 5042              		.loc 2 339 27 is_stmt 0 view .LVU1234
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 128


 5043 000e 1094     		str	r4, [sp, #64]
 5044 0010 1194     		str	r4, [sp, #68]
 340:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 5045              		.loc 2 340 3 is_stmt 1 view .LVU1235
 340:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 5046              		.loc 2 340 22 is_stmt 0 view .LVU1236
 5047 0012 0994     		str	r4, [sp, #36]
 5048 0014 0A94     		str	r4, [sp, #40]
 5049 0016 0B94     		str	r4, [sp, #44]
 5050 0018 0C94     		str	r4, [sp, #48]
 5051 001a 0D94     		str	r4, [sp, #52]
 5052 001c 0E94     		str	r4, [sp, #56]
 5053 001e 0F94     		str	r4, [sp, #60]
 341:Core/Src/main.c **** 
 5054              		.loc 2 341 3 is_stmt 1 view .LVU1237
 341:Core/Src/main.c **** 
 5055              		.loc 2 341 34 is_stmt 0 view .LVU1238
 5056 0020 2022     		movs	r2, #32
 5057 0022 2146     		mov	r1, r4
 5058 0024 01A8     		add	r0, sp, #4
 5059 0026 FFF7FEFF 		bl	memset
 5060              	.LVL423:
 346:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 5061              		.loc 2 346 3 is_stmt 1 view .LVU1239
 346:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 5062              		.loc 2 346 18 is_stmt 0 view .LVU1240
 5063 002a 2B48     		ldr	r0, .L349
 5064 002c 2B4B     		ldr	r3, .L349+4
 5065 002e 0360     		str	r3, [r0]
 347:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 5066              		.loc 2 347 3 is_stmt 1 view .LVU1241
 347:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 5067              		.loc 2 347 24 is_stmt 0 view .LVU1242
 5068 0030 4460     		str	r4, [r0, #4]
 348:Core/Src/main.c ****   htim1.Init.Period = 65535;
 5069              		.loc 2 348 3 is_stmt 1 view .LVU1243
 348:Core/Src/main.c ****   htim1.Init.Period = 65535;
 5070              		.loc 2 348 26 is_stmt 0 view .LVU1244
 5071 0032 8460     		str	r4, [r0, #8]
 349:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 5072              		.loc 2 349 3 is_stmt 1 view .LVU1245
 349:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 5073              		.loc 2 349 21 is_stmt 0 view .LVU1246
 5074 0034 4FF6FF73 		movw	r3, #65535
 5075 0038 C360     		str	r3, [r0, #12]
 350:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 5076              		.loc 2 350 3 is_stmt 1 view .LVU1247
 350:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 5077              		.loc 2 350 28 is_stmt 0 view .LVU1248
 5078 003a 0461     		str	r4, [r0, #16]
 351:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 5079              		.loc 2 351 3 is_stmt 1 view .LVU1249
 351:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 5080              		.loc 2 351 32 is_stmt 0 view .LVU1250
 5081 003c 4461     		str	r4, [r0, #20]
 352:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 5082              		.loc 2 352 3 is_stmt 1 view .LVU1251
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 129


 352:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 5083              		.loc 2 352 32 is_stmt 0 view .LVU1252
 5084 003e 8023     		movs	r3, #128
 5085 0040 8361     		str	r3, [r0, #24]
 353:Core/Src/main.c ****   {
 5086              		.loc 2 353 3 is_stmt 1 view .LVU1253
 353:Core/Src/main.c ****   {
 5087              		.loc 2 353 7 is_stmt 0 view .LVU1254
 5088 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 5089              	.LVL424:
 353:Core/Src/main.c ****   {
 5090              		.loc 2 353 6 view .LVU1255
 5091 0046 0028     		cmp	r0, #0
 5092 0048 39D1     		bne	.L343
 357:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 5093              		.loc 2 357 3 is_stmt 1 view .LVU1256
 357:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 5094              		.loc 2 357 34 is_stmt 0 view .LVU1257
 5095 004a 4FF48053 		mov	r3, #4096
 5096 004e 1293     		str	r3, [sp, #72]
 358:Core/Src/main.c ****   {
 5097              		.loc 2 358 3 is_stmt 1 view .LVU1258
 358:Core/Src/main.c ****   {
 5098              		.loc 2 358 7 is_stmt 0 view .LVU1259
 5099 0050 12A9     		add	r1, sp, #72
 5100 0052 2148     		ldr	r0, .L349
 5101 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 5102              	.LVL425:
 358:Core/Src/main.c ****   {
 5103              		.loc 2 358 6 view .LVU1260
 5104 0058 0028     		cmp	r0, #0
 5105 005a 32D1     		bne	.L344
 362:Core/Src/main.c ****   {
 5106              		.loc 2 362 3 is_stmt 1 view .LVU1261
 362:Core/Src/main.c ****   {
 5107              		.loc 2 362 7 is_stmt 0 view .LVU1262
 5108 005c 1E48     		ldr	r0, .L349
 5109 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 5110              	.LVL426:
 362:Core/Src/main.c ****   {
 5111              		.loc 2 362 6 view .LVU1263
 5112 0062 0028     		cmp	r0, #0
 5113 0064 2FD1     		bne	.L345
 366:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 5114              		.loc 2 366 3 is_stmt 1 view .LVU1264
 366:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 5115              		.loc 2 366 37 is_stmt 0 view .LVU1265
 5116 0066 0023     		movs	r3, #0
 5117 0068 1093     		str	r3, [sp, #64]
 367:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 5118              		.loc 2 367 3 is_stmt 1 view .LVU1266
 367:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 5119              		.loc 2 367 33 is_stmt 0 view .LVU1267
 5120 006a 1193     		str	r3, [sp, #68]
 368:Core/Src/main.c ****   {
 5121              		.loc 2 368 3 is_stmt 1 view .LVU1268
 368:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 130


 5122              		.loc 2 368 7 is_stmt 0 view .LVU1269
 5123 006c 10A9     		add	r1, sp, #64
 5124 006e 1A48     		ldr	r0, .L349
 5125 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 5126              	.LVL427:
 368:Core/Src/main.c ****   {
 5127              		.loc 2 368 6 view .LVU1270
 5128 0074 48BB     		cbnz	r0, .L346
 372:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 5129              		.loc 2 372 3 is_stmt 1 view .LVU1271
 372:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 5130              		.loc 2 372 20 is_stmt 0 view .LVU1272
 5131 0076 6023     		movs	r3, #96
 5132 0078 0993     		str	r3, [sp, #36]
 373:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 5133              		.loc 2 373 3 is_stmt 1 view .LVU1273
 373:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 5134              		.loc 2 373 19 is_stmt 0 view .LVU1274
 5135 007a 43F69823 		movw	r3, #15000
 5136 007e 0A93     		str	r3, [sp, #40]
 374:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 5137              		.loc 2 374 3 is_stmt 1 view .LVU1275
 374:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 5138              		.loc 2 374 24 is_stmt 0 view .LVU1276
 5139 0080 0022     		movs	r2, #0
 5140 0082 0B92     		str	r2, [sp, #44]
 375:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 5141              		.loc 2 375 3 is_stmt 1 view .LVU1277
 375:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 5142              		.loc 2 375 25 is_stmt 0 view .LVU1278
 5143 0084 0C92     		str	r2, [sp, #48]
 376:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 5144              		.loc 2 376 3 is_stmt 1 view .LVU1279
 376:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 5145              		.loc 2 376 24 is_stmt 0 view .LVU1280
 5146 0086 0D92     		str	r2, [sp, #52]
 377:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 5147              		.loc 2 377 3 is_stmt 1 view .LVU1281
 377:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 5148              		.loc 2 377 25 is_stmt 0 view .LVU1282
 5149 0088 0E92     		str	r2, [sp, #56]
 378:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 5150              		.loc 2 378 3 is_stmt 1 view .LVU1283
 378:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 5151              		.loc 2 378 26 is_stmt 0 view .LVU1284
 5152 008a 0F92     		str	r2, [sp, #60]
 379:Core/Src/main.c ****   {
 5153              		.loc 2 379 3 is_stmt 1 view .LVU1285
 379:Core/Src/main.c ****   {
 5154              		.loc 2 379 7 is_stmt 0 view .LVU1286
 5155 008c 09A9     		add	r1, sp, #36
 5156 008e 1248     		ldr	r0, .L349
 5157 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 5158              	.LVL428:
 379:Core/Src/main.c ****   {
 5159              		.loc 2 379 6 view .LVU1287
 5160 0094 D8B9     		cbnz	r0, .L347
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 131


 383:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 5161              		.loc 2 383 3 is_stmt 1 view .LVU1288
 383:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 5162              		.loc 2 383 40 is_stmt 0 view .LVU1289
 5163 0096 0023     		movs	r3, #0
 5164 0098 0193     		str	r3, [sp, #4]
 384:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 5165              		.loc 2 384 3 is_stmt 1 view .LVU1290
 384:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 5166              		.loc 2 384 41 is_stmt 0 view .LVU1291
 5167 009a 0293     		str	r3, [sp, #8]
 385:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 5168              		.loc 2 385 3 is_stmt 1 view .LVU1292
 385:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 5169              		.loc 2 385 34 is_stmt 0 view .LVU1293
 5170 009c 0393     		str	r3, [sp, #12]
 386:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 5171              		.loc 2 386 3 is_stmt 1 view .LVU1294
 386:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 5172              		.loc 2 386 33 is_stmt 0 view .LVU1295
 5173 009e 0493     		str	r3, [sp, #16]
 387:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 5174              		.loc 2 387 3 is_stmt 1 view .LVU1296
 387:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 5175              		.loc 2 387 35 is_stmt 0 view .LVU1297
 5176 00a0 0593     		str	r3, [sp, #20]
 388:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 5177              		.loc 2 388 3 is_stmt 1 view .LVU1298
 388:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 5178              		.loc 2 388 38 is_stmt 0 view .LVU1299
 5179 00a2 4FF40052 		mov	r2, #8192
 5180 00a6 0692     		str	r2, [sp, #24]
 389:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 5181              		.loc 2 389 3 is_stmt 1 view .LVU1300
 389:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 5182              		.loc 2 389 40 is_stmt 0 view .LVU1301
 5183 00a8 0893     		str	r3, [sp, #32]
 390:Core/Src/main.c ****   {
 5184              		.loc 2 390 3 is_stmt 1 view .LVU1302
 390:Core/Src/main.c ****   {
 5185              		.loc 2 390 7 is_stmt 0 view .LVU1303
 5186 00aa 01A9     		add	r1, sp, #4
 5187 00ac 0A48     		ldr	r0, .L349
 5188 00ae FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 5189              	.LVL429:
 390:Core/Src/main.c ****   {
 5190              		.loc 2 390 6 view .LVU1304
 5191 00b2 70B9     		cbnz	r0, .L348
 397:Core/Src/main.c **** 
 5192              		.loc 2 397 3 is_stmt 1 view .LVU1305
 5193 00b4 0848     		ldr	r0, .L349
 5194 00b6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 5195              	.LVL430:
 399:Core/Src/main.c **** 
 5196              		.loc 2 399 1 is_stmt 0 view .LVU1306
 5197 00ba 16B0     		add	sp, sp, #88
 5198              	.LCFI97:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 132


 5199              		.cfi_remember_state
 5200              		.cfi_def_cfa_offset 8
 5201              		@ sp needed
 5202 00bc 10BD     		pop	{r4, pc}
 5203              	.L343:
 5204              	.LCFI98:
 5205              		.cfi_restore_state
 355:Core/Src/main.c ****   }
 5206              		.loc 2 355 5 is_stmt 1 view .LVU1307
 5207 00be FFF7FEFF 		bl	Error_Handler
 5208              	.LVL431:
 5209              	.L344:
 360:Core/Src/main.c ****   }
 5210              		.loc 2 360 5 view .LVU1308
 5211 00c2 FFF7FEFF 		bl	Error_Handler
 5212              	.LVL432:
 5213              	.L345:
 364:Core/Src/main.c ****   }
 5214              		.loc 2 364 5 view .LVU1309
 5215 00c6 FFF7FEFF 		bl	Error_Handler
 5216              	.LVL433:
 5217              	.L346:
 370:Core/Src/main.c ****   }
 5218              		.loc 2 370 5 view .LVU1310
 5219 00ca FFF7FEFF 		bl	Error_Handler
 5220              	.LVL434:
 5221              	.L347:
 381:Core/Src/main.c ****   }
 5222              		.loc 2 381 5 view .LVU1311
 5223 00ce FFF7FEFF 		bl	Error_Handler
 5224              	.LVL435:
 5225              	.L348:
 392:Core/Src/main.c ****   }
 5226              		.loc 2 392 5 view .LVU1312
 5227 00d2 FFF7FEFF 		bl	Error_Handler
 5228              	.LVL436:
 5229              	.L350:
 5230 00d6 00BF     		.align	2
 5231              	.L349:
 5232 00d8 00000000 		.word	.LANCHOR11
 5233 00dc 002C0140 		.word	1073818624
 5234              		.cfi_endproc
 5235              	.LFE130:
 5237              		.section	.text.MX_I2C2_Init,"ax",%progbits
 5238              		.align	1
 5239              		.syntax unified
 5240              		.thumb
 5241              		.thumb_func
 5243              	MX_I2C2_Init:
 5244              	.LFB127:
 180:Core/Src/main.c **** 
 5245              		.loc 2 180 1 view -0
 5246              		.cfi_startproc
 5247              		@ args = 0, pretend = 0, frame = 0
 5248              		@ frame_needed = 0, uses_anonymous_args = 0
 5249 0000 08B5     		push	{r3, lr}
 5250              	.LCFI99:
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 133


 5251              		.cfi_def_cfa_offset 8
 5252              		.cfi_offset 3, -8
 5253              		.cfi_offset 14, -4
 189:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 5254              		.loc 2 189 3 view .LVU1314
 189:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 5255              		.loc 2 189 18 is_stmt 0 view .LVU1315
 5256 0002 0A48     		ldr	r0, .L355
 5257 0004 0A4B     		ldr	r3, .L355+4
 5258 0006 0360     		str	r3, [r0]
 190:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 5259              		.loc 2 190 3 is_stmt 1 view .LVU1316
 190:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 5260              		.loc 2 190 25 is_stmt 0 view .LVU1317
 5261 0008 0A4B     		ldr	r3, .L355+8
 5262 000a 4360     		str	r3, [r0, #4]
 191:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 5263              		.loc 2 191 3 is_stmt 1 view .LVU1318
 191:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 5264              		.loc 2 191 24 is_stmt 0 view .LVU1319
 5265 000c 0023     		movs	r3, #0
 5266 000e 8360     		str	r3, [r0, #8]
 192:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 5267              		.loc 2 192 3 is_stmt 1 view .LVU1320
 192:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 5268              		.loc 2 192 26 is_stmt 0 view .LVU1321
 5269 0010 C360     		str	r3, [r0, #12]
 193:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 5270              		.loc 2 193 3 is_stmt 1 view .LVU1322
 193:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 5271              		.loc 2 193 29 is_stmt 0 view .LVU1323
 5272 0012 4FF48042 		mov	r2, #16384
 5273 0016 0261     		str	r2, [r0, #16]
 194:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 5274              		.loc 2 194 3 is_stmt 1 view .LVU1324
 194:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 5275              		.loc 2 194 30 is_stmt 0 view .LVU1325
 5276 0018 4361     		str	r3, [r0, #20]
 195:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 5277              		.loc 2 195 3 is_stmt 1 view .LVU1326
 195:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 5278              		.loc 2 195 26 is_stmt 0 view .LVU1327
 5279 001a 8361     		str	r3, [r0, #24]
 196:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 5280              		.loc 2 196 3 is_stmt 1 view .LVU1328
 196:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 5281              		.loc 2 196 30 is_stmt 0 view .LVU1329
 5282 001c C361     		str	r3, [r0, #28]
 197:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 5283              		.loc 2 197 3 is_stmt 1 view .LVU1330
 197:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 5284              		.loc 2 197 28 is_stmt 0 view .LVU1331
 5285 001e 0362     		str	r3, [r0, #32]
 198:Core/Src/main.c ****   {
 5286              		.loc 2 198 3 is_stmt 1 view .LVU1332
 198:Core/Src/main.c ****   {
 5287              		.loc 2 198 7 is_stmt 0 view .LVU1333
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 134


 5288 0020 FFF7FEFF 		bl	HAL_I2C_Init
 5289              	.LVL437:
 198:Core/Src/main.c ****   {
 5290              		.loc 2 198 6 view .LVU1334
 5291 0024 00B9     		cbnz	r0, .L354
 206:Core/Src/main.c **** 
 5292              		.loc 2 206 1 view .LVU1335
 5293 0026 08BD     		pop	{r3, pc}
 5294              	.L354:
 200:Core/Src/main.c ****   }
 5295              		.loc 2 200 5 is_stmt 1 view .LVU1336
 5296 0028 FFF7FEFF 		bl	Error_Handler
 5297              	.LVL438:
 5298              	.L356:
 5299              		.align	2
 5300              	.L355:
 5301 002c 00000000 		.word	.LANCHOR0
 5302 0030 00580040 		.word	1073764352
 5303 0034 A0860100 		.word	100000
 5304              		.cfi_endproc
 5305              	.LFE127:
 5307              		.section	.text.MX_IWDG_Init,"ax",%progbits
 5308              		.align	1
 5309              		.syntax unified
 5310              		.thumb
 5311              		.thumb_func
 5313              	MX_IWDG_Init:
 5314              	.LFB128:
 214:Core/Src/main.c **** 
 5315              		.loc 2 214 1 view -0
 5316              		.cfi_startproc
 5317              		@ args = 0, pretend = 0, frame = 0
 5318              		@ frame_needed = 0, uses_anonymous_args = 0
 5319 0000 08B5     		push	{r3, lr}
 5320              	.LCFI100:
 5321              		.cfi_def_cfa_offset 8
 5322              		.cfi_offset 3, -8
 5323              		.cfi_offset 14, -4
 223:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 5324              		.loc 2 223 3 view .LVU1338
 223:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_32;
 5325              		.loc 2 223 18 is_stmt 0 view .LVU1339
 5326 0002 0748     		ldr	r0, .L361
 5327 0004 074B     		ldr	r3, .L361+4
 5328 0006 0360     		str	r3, [r0]
 224:Core/Src/main.c ****   hiwdg.Init.Reload = 3749;
 5329              		.loc 2 224 3 is_stmt 1 view .LVU1340
 224:Core/Src/main.c ****   hiwdg.Init.Reload = 3749;
 5330              		.loc 2 224 24 is_stmt 0 view .LVU1341
 5331 0008 0323     		movs	r3, #3
 5332 000a 4360     		str	r3, [r0, #4]
 225:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 5333              		.loc 2 225 3 is_stmt 1 view .LVU1342
 225:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 5334              		.loc 2 225 21 is_stmt 0 view .LVU1343
 5335 000c 40F6A563 		movw	r3, #3749
 5336 0010 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 135


 226:Core/Src/main.c ****   {
 5337              		.loc 2 226 3 is_stmt 1 view .LVU1344
 226:Core/Src/main.c ****   {
 5338              		.loc 2 226 7 is_stmt 0 view .LVU1345
 5339 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 5340              	.LVL439:
 226:Core/Src/main.c ****   {
 5341              		.loc 2 226 6 view .LVU1346
 5342 0016 00B9     		cbnz	r0, .L360
 234:Core/Src/main.c **** 
 5343              		.loc 2 234 1 view .LVU1347
 5344 0018 08BD     		pop	{r3, pc}
 5345              	.L360:
 228:Core/Src/main.c ****   }
 5346              		.loc 2 228 5 is_stmt 1 view .LVU1348
 5347 001a FFF7FEFF 		bl	Error_Handler
 5348              	.LVL440:
 5349              	.L362:
 5350 001e 00BF     		.align	2
 5351              	.L361:
 5352 0020 00000000 		.word	.LANCHOR10
 5353 0024 00300040 		.word	1073754112
 5354              		.cfi_endproc
 5355              	.LFE128:
 5357              		.section	.text.MX_TIM2_Init,"ax",%progbits
 5358              		.align	1
 5359              		.syntax unified
 5360              		.thumb
 5361              		.thumb_func
 5363              	MX_TIM2_Init:
 5364              	.LFB131:
 407:Core/Src/main.c **** 
 5365              		.loc 2 407 1 view -0
 5366              		.cfi_startproc
 5367              		@ args = 0, pretend = 0, frame = 56
 5368              		@ frame_needed = 0, uses_anonymous_args = 0
 5369 0000 00B5     		push	{lr}
 5370              	.LCFI101:
 5371              		.cfi_def_cfa_offset 4
 5372              		.cfi_offset 14, -4
 5373 0002 8FB0     		sub	sp, sp, #60
 5374              	.LCFI102:
 5375              		.cfi_def_cfa_offset 64
 413:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 5376              		.loc 2 413 3 view .LVU1350
 413:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 5377              		.loc 2 413 26 is_stmt 0 view .LVU1351
 5378 0004 0023     		movs	r3, #0
 5379 0006 0A93     		str	r3, [sp, #40]
 5380 0008 0B93     		str	r3, [sp, #44]
 5381 000a 0C93     		str	r3, [sp, #48]
 5382 000c 0D93     		str	r3, [sp, #52]
 414:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 5383              		.loc 2 414 3 is_stmt 1 view .LVU1352
 414:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 5384              		.loc 2 414 27 is_stmt 0 view .LVU1353
 5385 000e 0893     		str	r3, [sp, #32]
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 136


 5386 0010 0993     		str	r3, [sp, #36]
 415:Core/Src/main.c **** 
 5387              		.loc 2 415 3 is_stmt 1 view .LVU1354
 415:Core/Src/main.c **** 
 5388              		.loc 2 415 22 is_stmt 0 view .LVU1355
 5389 0012 0193     		str	r3, [sp, #4]
 5390 0014 0293     		str	r3, [sp, #8]
 5391 0016 0393     		str	r3, [sp, #12]
 5392 0018 0493     		str	r3, [sp, #16]
 5393 001a 0593     		str	r3, [sp, #20]
 5394 001c 0693     		str	r3, [sp, #24]
 5395 001e 0793     		str	r3, [sp, #28]
 420:Core/Src/main.c ****   htim2.Init.Prescaler = 200;
 5396              		.loc 2 420 3 is_stmt 1 view .LVU1356
 420:Core/Src/main.c ****   htim2.Init.Prescaler = 200;
 5397              		.loc 2 420 18 is_stmt 0 view .LVU1357
 5398 0020 1E48     		ldr	r0, .L375
 5399 0022 4FF08042 		mov	r2, #1073741824
 5400 0026 0260     		str	r2, [r0]
 421:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 5401              		.loc 2 421 3 is_stmt 1 view .LVU1358
 421:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 5402              		.loc 2 421 24 is_stmt 0 view .LVU1359
 5403 0028 C822     		movs	r2, #200
 5404 002a 4260     		str	r2, [r0, #4]
 422:Core/Src/main.c ****   htim2.Init.Period = 29800;
 5405              		.loc 2 422 3 is_stmt 1 view .LVU1360
 422:Core/Src/main.c ****   htim2.Init.Period = 29800;
 5406              		.loc 2 422 26 is_stmt 0 view .LVU1361
 5407 002c 8360     		str	r3, [r0, #8]
 423:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 5408              		.loc 2 423 3 is_stmt 1 view .LVU1362
 423:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV4;
 5409              		.loc 2 423 21 is_stmt 0 view .LVU1363
 5410 002e 47F26843 		movw	r3, #29800
 5411 0032 C360     		str	r3, [r0, #12]
 424:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 5412              		.loc 2 424 3 is_stmt 1 view .LVU1364
 424:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 5413              		.loc 2 424 28 is_stmt 0 view .LVU1365
 5414 0034 4FF40073 		mov	r3, #512
 5415 0038 0361     		str	r3, [r0, #16]
 425:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 5416              		.loc 2 425 3 is_stmt 1 view .LVU1366
 425:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 5417              		.loc 2 425 32 is_stmt 0 view .LVU1367
 5418 003a 8023     		movs	r3, #128
 5419 003c 8361     		str	r3, [r0, #24]
 426:Core/Src/main.c ****   {
 5420              		.loc 2 426 3 is_stmt 1 view .LVU1368
 426:Core/Src/main.c ****   {
 5421              		.loc 2 426 7 is_stmt 0 view .LVU1369
 5422 003e FFF7FEFF 		bl	HAL_TIM_Base_Init
 5423              	.LVL441:
 426:Core/Src/main.c ****   {
 5424              		.loc 2 426 6 view .LVU1370
 5425 0042 00BB     		cbnz	r0, .L370
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 137


 430:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 5426              		.loc 2 430 3 is_stmt 1 view .LVU1371
 430:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 5427              		.loc 2 430 34 is_stmt 0 view .LVU1372
 5428 0044 4FF48053 		mov	r3, #4096
 5429 0048 0A93     		str	r3, [sp, #40]
 431:Core/Src/main.c ****   {
 5430              		.loc 2 431 3 is_stmt 1 view .LVU1373
 431:Core/Src/main.c ****   {
 5431              		.loc 2 431 7 is_stmt 0 view .LVU1374
 5432 004a 0AA9     		add	r1, sp, #40
 5433 004c 1348     		ldr	r0, .L375
 5434 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 5435              	.LVL442:
 431:Core/Src/main.c ****   {
 5436              		.loc 2 431 6 view .LVU1375
 5437 0052 D0B9     		cbnz	r0, .L371
 435:Core/Src/main.c ****   {
 5438              		.loc 2 435 3 is_stmt 1 view .LVU1376
 435:Core/Src/main.c ****   {
 5439              		.loc 2 435 7 is_stmt 0 view .LVU1377
 5440 0054 1148     		ldr	r0, .L375
 5441 0056 FFF7FEFF 		bl	HAL_TIM_OC_Init
 5442              	.LVL443:
 435:Core/Src/main.c ****   {
 5443              		.loc 2 435 6 view .LVU1378
 5444 005a C0B9     		cbnz	r0, .L372
 439:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 5445              		.loc 2 439 3 is_stmt 1 view .LVU1379
 439:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 5446              		.loc 2 439 37 is_stmt 0 view .LVU1380
 5447 005c 0023     		movs	r3, #0
 5448 005e 0893     		str	r3, [sp, #32]
 440:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 5449              		.loc 2 440 3 is_stmt 1 view .LVU1381
 440:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 5450              		.loc 2 440 33 is_stmt 0 view .LVU1382
 5451 0060 0993     		str	r3, [sp, #36]
 441:Core/Src/main.c ****   {
 5452              		.loc 2 441 3 is_stmt 1 view .LVU1383
 441:Core/Src/main.c ****   {
 5453              		.loc 2 441 7 is_stmt 0 view .LVU1384
 5454 0062 08A9     		add	r1, sp, #32
 5455 0064 0D48     		ldr	r0, .L375
 5456 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 5457              	.LVL444:
 441:Core/Src/main.c ****   {
 5458              		.loc 2 441 6 view .LVU1385
 5459 006a 90B9     		cbnz	r0, .L373
 445:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 5460              		.loc 2 445 3 is_stmt 1 view .LVU1386
 445:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 5461              		.loc 2 445 20 is_stmt 0 view .LVU1387
 5462 006c 0022     		movs	r2, #0
 5463 006e 0192     		str	r2, [sp, #4]
 446:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 5464              		.loc 2 446 3 is_stmt 1 view .LVU1388
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 138


 446:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 5465              		.loc 2 446 19 is_stmt 0 view .LVU1389
 5466 0070 0292     		str	r2, [sp, #8]
 447:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 5467              		.loc 2 447 3 is_stmt 1 view .LVU1390
 447:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 5468              		.loc 2 447 24 is_stmt 0 view .LVU1391
 5469 0072 0392     		str	r2, [sp, #12]
 448:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 5470              		.loc 2 448 3 is_stmt 1 view .LVU1392
 448:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 5471              		.loc 2 448 24 is_stmt 0 view .LVU1393
 5472 0074 0592     		str	r2, [sp, #20]
 449:Core/Src/main.c ****   {
 5473              		.loc 2 449 3 is_stmt 1 view .LVU1394
 449:Core/Src/main.c ****   {
 5474              		.loc 2 449 7 is_stmt 0 view .LVU1395
 5475 0076 01A9     		add	r1, sp, #4
 5476 0078 0848     		ldr	r0, .L375
 5477 007a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 5478              	.LVL445:
 449:Core/Src/main.c ****   {
 5479              		.loc 2 449 6 view .LVU1396
 5480 007e 50B9     		cbnz	r0, .L374
 457:Core/Src/main.c **** 
 5481              		.loc 2 457 1 view .LVU1397
 5482 0080 0FB0     		add	sp, sp, #60
 5483              	.LCFI103:
 5484              		.cfi_remember_state
 5485              		.cfi_def_cfa_offset 4
 5486              		@ sp needed
 5487 0082 5DF804FB 		ldr	pc, [sp], #4
 5488              	.L370:
 5489              	.LCFI104:
 5490              		.cfi_restore_state
 428:Core/Src/main.c ****   }
 5491              		.loc 2 428 5 is_stmt 1 view .LVU1398
 5492 0086 FFF7FEFF 		bl	Error_Handler
 5493              	.LVL446:
 5494              	.L371:
 433:Core/Src/main.c ****   }
 5495              		.loc 2 433 5 view .LVU1399
 5496 008a FFF7FEFF 		bl	Error_Handler
 5497              	.LVL447:
 5498              	.L372:
 437:Core/Src/main.c ****   }
 5499              		.loc 2 437 5 view .LVU1400
 5500 008e FFF7FEFF 		bl	Error_Handler
 5501              	.LVL448:
 5502              	.L373:
 443:Core/Src/main.c ****   }
 5503              		.loc 2 443 5 view .LVU1401
 5504 0092 FFF7FEFF 		bl	Error_Handler
 5505              	.LVL449:
 5506              	.L374:
 451:Core/Src/main.c ****   }
 5507              		.loc 2 451 5 view .LVU1402
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 139


 5508 0096 FFF7FEFF 		bl	Error_Handler
 5509              	.LVL450:
 5510              	.L376:
 5511 009a 00BF     		.align	2
 5512              	.L375:
 5513 009c 00000000 		.word	.LANCHOR12
 5514              		.cfi_endproc
 5515              	.LFE131:
 5517              		.section	.text.SystemClock_Config,"ax",%progbits
 5518              		.align	1
 5519              		.global	SystemClock_Config
 5520              		.syntax unified
 5521              		.thumb
 5522              		.thumb_func
 5524              	SystemClock_Config:
 5525              	.LFB126:
 129:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 5526              		.loc 2 129 1 view -0
 5527              		.cfi_startproc
 5528              		@ args = 0, pretend = 0, frame = 88
 5529              		@ frame_needed = 0, uses_anonymous_args = 0
 5530 0000 00B5     		push	{lr}
 5531              	.LCFI105:
 5532              		.cfi_def_cfa_offset 4
 5533              		.cfi_offset 14, -4
 5534 0002 97B0     		sub	sp, sp, #92
 5535              	.LCFI106:
 5536              		.cfi_def_cfa_offset 96
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 5537              		.loc 2 130 3 view .LVU1404
 130:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 5538              		.loc 2 130 22 is_stmt 0 view .LVU1405
 5539 0004 2822     		movs	r2, #40
 5540 0006 0021     		movs	r1, #0
 5541 0008 0CA8     		add	r0, sp, #48
 5542 000a FFF7FEFF 		bl	memset
 5543              	.LVL451:
 131:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 5544              		.loc 2 131 3 is_stmt 1 view .LVU1406
 131:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 5545              		.loc 2 131 22 is_stmt 0 view .LVU1407
 5546 000e 0023     		movs	r3, #0
 5547 0010 0793     		str	r3, [sp, #28]
 5548 0012 0893     		str	r3, [sp, #32]
 5549 0014 0993     		str	r3, [sp, #36]
 5550 0016 0A93     		str	r3, [sp, #40]
 5551 0018 0B93     		str	r3, [sp, #44]
 132:Core/Src/main.c **** 
 5552              		.loc 2 132 3 is_stmt 1 view .LVU1408
 132:Core/Src/main.c **** 
 5553              		.loc 2 132 28 is_stmt 0 view .LVU1409
 5554 001a 0193     		str	r3, [sp, #4]
 5555 001c 0293     		str	r3, [sp, #8]
 5556 001e 0393     		str	r3, [sp, #12]
 5557 0020 0493     		str	r3, [sp, #16]
 5558 0022 0593     		str	r3, [sp, #20]
 5559 0024 0693     		str	r3, [sp, #24]
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 140


 137:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 5560              		.loc 2 137 3 is_stmt 1 view .LVU1410
 137:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 5561              		.loc 2 137 36 is_stmt 0 view .LVU1411
 5562 0026 0D23     		movs	r3, #13
 5563 0028 0C93     		str	r3, [sp, #48]
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 5564              		.loc 2 139 3 is_stmt 1 view .LVU1412
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 5565              		.loc 2 139 30 is_stmt 0 view .LVU1413
 5566 002a 4FF48032 		mov	r2, #65536
 5567 002e 0D92     		str	r2, [sp, #52]
 140:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 5568              		.loc 2 140 3 is_stmt 1 view .LVU1414
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 5569              		.loc 2 141 3 view .LVU1415
 141:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 5570              		.loc 2 141 30 is_stmt 0 view .LVU1416
 5571 0030 0123     		movs	r3, #1
 5572 0032 0F93     		str	r3, [sp, #60]
 142:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 5573              		.loc 2 142 3 is_stmt 1 view .LVU1417
 142:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 5574              		.loc 2 142 30 is_stmt 0 view .LVU1418
 5575 0034 1093     		str	r3, [sp, #64]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 5576              		.loc 2 143 3 is_stmt 1 view .LVU1419
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 5577              		.loc 2 143 30 is_stmt 0 view .LVU1420
 5578 0036 1293     		str	r3, [sp, #72]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 5579              		.loc 2 144 3 is_stmt 1 view .LVU1421
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 5580              		.loc 2 144 34 is_stmt 0 view .LVU1422
 5581 0038 0223     		movs	r3, #2
 5582 003a 1393     		str	r3, [sp, #76]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 5583              		.loc 2 145 3 is_stmt 1 view .LVU1423
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 5584              		.loc 2 145 35 is_stmt 0 view .LVU1424
 5585 003c 1492     		str	r2, [sp, #80]
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 5586              		.loc 2 146 3 is_stmt 1 view .LVU1425
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 5587              		.loc 2 146 32 is_stmt 0 view .LVU1426
 5588 003e 4FF48013 		mov	r3, #1048576
 5589 0042 1593     		str	r3, [sp, #84]
 147:Core/Src/main.c ****   {
 5590              		.loc 2 147 3 is_stmt 1 view .LVU1427
 147:Core/Src/main.c ****   {
 5591              		.loc 2 147 7 is_stmt 0 view .LVU1428
 5592 0044 0CA8     		add	r0, sp, #48
 5593 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 5594              	.LVL452:
 147:Core/Src/main.c ****   {
 5595              		.loc 2 147 6 view .LVU1429
 5596 004a E8B9     		cbnz	r0, .L382
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 141


 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 5597              		.loc 2 154 3 is_stmt 1 view .LVU1430
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 5598              		.loc 2 154 31 is_stmt 0 view .LVU1431
 5599 004c 0F23     		movs	r3, #15
 5600 004e 0793     		str	r3, [sp, #28]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 5601              		.loc 2 156 3 is_stmt 1 view .LVU1432
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 5602              		.loc 2 156 34 is_stmt 0 view .LVU1433
 5603 0050 0223     		movs	r3, #2
 5604 0052 0893     		str	r3, [sp, #32]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 5605              		.loc 2 157 3 is_stmt 1 view .LVU1434
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 5606              		.loc 2 157 35 is_stmt 0 view .LVU1435
 5607 0054 0023     		movs	r3, #0
 5608 0056 0993     		str	r3, [sp, #36]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 5609              		.loc 2 158 3 is_stmt 1 view .LVU1436
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 5610              		.loc 2 158 36 is_stmt 0 view .LVU1437
 5611 0058 4FF48062 		mov	r2, #1024
 5612 005c 0A92     		str	r2, [sp, #40]
 159:Core/Src/main.c **** 
 5613              		.loc 2 159 3 is_stmt 1 view .LVU1438
 159:Core/Src/main.c **** 
 5614              		.loc 2 159 36 is_stmt 0 view .LVU1439
 5615 005e 0B93     		str	r3, [sp, #44]
 161:Core/Src/main.c ****   {
 5616              		.loc 2 161 3 is_stmt 1 view .LVU1440
 161:Core/Src/main.c ****   {
 5617              		.loc 2 161 7 is_stmt 0 view .LVU1441
 5618 0060 0121     		movs	r1, #1
 5619 0062 07A8     		add	r0, sp, #28
 5620 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 5621              	.LVL453:
 161:Core/Src/main.c ****   {
 5622              		.loc 2 161 6 view .LVU1442
 5623 0068 80B9     		cbnz	r0, .L383
 165:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 5624              		.loc 2 165 3 is_stmt 1 view .LVU1443
 165:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 5625              		.loc 2 165 38 is_stmt 0 view .LVU1444
 5626 006a 1123     		movs	r3, #17
 5627 006c 0193     		str	r3, [sp, #4]
 166:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 5628              		.loc 2 166 3 is_stmt 1 view .LVU1445
 166:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 5629              		.loc 2 166 35 is_stmt 0 view .LVU1446
 5630 006e 4FF48073 		mov	r3, #256
 5631 0072 0293     		str	r3, [sp, #8]
 167:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 5632              		.loc 2 167 3 is_stmt 1 view .LVU1447
 167:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 5633              		.loc 2 167 35 is_stmt 0 view .LVU1448
 5634 0074 4FF48003 		mov	r3, #4194304
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 142


 5635 0078 0693     		str	r3, [sp, #24]
 168:Core/Src/main.c ****   {
 5636              		.loc 2 168 3 is_stmt 1 view .LVU1449
 168:Core/Src/main.c ****   {
 5637              		.loc 2 168 7 is_stmt 0 view .LVU1450
 5638 007a 01A8     		add	r0, sp, #4
 5639 007c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 5640              	.LVL454:
 168:Core/Src/main.c ****   {
 5641              		.loc 2 168 6 view .LVU1451
 5642 0080 30B9     		cbnz	r0, .L384
 172:Core/Src/main.c **** 
 5643              		.loc 2 172 1 view .LVU1452
 5644 0082 17B0     		add	sp, sp, #92
 5645              	.LCFI107:
 5646              		.cfi_remember_state
 5647              		.cfi_def_cfa_offset 4
 5648              		@ sp needed
 5649 0084 5DF804FB 		ldr	pc, [sp], #4
 5650              	.L382:
 5651              	.LCFI108:
 5652              		.cfi_restore_state
 149:Core/Src/main.c ****   }
 5653              		.loc 2 149 5 is_stmt 1 view .LVU1453
 5654 0088 FFF7FEFF 		bl	Error_Handler
 5655              	.LVL455:
 5656              	.L383:
 163:Core/Src/main.c ****   }
 5657              		.loc 2 163 5 view .LVU1454
 5658 008c FFF7FEFF 		bl	Error_Handler
 5659              	.LVL456:
 5660              	.L384:
 170:Core/Src/main.c ****   }
 5661              		.loc 2 170 5 view .LVU1455
 5662 0090 FFF7FEFF 		bl	Error_Handler
 5663              	.LVL457:
 5664              		.cfi_endproc
 5665              	.LFE126:
 5667              		.section	.text.main,"ax",%progbits
 5668              		.align	1
 5669              		.global	main
 5670              		.syntax unified
 5671              		.thumb
 5672              		.thumb_func
 5674              	main:
 5675              	.LFB125:
  79:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 5676              		.loc 2 79 1 view -0
 5677              		.cfi_startproc
 5678              		@ Volatile: function does not return.
 5679              		@ args = 0, pretend = 0, frame = 0
 5680              		@ frame_needed = 0, uses_anonymous_args = 0
 5681 0000 08B5     		push	{r3, lr}
 5682              	.LCFI109:
 5683              		.cfi_def_cfa_offset 8
 5684              		.cfi_offset 3, -8
 5685              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 143


  87:Core/Src/main.c **** 
 5686              		.loc 2 87 3 view .LVU1457
 5687 0002 FFF7FEFF 		bl	HAL_Init
 5688              	.LVL458:
  94:Core/Src/main.c **** 
 5689              		.loc 2 94 3 view .LVU1458
 5690 0006 FFF7FEFF 		bl	SystemClock_Config
 5691              	.LVL459:
 101:Core/Src/main.c ****   MX_RTC_Init();
 5692              		.loc 2 101 3 view .LVU1459
 5693 000a FFF7FEFF 		bl	MX_GPIO_Init
 5694              	.LVL460:
 102:Core/Src/main.c ****   MX_TIM1_Init();
 5695              		.loc 2 102 3 view .LVU1460
 5696 000e FFF7FEFF 		bl	MX_RTC_Init
 5697              	.LVL461:
 103:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 5698              		.loc 2 103 3 view .LVU1461
 5699 0012 FFF7FEFF 		bl	MX_TIM1_Init
 5700              	.LVL462:
 104:Core/Src/main.c ****   MX_I2C2_Init();
 5701              		.loc 2 104 3 view .LVU1462
 5702 0016 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 5703              	.LVL463:
 105:Core/Src/main.c ****   MX_IWDG_Init();
 5704              		.loc 2 105 3 view .LVU1463
 5705 001a FFF7FEFF 		bl	MX_I2C2_Init
 5706              	.LVL464:
 106:Core/Src/main.c ****   MX_TIM2_Init();
 5707              		.loc 2 106 3 view .LVU1464
 5708 001e FFF7FEFF 		bl	MX_IWDG_Init
 5709              	.LVL465:
 107:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 5710              		.loc 2 107 3 view .LVU1465
 5711 0022 FFF7FEFF 		bl	MX_TIM2_Init
 5712              	.LVL466:
 109:Core/Src/main.c ****   /* USER CODE END 2 */
 5713              		.loc 2 109 1 view .LVU1466
 5714 0026 FFF7FEFF 		bl	user_init
 5715              	.LVL467:
 114:Core/Src/main.c ****   {
 5716              		.loc 2 114 3 view .LVU1467
 119:Core/Src/main.c ****   }
 5717              		.loc 2 119 2 view .LVU1468
 5718 002a FFF7FEFF 		bl	user_loop
 5719              	.LVL468:
 5720              		.cfi_endproc
 5721              	.LFE125:
 5723              		.global	htim2
 5724              		.global	htim1
 5725              		.global	hrtc
 5726              		.global	hiwdg
 5727              		.global	hi2c2
 5728              		.global	mode_delay
 5729              		.global	start_minutes
 5730              		.global	start_hour
 5731              		.global	mode
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 144


 5732              		.global	old_buttons
 5733              		.global	buttons
 5734              		.global	seconds
 5735              		.global	cc
 5736              		.global	testas
 5737              		.global	bootsecons
 5738              		.global	invertuotas
 5739              		.global	chartable
 5740              		.global	oled_line
 5741              		.global	font
 5742              		.global	LastHour
 5743              		.global	oldTime
 5744              		.global	currTime
 5745              		.section	.rodata
 5746              		.align	2
 5747              		.set	.LANCHOR15,. + 0
 5748              	.LC1:
 5749 0000 0000E7E7 		.ascii	"\000\000\347\347\347\347\000\000"
 5749      E7E70000 
 5750              		.section	.bss.bootsecons,"aw",%nobits
 5751              		.align	2
 5752              		.set	.LANCHOR13,. + 0
 5755              	bootsecons:
 5756 0000 00000000 		.space	4
 5757              		.section	.bss.buttons,"aw",%nobits
 5758              		.set	.LANCHOR14,. + 0
 5761              	buttons:
 5762 0000 00       		.space	1
 5763              		.section	.bss.cc,"aw",%nobits
 5764              		.align	2
 5765              		.set	.LANCHOR8,. + 0
 5768              	cc:
 5769 0000 00000000 		.space	20
 5769      00000000 
 5769      00000000 
 5769      00000000 
 5769      00000000 
 5770              		.section	.bss.currTime,"aw",%nobits
 5771              		.align	2
 5772              		.set	.LANCHOR2,. + 0
 5775              	currTime:
 5776 0000 000000   		.space	3
 5777              		.section	.bss.hi2c2,"aw",%nobits
 5778              		.align	2
 5779              		.set	.LANCHOR0,. + 0
 5782              	hi2c2:
 5783 0000 00000000 		.space	84
 5783      00000000 
 5783      00000000 
 5783      00000000 
 5783      00000000 
 5784              		.section	.bss.hiwdg,"aw",%nobits
 5785              		.align	2
 5786              		.set	.LANCHOR10,. + 0
 5789              	hiwdg:
 5790 0000 00000000 		.space	12
 5790      00000000 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 145


 5790      00000000 
 5791              		.section	.bss.hrtc,"aw",%nobits
 5792              		.align	2
 5793              		.set	.LANCHOR3,. + 0
 5796              	hrtc:
 5797 0000 00000000 		.space	20
 5797      00000000 
 5797      00000000 
 5797      00000000 
 5797      00000000 
 5798              		.section	.bss.htim1,"aw",%nobits
 5799              		.align	2
 5800              		.set	.LANCHOR11,. + 0
 5803              	htim1:
 5804 0000 00000000 		.space	72
 5804      00000000 
 5804      00000000 
 5804      00000000 
 5804      00000000 
 5805              		.section	.bss.htim2,"aw",%nobits
 5806              		.align	2
 5807              		.set	.LANCHOR12,. + 0
 5810              	htim2:
 5811 0000 00000000 		.space	72
 5811      00000000 
 5811      00000000 
 5811      00000000 
 5811      00000000 
 5812              		.section	.bss.invertuotas,"aw",%nobits
 5815              	invertuotas:
 5816 0000 00       		.space	1
 5817              		.section	.bss.mode,"aw",%nobits
 5818              		.set	.LANCHOR18,. + 0
 5821              	mode:
 5822 0000 00       		.space	1
 5823              		.section	.bss.old_buttons,"aw",%nobits
 5824              		.set	.LANCHOR19,. + 0
 5827              	old_buttons:
 5828 0000 00       		.space	1
 5829              		.section	.bss.oled_line,"aw",%nobits
 5830              		.set	.LANCHOR6,. + 0
 5833              	oled_line:
 5834 0000 00       		.space	1
 5835              		.section	.bss.seconds,"aw",%nobits
 5836              		.set	.LANCHOR16,. + 0
 5839              	seconds:
 5840 0000 00       		.space	1
 5841              		.section	.bss.start_hour,"aw",%nobits
 5842              		.set	.LANCHOR20,. + 0
 5845              	start_hour:
 5846 0000 00       		.space	1
 5847              		.section	.bss.start_minutes,"aw",%nobits
 5848              		.set	.LANCHOR21,. + 0
 5851              	start_minutes:
 5852 0000 00       		.space	1
 5853              		.section	.bss.testas,"aw",%nobits
 5854              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 146


 5855              		.set	.LANCHOR9,. + 0
 5858              	testas:
 5859 0000 00000000 		.space	64
 5859      00000000 
 5859      00000000 
 5859      00000000 
 5859      00000000 
 5860              		.section	.data.LastHour,"aw"
 5863              	LastHour:
 5864 0000 FF       		.byte	-1
 5865              		.section	.data.font,"aw"
 5866              		.align	2
 5867              		.set	.LANCHOR5,. + 0
 5870              	font:
 5871 0000 003E7F41 		.ascii	"\000>\177AMO.\000\000 tTT|x\000\000~~HHx0\000\0008|"
 5871      4D4F2E00 
 5871      00207454 
 5871      547C7800 
 5871      007E7E48 
 5872 001b 44444400 		.ascii	"DDD\000\000\0000xHH~~\000\0008|TT\\\030\000\000\000"
 5872      00003078 
 5872      48487E7E 
 5872      0000387C 
 5872      54545C18 
 5873 0032 087C7E0A 		.ascii	"\010|~\012\012\000\000\230\274\244\244\374|\000\000"
 5873      0A000098 
 5873      BCA4A4FC 
 5873      7C0000
 5874 0041 7E7E0808 		.ascii	"~~\010\010xp\000\000\000Hzz@\000\000\000\000\200\200"
 5874      78700000 
 5874      00487A7A 
 5874      40000000 
 5874      008080
 5875 0054 80FA7A00 		.ascii	"\200\372z\000\000~~\0208h@\000\000\000B~~@\000\000\000"
 5875      007E7E10 
 5875      38684000 
 5875      0000427E 
 5875      7E400000 
 5876 0069 7C7C1838 		.ascii	"||\0308\034|x\000||\004\004|x\000\0008|DD|8\000\000"
 5876      1C7C7800 
 5876      7C7C0404 
 5876      7C780000 
 5876      387C4444 
 5877 0081 FCFC2424 		.ascii	"\374\374$$<\030\000\000\030<$$\374\374\000\000||\004"
 5877      3C180000 
 5877      183C2424 
 5877      FCFC0000 
 5877      7C7C04
 5878 0094 040C0800 		.ascii	"\004\014\010\000\000H\\TTt$\000\000\004\004>~DD\000"
 5878      00485C54 
 5878      54742400 
 5878      0004043E 
 5878      7E444400 
 5879 00a8 003C7C40 		.ascii	"\000<|@@||\000\000\034<``<\034\000\000\034|p8p|\034"
 5879      407C7C00 
 5879      001C3C60 
 5879      603C1C00 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 147


 5879      001C7C70 
 5880 00c0 00446C38 		.ascii	"\000Dl88lD\000\000\234\274\240\340|<\000\000Ddt\\LD"
 5880      386C4400 
 5880      009CBCA0 
 5880      E07C3C00 
 5880      00446474 
 5881 00d7 0000007F 		.ascii	"\000\000\000\177\177AA\000\000@h|^II\"\000\000\000A"
 5881      7F414100 
 5881      0040687C 
 5881      5E494922 
 5881      00000041 
 5882 00eb 417F7F00 		.ascii	"A\177\177\000\000\000\010\014\376\376\014\010\000\000"
 5882      0000080C 
 5882      FEFE0C08 
 5882      0000
 5883 00f9 183C7E18 		.ascii	"\030<~\030\030\030\030\000\000\000\000\000\000\000\000"
 5883      18181800 
 5883      00000000 
 5883      000000
 5884 0108 0000004F 		.ascii	"\000\000\000OO\000\000\000\000\007\007\000\000\007\007"
 5884      4F000000 
 5884      00070700 
 5884      000707
 5885 0117 00147F7F 		.ascii	"\000\024\177\177\024\024\177\177\024\000$.kk:\022\000"
 5885      14147F7F 
 5885      1400242E 
 5885      6B6B3A12 
 5885      00
 5886 0128 00633318 		.ascii	"\000c3\030\014fc\000\0002\177MMwrP\000\000\000\004\006"
 5886      0C666300 
 5886      00327F4D 
 5886      4D777250 
 5886      00000004 
 5887 013d 03010000 		.ascii	"\003\001\000\000\000\034>cA\000\000\000\000Ac>\034\000"
 5887      001C3E63 
 5887      41000000 
 5887      0041633E 
 5887      1C00
 5888 014f 00082A3E 		.ascii	"\000\010*>\034\034>*\010\000\010\010>>\010\010\000\000"
 5888      1C1C3E2A 
 5888      08000808 
 5888      3E3E0808 
 5888      0000
 5889 0161 0080E060 		.ascii	"\000\200\340`\000\000\000\000\010\010\010\010\010\010"
 5889      00000000 
 5889      08080808 
 5889      0808
 5890 016f 00000000 		.ascii	"\000\000\000\000``\000\000\000\000@`0\030\014\006\002"
 5890      60600000 
 5890      00004060 
 5890      30180C06 
 5890      02
 5891 0180 003E7F49 		.ascii	"\000>\177IE\177>\000\000@D\177\177@@\000\000bsQIOF\000"
 5891      457F3E00 
 5891      0040447F 
 5891      7F404000 
 5891      00627351 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 148


 5892 0198 00226349 		.ascii	"\000\"cII\1776\000\000\030\030\024\026\177\177\020\000"
 5892      497F3600 
 5892      00181814 
 5892      167F7F10 
 5892      00
 5893 01a9 27674545 		.ascii	"'gEE}9\000\000>\177II{2\000\000\003\003y}\007\003\000"
 5893      7D390000 
 5893      3E7F4949 
 5893      7B320000 
 5893      0303797D 
 5894 01c0 00367F49 		.ascii	"\0006\177II\1776\000\000&oII\177>\000\000\000\000$$"
 5894      497F3600 
 5894      00266F49 
 5894      497F3E00 
 5894      00000024 
 5895 01d5 00000000 		.ascii	"\000\000\000\000\000\200\344d\000\000\000\000\010\034"
 5895      0080E464 
 5895      00000000 
 5895      081C
 5896 01e3 36634141 		.ascii	"6cAA\000\000\024\024\024\024\024\024\000\000AAc6\034"
 5896      00001414 
 5896      14141414 
 5896      00004141 
 5896      63361C
 5897 01f6 08000002 		.ascii	"\010\000\000\002\003QY\017\006\000\030\030\030\030\030"
 5897      0351590F 
 5897      06001818 
 5897      181818
 5898 0205 18181800 		.ascii	"\030\030\030\000|~\013\013~|\000\000\177\177II\1776"
 5898      7C7E0B0B 
 5898      7E7C0000 
 5898      7F7F4949 
 5898      7F36
 5899 0217 00003E7F 		.ascii	"\000\000>\177AAc\"\000\000\177\177Ac>\034\000\000\177"
 5899      41416322 
 5899      00007F7F 
 5899      41633E1C 
 5899      00007F
 5900 022a 7F494941 		.ascii	"\177IIAA\000\000\177\177\011\011\001\001\000\000>\177"
 5900      4100007F 
 5900      7F090901 
 5900      0100003E 
 5900      7F
 5901 023b 41497B3A 		.ascii	"AI{:\000\000\177\177\010\010\177\177\000\000\000A\177"
 5901      00007F7F 
 5901      08087F7F 
 5901      00000041 
 5901      7F
 5902 024c 7F410000 		.ascii	"\177A\000\000\000 `A\177?\001\000\000\177\177\0346c"
 5902      00206041 
 5902      7F3F0100 
 5902      007F7F1C 
 5902      3663
 5903 025e 4100007F 		.ascii	"A\000\000\177\177@@@@\000\000\177\177\006\014\006\177"
 5903      7F404040 
 5903      4000007F 
 5903      7F060C06 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 149


 5903      7F
 5904 026f 7F007F7F 		.ascii	"\177\000\177\177\016\034\177\177\000\000>\177AA\177"
 5904      0E1C7F7F 
 5904      00003E7F 
 5904      41417F
 5905 027e 3E00007F 		.ascii	">\000\000\177\177\011\011\017\006\000\000\036?!a\177"
 5905      7F09090F 
 5905      0600001E 
 5905      3F21617F 
 5906 028e 5E00007F 		.ascii	"^\000\000\177\177\0319oF\000\000&oII{2\000\000\001\001"
 5906      7F19396F 
 5906      46000026 
 5906      6F49497B 
 5906      32000001 
 5907 02a3 7F7F0101 		.ascii	"\177\177\001\001\000\000?\177@@\177?\000\000\037?``"
 5907      00003F7F 
 5907      40407F3F 
 5907      00001F3F 
 5907      6060
 5908 02b5 3F1F0000 		.ascii	"?\037\000\000\177\1770\0300\177\177\000cw\034\034wc"
 5908      7F7F3018 
 5908      307F7F00 
 5908      63771C1C 
 5908      7763
 5909 02c7 0000070F 		.ascii	"\000\000\007\017xx\017\007\000\000aqYMGC\000\030\030"
 5909      78780F07 
 5909      00006171 
 5909      594D4743 
 5909      001818
 5910 02da 18FFFF18 		.ascii	"\030\377\377\030\030\03033\314\314\000\000\000\000\000"
 5910      18183333 
 5910      CCCC0000 
 5910      000000
 5911 02e9 0000FFFF 		.ascii	"\000\000\377\377\000\000\000\000\000\000\017\017\000"
 5911      00000000 
 5911      00000F0F 
 5911      00
 5912 02f6 00000000 		.ascii	"\000\000\000\000\000\360\360\000\000\000\377\377\377"
 5912      00F0F000 
 5912      0000FFFF 
 5912      FF
 5913 0303 FFFFFFFF 		.ascii	"\377\377\377\377\377\000|~\013\013~|\000\360\360\360"
 5913      FF007C7E 
 5913      0B0B7E7C 
 5913      00F0F0F0 
 5914 0313 F0F0F0F0 		.ascii	"\360\360\360\360\360\001\001\001\001\001\001\001\001"
 5914      F0010101 
 5914      01010101 
 5914      01
 5915 0320 80808080 		.ascii	"\200\200\200\200\200\200\200\200\377\377\000\000\000"
 5915      80808080 
 5915      FFFF0000 
 5915      00
 5916 032d 00000033 		.ascii	"\000\000\00033\314\31433\314\314\000\000\000\000\000"
 5916      33CCCC33 
 5916      33CCCC00 
 5916      00000000 
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 150


 5917 033d 00FFFF30 		.ascii	"\000\377\37700\300\30000\300\3003\231\314f3\231\314"
 5917      30C0C030 
 5917      30C0C033 
 5917      99CC6633 
 5917      99CC
 5918 034f 66000000 		.ascii	"f\000\000\000\000\000\000\377\377\000\000\000\377\377"
 5918      000000FF 
 5918      FF000000 
 5918      FFFF
 5919 035d 18181800 		.ascii	"\030\030\030\000\000\000\000\360\360\360\360\000\000"
 5919      000000F0 
 5919      F0F0F000 
 5919      00
 5920 036a 001F1F18 		.ascii	"\000\037\037\030\030\030\030\030\030\370\370\000\000"
 5920      18181818 
 5920      18F8F800 
 5920      00
 5921 0377 00C0C0C0 		.ascii	"\000\300\300\300\300\300\300\300\300\000\000\000\370"
 5921      C0C0C0C0 
 5921      C0000000 
 5921      F8
 5922 0384 F8181818 		.ascii	"\370\030\030\030\030\030\030\037\037\030\030\030\030"
 5922      1818181F 
 5922      1F181818 
 5922      18
 5923 0391 1818F8F8 		.ascii	"\030\030\370\370\030\030\030\030\030\030\377\377\000"
 5923      18181818 
 5923      1818FFFF 
 5923      00
 5924 039e 0000FFFF 		.ascii	"\000\000\377\377\000\000\000\000\000\000\377\377\377"
 5924      00000000 
 5924      0000FFFF 
 5924      FF
 5925 03ab 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\377\377\377"
 5925      00000000 
 5925      0000FFFF 
 5925      FF
 5926 03b8 03030303 		.ascii	"\003\003\003\003\003\003\003\003\007\007\007\007\007"
 5926      03030303 
 5926      07070707 
 5926      07
 5927 03c5 070707E0 		.ascii	"\007\007\007\340\340\340\340\340\340\340\340\000xx0"
 5927      E0E0E0E0 
 5927      E0E0E000 
 5927      787830
 5928 03d4 180C0603 		.ascii	"\030\014\006\003\360\360\360\360\000\000\000\000\000"
 5928      F0F0F0F0 
 5928      00000000 
 5928      00
 5929 03e1 0000000F 		.ascii	"\000\000\000\017\017\017\017\030\030\030\037\037\000"
 5929      0F0F0F18 
 5929      18181F1F 
 5929      00
 5930 03ee 00000F0F 		.ascii	"\000\000\017\017\017\017\000\000\000\000\017\017\017"
 5930      0F0F0000 
 5930      00000F0F 
 5930      0F
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 151


 5931 03fb 0FF0F0F0 		.ascii	"\017\360\360\360\360"
 5931      F0
 5932              		.section	.data.init1.0,"aw"
 5933              		.align	2
 5934              		.set	.LANCHOR4,. + 0
 5937              	init1.0:
 5938 0000 00AED580 		.ascii	"\000\256\325\200\250\037\323\000@\215\024 \000\241\310"
 5938      A81FD300 
 5938      408D1420 
 5938      00A1C8
 5939 000f DA02818F 		.ascii	"\332\002\201\217\331\361\333@\244\246.\257"
 5939      D9F1DB40 
 5939      A4A62EAF 
 5940              		.section	.data.mode_delay,"aw"
 5941              		.set	.LANCHOR17,. + 0
 5944              	mode_delay:
 5945 0000 1E       		.byte	30
 5946              		.section	.data.oldTime,"aw"
 5947              		.align	2
 5948              		.set	.LANCHOR1,. + 0
 5951              	oldTime:
 5952 0000 FF       		.byte	-1
 5953 0001 FF       		.byte	-1
 5954 0002 FF       		.byte	-1
 5955              		.section	.rodata.chartable,"a"
 5956              		.align	2
 5957              		.set	.LANCHOR7,. + 0
 5960              	chartable:
 5961 0000 100E5D5D 		.ascii	"\020\016]]\015\035 \016 ] \021\020\016\020\035\015\035"
 5961      0D1D200E 
 5961      205D2011 
 5961      100E101D 
 5961      0D1D
 5962 0012 100E2013 		.ascii	"\020\016 \023\015\035__\015\023 ^\020\016\015\016\015"
 5962      0D1D5F5F 
 5962      0D13205E 
 5962      100E0D0E 
 5962      0D
 5963 0023 1D100E0B 		.ascii	"\035\020\016\013\016\015\035\020\016 [ ^\020\016\013"
 5963      0E0D1D10 
 5963      0E205B20 
 5963      5E100E0B 
 5964 0033 130D1D10 		.ascii	"\023\015\035\020\016\015\023\015\035"
 5964      0E0D130D 
 5964      1D
 5965              		.text
 5966              	.Letext0:
 5967              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\machine
 5968              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\sys\\_s
 5969              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 5970              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\lib\\gcc\\arm-none-eabi\\10.3.
 5971              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5972              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 5973              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 5974              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 5975              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5976              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 152


 5977              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 5978              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 5979              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 5980              		.file 20 "Core/Src/USER/circular_buffer.h"
 5981              		.file 21 "Core/Src/USER/oled/font_c64_lower.h"
 5982              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 5983              		.file 23 "Core/Inc/main.h"
 5984              		.file 24 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 5985              		.file 25 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc_ex.h"
 5986              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 5987              		.file 27 "USB_DEVICE/App/usb_device.h"
 5988              		.file 28 "USB_DEVICE/App/usbd_cdc_if.h"
 5989              		.file 29 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\stdlib
 5990              		.file 30 "<built-in>"
 5991              		.file 31 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\string
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 153


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cct42GPL.s:18     .text.SSD1306_present:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:23     .text.SSD1306_present:00000000 SSD1306_present
C:\Users\User\AppData\Local\Temp\cct42GPL.s:62     .text.SSD1306_present:00000018 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:67     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:72     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:207    .text.MX_GPIO_Init:00000090 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:214    .text.rtc_clean:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:220    .text.rtc_clean:00000000 rtc_clean
C:\Users\User\AppData\Local\Temp\cct42GPL.s:244    .text.rtc_clean:0000000c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:249    .text.filter_string:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:255    .text.filter_string:00000000 filter_string
C:\Users\User\AppData\Local\Temp\cct42GPL.s:338    .text.rtc_update:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:344    .text.rtc_update:00000000 rtc_update
C:\Users\User\AppData\Local\Temp\cct42GPL.s:366    .text.rtc_update:00000010 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:372    .text.rtc_time_string:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:378    .text.rtc_time_string:00000000 rtc_time_string
C:\Users\User\AppData\Local\Temp\cct42GPL.s:474    .text.rtc_time_string:00000074 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:481    .text.rtc_date_string:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:487    .text.rtc_date_string:00000000 rtc_date_string
C:\Users\User\AppData\Local\Temp\cct42GPL.s:584    .text.rtc_date_string:00000078 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:590    .text.rtc_backup_date:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:596    .text.rtc_backup_date:00000000 rtc_backup_date
C:\Users\User\AppData\Local\Temp\cct42GPL.s:674    .text.rtc_backup_date:00000058 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:680    .text.rtc_int_init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:686    .text.rtc_int_init:00000000 rtc_int_init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:704    .text.rtc_int_init:00000010 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:709    .text.circle_reset:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:715    .text.circle_reset:00000000 circle_reset
C:\Users\User\AppData\Local\Temp\cct42GPL.s:743    .text.circle_push:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:749    .text.circle_push:00000000 circle_push
C:\Users\User\AppData\Local\Temp\cct42GPL.s:795    .text.circle_pull:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:801    .text.circle_pull:00000000 circle_pull
C:\Users\User\AppData\Local\Temp\cct42GPL.s:850    .text.circle_push_buf:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:856    .text.circle_push_buf:00000000 circle_push_buf
C:\Users\User\AppData\Local\Temp\cct42GPL.s:906    .text.circle_available:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:912    .text.circle_available:00000000 circle_available
C:\Users\User\AppData\Local\Temp\cct42GPL.s:930    .text.circle_free:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:936    .text.circle_free:00000000 circle_free
C:\Users\User\AppData\Local\Temp\cct42GPL.s:957    .text.getRotation:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:963    .text.getRotation:00000000 getRotation
C:\Users\User\AppData\Local\Temp\cct42GPL.s:978    .text.SSD1306_command1:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:984    .text.SSD1306_command1:00000000 SSD1306_command1
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1027   .text.SSD1306_command1:00000024 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1032   .text.SSD1306_sendbuffer:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1038   .text.SSD1306_sendbuffer:00000000 SSD1306_sendbuffer
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1075   .text.SSD1306_sendbuffer:0000001c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1080   .text.SSD1306_write:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1086   .text.SSD1306_write:00000000 SSD1306_write
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1145   .text.SSD1306_write:00000030 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1150   .text.SSD1306_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1156   .text.SSD1306_Init:00000000 SSD1306_Init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1198   .text.SSD1306_Init:00000024 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1203   .text.SSD1306_off:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1209   .text.SSD1306_off:00000000 SSD1306_off
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1230   .text.SSD1306_on:00000000 $t
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 154


C:\Users\User\AppData\Local\Temp\cct42GPL.s:1236   .text.SSD1306_on:00000000 SSD1306_on
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1257   .text.SSD1306_invert:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1263   .text.SSD1306_invert:00000000 SSD1306_invert
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1284   .text.SSD1306_normal:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1290   .text.SSD1306_normal:00000000 SSD1306_normal
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1311   .text.SSD1306_flip:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1317   .text.SSD1306_flip:00000000 SSD1306_flip
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1351   .text.SSD1306_set_addr_mode:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1357   .text.SSD1306_set_addr_mode:00000000 SSD1306_set_addr_mode
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1400   .text.SSD1306_scroll:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1406   .text.SSD1306_scroll:00000000 SSD1306_scroll
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1447   .text.SSD1306_put_tile:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1453   .text.SSD1306_put_tile:00000000 SSD1306_put_tile
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1512   .text.SSD1306_putc_raw:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1518   .text.SSD1306_putc_raw:00000000 SSD1306_putc_raw
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1544   .text.SSD1306_putc_raw:00000010 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1549   .text.SSD1306_putc:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1555   .text.SSD1306_putc:00000000 SSD1306_putc
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1621   .text.SSD1306_move_raw:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1627   .text.SSD1306_move_raw:00000000 SSD1306_move_raw
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1699   .text.SSD1306_move:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1705   .text.SSD1306_move:00000000 SSD1306_move
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1747   .text.SSD1306_home:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1753   .text.SSD1306_home:00000000 SSD1306_home
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1775   .text.SSD1306_clear:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1781   .text.SSD1306_clear:00000000 SSD1306_clear
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1861   .text.SSD1306_clear:00000054 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1866   .text.SSD1306_fill:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1872   .text.SSD1306_fill:00000000 SSD1306_fill
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1986   .text.SSD1306_putxy:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:1992   .text.SSD1306_putxy:00000000 SSD1306_putxy
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2125   .text.SSD1306_puts:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2131   .text.SSD1306_puts:00000000 SSD1306_puts
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2171   .text.SSD1306_bigdigit:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2177   .text.SSD1306_bigdigit:00000000 SSD1306_bigdigit
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2266   .text.SSD1306_bigdigit:00000048 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2271   .text.SSD1306_box:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2277   .text.SSD1306_box:00000000 SSD1306_box
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2444   .text.SSD1306_scroll_print:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2450   .text.SSD1306_scroll_print:00000000 SSD1306_scroll_print
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2522   .text.SSD1306_scroll_print:00000040 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2527   .text.SSD1306_stopscroll:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2533   .text.SSD1306_stopscroll:00000000 SSD1306_stopscroll
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2554   .text.SSD1306_dim:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2560   .text.SSD1306_dim:00000000 SSD1306_dim
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2602   .text.SSD1306_startscrollright:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2608   .text.SSD1306_startscrollright:00000000 SSD1306_startscrollright
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2665   .text.SSD1306_startscrollleft:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2671   .text.SSD1306_startscrollleft:00000000 SSD1306_startscrollleft
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2728   .text.SSD1306_startscrolldiagright:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2734   .text.SSD1306_startscrolldiagright:00000000 SSD1306_startscrolldiagright
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2799   .text.SSD1306_startscrolldiagleft:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2805   .text.SSD1306_startscrolldiagleft:00000000 SSD1306_startscrolldiagleft
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2870   .text.user_usb_rx:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2876   .text.user_usb_rx:00000000 user_usb_rx
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2939   .text.user_usb_rx:00000024 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2944   .rodata.user_init.str1.4:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 155


C:\Users\User\AppData\Local\Temp\cct42GPL.s:2948   .text.user_init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:2954   .text.user_init:00000000 user_init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3104   .text.user_init:000000cc $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3118   .text.ReadPins:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3124   .text.ReadPins:00000000 ReadPins
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3213   .text.ReadPins:0000006c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3219   .text.show_time:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3225   .text.show_time:00000000 show_time
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3447   .text.show_time:0000013c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3460   .text.user_seconds_job:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3466   .text.user_seconds_job:00000000 user_seconds_job
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3504   .text.user_seconds_job:00000028 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3512   .text.HAL_RTCEx_RTCEventCallback:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3518   .text.HAL_RTCEx_RTCEventCallback:00000000 HAL_RTCEx_RTCEventCallback
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3540   .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3556   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3562   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3666   .text.HAL_TIM_PeriodElapsedCallback:0000006c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:3671   .text.HAL_TIM_PeriodElapsedCallback:00000076 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4148   .text.HAL_TIM_PeriodElapsedCallback:00000258 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4167   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4173   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4204   .text.rtc_set_date_text:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4210   .text.rtc_set_date_text:00000000 rtc_set_date_text
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4311   .text.rtc_set_date_text:00000064 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4316   .text.rtc_set_time_text:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4322   .text.rtc_set_time_text:00000000 rtc_set_time_text
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4422   .text.rtc_set_time_text:0000005c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4428   .rodata.commandcom.str1.4:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4432   .text.commandcom:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4438   .text.commandcom:00000000 commandcom
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4471   .text.commandcom:0000001a $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4491   .text.commandcom:0000002e $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4536   .text.commandcom:00000054 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4542   .text.user_loop:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4548   .text.user_loop:00000000 user_loop
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4658   .text.user_loop:00000060 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4664   .text.rtc_check_screwd_calendar:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4670   .text.rtc_check_screwd_calendar:00000000 rtc_check_screwd_calendar
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4823   .text.rtc_check_screwd_calendar:000000b4 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4830   .text.MX_RTC_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:4835   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5007   .text.MX_RTC_Init:000000cc $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5015   .text.MX_TIM1_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5020   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5232   .text.MX_TIM1_Init:000000d8 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5238   .text.MX_I2C2_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5243   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5301   .text.MX_I2C2_Init:0000002c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5308   .text.MX_IWDG_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5313   .text.MX_IWDG_Init:00000000 MX_IWDG_Init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5352   .text.MX_IWDG_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5358   .text.MX_TIM2_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5363   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5513   .text.MX_TIM2_Init:0000009c $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5518   .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5524   .text.SystemClock_Config:00000000 SystemClock_Config
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 156


C:\Users\User\AppData\Local\Temp\cct42GPL.s:5668   .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5674   .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5810   .bss.htim2:00000000 htim2
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5803   .bss.htim1:00000000 htim1
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5796   .bss.hrtc:00000000 hrtc
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5789   .bss.hiwdg:00000000 hiwdg
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5782   .bss.hi2c2:00000000 hi2c2
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5944   .data.mode_delay:00000000 mode_delay
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5851   .bss.start_minutes:00000000 start_minutes
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5845   .bss.start_hour:00000000 start_hour
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5821   .bss.mode:00000000 mode
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5827   .bss.old_buttons:00000000 old_buttons
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5761   .bss.buttons:00000000 buttons
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5839   .bss.seconds:00000000 seconds
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5768   .bss.cc:00000000 cc
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5858   .bss.testas:00000000 testas
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5755   .bss.bootsecons:00000000 bootsecons
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5815   .bss.invertuotas:00000000 invertuotas
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5960   .rodata.chartable:00000000 chartable
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5833   .bss.oled_line:00000000 oled_line
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5870   .data.font:00000000 font
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5863   .data.LastHour:00000000 LastHour
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5951   .data.oldTime:00000000 oldTime
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5775   .bss.currTime:00000000 currTime
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5746   .rodata:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5751   .bss.bootsecons:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5762   .bss.buttons:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5764   .bss.cc:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5771   .bss.currTime:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5778   .bss.hi2c2:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5785   .bss.hiwdg:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5792   .bss.hrtc:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5799   .bss.htim1:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5806   .bss.htim2:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5816   .bss.invertuotas:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5822   .bss.mode:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5828   .bss.old_buttons:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5834   .bss.oled_line:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5840   .bss.seconds:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5846   .bss.start_hour:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5852   .bss.start_minutes:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5854   .bss.testas:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5866   .data.font:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5933   .data.init1.0:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5937   .data.init1.0:00000000 init1.0
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5947   .data.oldTime:00000000 $d
C:\Users\User\AppData\Local\Temp\cct42GPL.s:5956   .rodata.chartable:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_IsDeviceReady
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RTC_GetTime
HAL_RTC_GetDate
HAL_RTCEx_BKUPRead
HAL_RTCEx_BKUPWrite
HAL_I2C_Master_Transmit
ARM GAS  C:\Users\User\AppData\Local\Temp\cct42GPL.s 			page 157


HAL_Delay
malloc
memcpy
free
HAL_IWDG_Refresh
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_GPIO_ReadPin
HAL_GPIO_TogglePin
HAL_RTC_SetTime
strlen
strtok
atoi
HAL_RTC_SetDate
CDC_Transmit_FS
HAL_RTC_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_I2C_Init
HAL_IWDG_Init
HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
