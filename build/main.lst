ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SSD1306_present,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	SSD1306_present:
  24              	.LFB89:
  25              		.file 1 "Core/Src/USER/oled/ssd1306_oled_i2c.c"
   1:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* *****************************************************************************
   2:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * File Name          : ssd1306_oled_i2c.c
   3:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Author             : www.vabolis.lt + kmm CHR(0x40) rmlabs.net
   4:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Version            : V1.2
   5:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Date               : 2020
   6:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * Description        : OLED I2C display module from China
   7:Core/Src/USER/oled/ssd1306_oled_i2c.c **** ********************************************************************************
   8:Core/Src/USER/oled/ssd1306_oled_i2c.c **** * converterted STM32F MCU, compatible with STM32CubeMX, HAL, gcc
   9:Core/Src/USER/oled/ssd1306_oled_i2c.c **** ****************************************************************************** */
  10:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include <stdlib.h>
  11:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include <string.h>
  12:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  13:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  14:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* IC2 handlers from CubeMX */
  15:Core/Src/USER/oled/ssd1306_oled_i2c.c **** extern I2C_HandleTypeDef hi2c2;
  16:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define HI2C &hi2c2
  17:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  18:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* some includes */
  19:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include "ssd1306_oled.h" // configuration number from datasheet
  20:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #include "font_c64_lower.h" // Commodore 64 font
  21:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  22:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  23:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* Configure display: size, voltage, I2C address */
  24:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_ADR 0x78>>1
  25:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_WIDTH 128
  26:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_HEIGHT 32
  27:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  28:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  29:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_VCS SSD1306_SWITCHCAPVCC //all China made modules use internal Vcc
  30:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  31:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  32:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #if SSD1306_HEIGHT == 64
  33:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_MAGIC 7
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 2


  34:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #endif
  35:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #if SSD1306_HEIGHT == 32
  36:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_MAGIC 3 // Page end address
  37:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #endif
  38:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #if SSD1306_HEIGHT == 16
  39:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_MAGIC 1 // Page end address
  40:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   #endif
  41:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  42:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  43:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  44:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  45:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  46:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #if SSD1306_WIDTH == 128 && SSD1306_HEIGHT == 32
  47:Core/Src/USER/oled/ssd1306_oled_i2c.c ****     #define SSD_COMPINS 0x02
  48:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define SSD_CONTRAST 0x8F
  49:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #elif SSD1306_WIDTH == 128 && SSD1306_HEIGHT == 64
  50:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define SSD_COMPINS 0x12
  51:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#if SSD1306_VCS == SSD1306_EXTERNALVCC
  52:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0x9F
  53:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#else
  54:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0xCF
  55:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#endif
  56:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #elif SSD1306_WIDTH == 96 && SSD1306_HEIGHT == 16
  57:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define SSD_COMPINS 0x02
  58:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#if SSD1306_VCS == SSD1306_EXTERNALVCC
  59:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0x10
  60:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#else
  61:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			#define SSD_CONTRAST 0xAF
  62:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		#endif
  63:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #else
  64:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#error "nezinomas ekrnas"
  65:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #endif
  66:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  67:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  68:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #if SSD1306_VCS == SSD1306_EXTERNALVCC
  69:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define CHRPUMP 0x10
  70:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define PRECHARGE 0x22
  71:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #else
  72:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define CHRPUMP 0x14
  73:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	#define PRECHARGE 0xF1
  74:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #endif
  75:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  76:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  77:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  78:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  79:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  80:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  81:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* some crazy stuff from kmm */
  82:Core/Src/USER/oled/ssd1306_oled_i2c.c **** #define SSD1306_swap(a, b)   (((a) ^= (b)), ((b) ^= (a)), ((a) ^= (b))) ///< No-temp-var swap opera
  83:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  84:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  85:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* ******** GLOBALS ****************** */
  86:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char oled_line=0; //holds current text line, used from autoscroll
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char getRotation(void) { return 0;} //for comaptibility
  88:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
  89:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* ********************* I2C blokai = I2C modules ****************** */
  90:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 3


  91:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* send command via i2c to ssd1306. first byte is command/data flag. for I2C only */
  92:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_command1(uint8_t c)
  93:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
  94:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
  95:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[0]=0; // DC=0, CO=0
  96:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=c;
  97:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
  98:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
  99:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 100:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* transmit buffer to device using HAL. First byte in buffer is command/data flag */
 101:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_sendbuffer(uint8_t *c, uint8_t n)
 102:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, c, n,SSD_MAX_DELAY);
 104:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 105:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 106:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* for compatibility with kmm software. Write data or command to i2c device */
 107:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_write(unsigned char dc, unsigned char data)
 108:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 109:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 110:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* copypaste from datasheet:
 111:Core/Src/USER/oled/ssd1306_oled_i2c.c **** A control byte mainly consists of Co and D/C# bits following by six “0” ‘s.
 112:Core/Src/USER/oled/ssd1306_oled_i2c.c **** a. If the Co bit is set as logic “0”, the transmission of the following information will contain
 113:Core/Src/USER/oled/ssd1306_oled_i2c.c **** data bytes only.
 114:Core/Src/USER/oled/ssd1306_oled_i2c.c **** b. The D/C# bit determines the next data byte is acted as a command or a data. If the D/C# bit is
 115:Core/Src/USER/oled/ssd1306_oled_i2c.c **** set to logic “0”, it defines the following data byte as a command. If the D/C# bit is set to
 116:Core/Src/USER/oled/ssd1306_oled_i2c.c **** logic “1”, it defines the following data byte as a data which will be stored at the GDDRAM.
 117:Core/Src/USER/oled/ssd1306_oled_i2c.c **** The GDDRAM column address pointer will be increased by one automatically after each
 118:Core/Src/USER/oled/ssd1306_oled_i2c.c **** data write.
 119:Core/Src/USER/oled/ssd1306_oled_i2c.c **** */
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(dc) {a[0]=0b01000000;} else {a[0]=0;} // ar abu bitai 1?
 121:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 123:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 124:Core/Src/USER/oled/ssd1306_oled_i2c.c **** static char SSD1306_present(void)
 125:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
  26              		.loc 1 125 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 08B5     		push	{r3, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 126:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_StatusTypeDef status = HAL_I2C_IsDeviceReady (HI2C, SSD1306_ADR<<1, 1,SSD_MAX_DELAY);
  35              		.loc 1 126 2 view .LVU1
  36              		.loc 1 126 29 is_stmt 0 view .LVU2
  37 0002 C823     		movs	r3, #200
  38 0004 0122     		movs	r2, #1
  39 0006 7821     		movs	r1, #120
  40 0008 0348     		ldr	r0, .L5
  41 000a FFF7FEFF 		bl	HAL_I2C_IsDeviceReady
  42              	.LVL0:
 127:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(status==HAL_OK) {return 1;}else{return 0;} 
  43              		.loc 1 127 2 is_stmt 1 view .LVU3
  44              		.loc 1 127 4 is_stmt 0 view .LVU4
  45 000e 08B9     		cbnz	r0, .L3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 4


  46              		.loc 1 127 29 view .LVU5
  47 0010 0120     		movs	r0, #1
  48              	.LVL1:
  49              	.L2:
 128:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
  50              		.loc 1 128 1 view .LVU6
  51 0012 08BD     		pop	{r3, pc}
  52              	.LVL2:
  53              	.L3:
 127:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(status==HAL_OK) {return 1;}else{return 0;} 
  54              		.loc 1 127 44 view .LVU7
  55 0014 0020     		movs	r0, #0
  56              	.LVL3:
 127:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(status==HAL_OK) {return 1;}else{return 0;} 
  57              		.loc 1 127 44 view .LVU8
  58 0016 FCE7     		b	.L2
  59              	.L6:
  60              		.align	2
  61              	.L5:
  62 0018 00000000 		.word	.LANCHOR0
  63              		.cfi_endproc
  64              	.LFE89:
  66              		.section	.text.MX_GPIO_Init,"ax",%progbits
  67              		.align	1
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MX_GPIO_Init:
  73              	.LFB129:
  74              		.file 2 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : RTC 9H
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "USER/user.c"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 5


  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** I2C_HandleTypeDef hi2c2;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** IWDG_HandleTypeDef hiwdg;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** RTC_HandleTypeDef hrtc;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** static void MX_GPIO_Init(void);
  59:Core/Src/main.c **** static void MX_RTC_Init(void);
  60:Core/Src/main.c **** static void MX_TIM1_Init(void);
  61:Core/Src/main.c **** static void MX_IWDG_Init(void);
  62:Core/Src/main.c **** static void MX_I2C2_Init(void);
  63:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END PFP */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  68:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 6


  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_RTC_Init();
 101:Core/Src/main.c ****   MX_TIM1_Init();
 102:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 103:Core/Src/main.c ****   MX_IWDG_Init();
 104:Core/Src/main.c ****   MX_I2C2_Init();
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c **** user_init();
 107:Core/Src/main.c ****   /* USER CODE END 2 */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* Infinite loop */
 110:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 111:Core/Src/main.c ****   while (1)
 112:Core/Src/main.c ****   {
 113:Core/Src/main.c ****     /* USER CODE END WHILE */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 116:Core/Src/main.c **** 	user_loop();
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 132:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 133:Core/Src/main.c ****   */
 134:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE
 135:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 138:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 139:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 140:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 7


 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USB;
 163:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 164:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 165:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     Error_Handler();
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c **** }
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /**
 172:Core/Src/main.c ****   * @brief I2C2 Initialization Function
 173:Core/Src/main.c ****   * @param None
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** static void MX_I2C2_Init(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 0 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE END I2C2_Init 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 1 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END I2C2_Init 1 */
 186:Core/Src/main.c ****   hi2c2.Instance = I2C2;
 187:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 188:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 189:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 190:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 191:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 192:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 193:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 194:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 195:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 8


 199:Core/Src/main.c ****   /* USER CODE BEGIN I2C2_Init 2 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* USER CODE END I2C2_Init 2 */
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief IWDG Initialization Function
 207:Core/Src/main.c ****   * @param None
 208:Core/Src/main.c ****   * @retval None
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c **** static void MX_IWDG_Init(void)
 211:Core/Src/main.c **** {
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 0 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END IWDG_Init 0 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 1 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE END IWDG_Init 1 */
 220:Core/Src/main.c ****   hiwdg.Instance = IWDG;
 221:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 222:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 223:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 224:Core/Src/main.c ****   {
 225:Core/Src/main.c ****     Error_Handler();
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   /* USER CODE BEGIN IWDG_Init 2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END IWDG_Init 2 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** }
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief RTC Initialization Function
 235:Core/Src/main.c ****   * @param None
 236:Core/Src/main.c ****   * @retval None
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c **** static void MX_RTC_Init(void)
 239:Core/Src/main.c **** {
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 0 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END RTC_Init 0 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   RTC_TimeTypeDef sTime = {0};
 246:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 1 */
 249:Core/Src/main.c ****   hrtc.Instance = RTC;
 250:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 251:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 252:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
 253:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /** Initialize RTC Only
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 9


 256:Core/Src/main.c ****   */
 257:Core/Src/main.c ****   hrtc.Instance = RTC;
 258:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 259:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 260:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 261:Core/Src/main.c ****   {
 262:Core/Src/main.c ****     Error_Handler();
 263:Core/Src/main.c ****   }
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE BEGIN Check_RTC_BKUP */
 266:Core/Src/main.c ****   } else
 267:Core/Src/main.c ****     {
 268:Core/Src/main.c **** 	  HAL_NVIC_SetPriority(RTC_IRQn,15,0);
 269:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(RTC_IRQn);
 270:Core/Src/main.c **** 	}
 271:Core/Src/main.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)!= 0x5051)
 272:Core/Src/main.c **** 	{
 273:Core/Src/main.c ****   /* USER CODE END Check_RTC_BKUP */
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /** Initialize RTC and set the Time and Date
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c ****   sTime.Hours = 0x0;
 278:Core/Src/main.c ****   sTime.Minutes = 0x0;
 279:Core/Src/main.c ****   sTime.Seconds = 0x0;
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 282:Core/Src/main.c ****   {
 283:Core/Src/main.c ****     Error_Handler();
 284:Core/Src/main.c ****   }
 285:Core/Src/main.c ****   DateToUpdate.WeekDay = RTC_WEEKDAY_MONDAY;
 286:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 287:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 288:Core/Src/main.c ****   DateToUpdate.Year = 0x0;
 289:Core/Src/main.c **** 
 290:Core/Src/main.c ****   if (HAL_RTC_SetDate(&hrtc, &DateToUpdate, RTC_FORMAT_BCD) != HAL_OK)
 291:Core/Src/main.c ****   {
 292:Core/Src/main.c ****     Error_Handler();
 293:Core/Src/main.c ****   }
 294:Core/Src/main.c ****   /* USER CODE BEGIN RTC_Init 2 */
 295:Core/Src/main.c **** 	} // Kitame user code virsuje yra IF komanda. Cia ji uzsidaro.
 296:Core/Src/main.c ****   // LAIKAS BUVO ISSAUGOTAS, NES USER REGISTRAS TURI MAGIC skaiciu 0x5051
 297:Core/Src/main.c ****   
 298:Core/Src/main.c ****   
 299:Core/Src/main.c **** // LAIKRODZIO TIKRINIMAS  
 300:Core/Src/main.c ****   
 301:Core/Src/main.c **** /* read RTC for time */
 302:Core/Src/main.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 303:Core/Src/main.c **** /* read time seconds for epoch */
 304:Core/Src/main.c **** // uint32_t nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*8640
 305:Core/Src/main.c **** 
 306:Core/Src/main.c **** //KALENDORIAUS TIKRINIMAS
 307:Core/Src/main.c **** 
 308:Core/Src/main.c **** 	//RTC kalendorius FAIL! Pas F103 jo ir nera. Cold boot su gyvu RTC
 309:Core/Src/main.c **** 	RTC_DateTypeDef dienos= {0};
 310:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 311:Core/Src/main.c **** 	if(dienos.Year < 20) {rtc_check_screwd_calendar();}
 312:Core/Src/main.c **** 	
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 10


 313:Core/Src/main.c **** //HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** //Cia irasom MAGIC skaiciu. Jis po pilno reseto ir RTC mirties turi neislikti.
 316:Core/Src/main.c **** 	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x5051);//Write data to the specified backing area registe
 317:Core/Src/main.c **** 
 318:Core/Src/main.c **** //HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10);
 319:Core/Src/main.c ****   /* USER CODE END RTC_Init 2 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** }
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** /**
 324:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 325:Core/Src/main.c ****   * @param None
 326:Core/Src/main.c ****   * @retval None
 327:Core/Src/main.c ****   */
 328:Core/Src/main.c **** static void MX_TIM1_Init(void)
 329:Core/Src/main.c **** {
 330:Core/Src/main.c **** 
 331:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 336:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 337:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 338:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 343:Core/Src/main.c ****   htim1.Instance = TIM1;
 344:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 345:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 346:Core/Src/main.c ****   htim1.Init.Period = 65535;
 347:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 348:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 349:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 350:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 351:Core/Src/main.c ****   {
 352:Core/Src/main.c ****     Error_Handler();
 353:Core/Src/main.c ****   }
 354:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 355:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 356:Core/Src/main.c ****   {
 357:Core/Src/main.c ****     Error_Handler();
 358:Core/Src/main.c ****   }
 359:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 360:Core/Src/main.c ****   {
 361:Core/Src/main.c ****     Error_Handler();
 362:Core/Src/main.c ****   }
 363:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 364:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 365:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 366:Core/Src/main.c ****   {
 367:Core/Src/main.c ****     Error_Handler();
 368:Core/Src/main.c ****   }
 369:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 11


 370:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 371:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 372:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 373:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 374:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 375:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 376:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 377:Core/Src/main.c ****   {
 378:Core/Src/main.c ****     Error_Handler();
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 381:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 382:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 383:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 384:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 385:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 386:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 387:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 388:Core/Src/main.c ****   {
 389:Core/Src/main.c ****     Error_Handler();
 390:Core/Src/main.c ****   }
 391:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 392:Core/Src/main.c **** 
 393:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 394:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** }
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** /**
 399:Core/Src/main.c ****   * @brief GPIO Initialization Function
 400:Core/Src/main.c ****   * @param None
 401:Core/Src/main.c ****   * @retval None
 402:Core/Src/main.c ****   */
 403:Core/Src/main.c **** static void MX_GPIO_Init(void)
 404:Core/Src/main.c **** {
  75              		.loc 2 404 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 32
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 30B5     		push	{r4, r5, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 12
  82              		.cfi_offset 4, -12
  83              		.cfi_offset 5, -8
  84              		.cfi_offset 14, -4
  85 0002 89B0     		sub	sp, sp, #36
  86              	.LCFI2:
  87              		.cfi_def_cfa_offset 48
 405:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  88              		.loc 2 405 3 view .LVU10
  89              		.loc 2 405 20 is_stmt 0 view .LVU11
  90 0004 0024     		movs	r4, #0
  91 0006 0494     		str	r4, [sp, #16]
  92 0008 0594     		str	r4, [sp, #20]
  93 000a 0694     		str	r4, [sp, #24]
  94 000c 0794     		str	r4, [sp, #28]
 406:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 12


 407:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 410:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  95              		.loc 2 410 3 is_stmt 1 view .LVU12
  96              	.LBB4:
  97              		.loc 2 410 3 view .LVU13
  98              		.loc 2 410 3 view .LVU14
  99 000e 1B4B     		ldr	r3, .L9
 100 0010 9A69     		ldr	r2, [r3, #24]
 101 0012 42F01002 		orr	r2, r2, #16
 102 0016 9A61     		str	r2, [r3, #24]
 103              		.loc 2 410 3 view .LVU15
 104 0018 9A69     		ldr	r2, [r3, #24]
 105 001a 02F01002 		and	r2, r2, #16
 106 001e 0092     		str	r2, [sp]
 107              		.loc 2 410 3 view .LVU16
 108 0020 009A     		ldr	r2, [sp]
 109              	.LBE4:
 110              		.loc 2 410 3 view .LVU17
 411:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 111              		.loc 2 411 3 view .LVU18
 112              	.LBB5:
 113              		.loc 2 411 3 view .LVU19
 114              		.loc 2 411 3 view .LVU20
 115 0022 9A69     		ldr	r2, [r3, #24]
 116 0024 42F02002 		orr	r2, r2, #32
 117 0028 9A61     		str	r2, [r3, #24]
 118              		.loc 2 411 3 view .LVU21
 119 002a 9A69     		ldr	r2, [r3, #24]
 120 002c 02F02002 		and	r2, r2, #32
 121 0030 0192     		str	r2, [sp, #4]
 122              		.loc 2 411 3 view .LVU22
 123 0032 019A     		ldr	r2, [sp, #4]
 124              	.LBE5:
 125              		.loc 2 411 3 view .LVU23
 412:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 126              		.loc 2 412 3 view .LVU24
 127              	.LBB6:
 128              		.loc 2 412 3 view .LVU25
 129              		.loc 2 412 3 view .LVU26
 130 0034 9A69     		ldr	r2, [r3, #24]
 131 0036 42F00402 		orr	r2, r2, #4
 132 003a 9A61     		str	r2, [r3, #24]
 133              		.loc 2 412 3 view .LVU27
 134 003c 9A69     		ldr	r2, [r3, #24]
 135 003e 02F00402 		and	r2, r2, #4
 136 0042 0292     		str	r2, [sp, #8]
 137              		.loc 2 412 3 view .LVU28
 138 0044 029A     		ldr	r2, [sp, #8]
 139              	.LBE6:
 140              		.loc 2 412 3 view .LVU29
 413:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 141              		.loc 2 413 3 view .LVU30
 142              	.LBB7:
 143              		.loc 2 413 3 view .LVU31
 144              		.loc 2 413 3 view .LVU32
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 13


 145 0046 9A69     		ldr	r2, [r3, #24]
 146 0048 42F00802 		orr	r2, r2, #8
 147 004c 9A61     		str	r2, [r3, #24]
 148              		.loc 2 413 3 view .LVU33
 149 004e 9B69     		ldr	r3, [r3, #24]
 150 0050 03F00803 		and	r3, r3, #8
 151 0054 0393     		str	r3, [sp, #12]
 152              		.loc 2 413 3 view .LVU34
 153 0056 039B     		ldr	r3, [sp, #12]
 154              	.LBE7:
 155              		.loc 2 413 3 view .LVU35
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 416:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 156              		.loc 2 416 3 view .LVU36
 157 0058 094D     		ldr	r5, .L9+4
 158 005a 2246     		mov	r2, r4
 159 005c 0121     		movs	r1, #1
 160 005e 2846     		mov	r0, r5
 161 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 162              	.LVL4:
 417:Core/Src/main.c **** 
 418:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 419:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
 163              		.loc 2 419 3 view .LVU37
 164              		.loc 2 419 23 is_stmt 0 view .LVU38
 165 0064 0123     		movs	r3, #1
 166 0066 0493     		str	r3, [sp, #16]
 420:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 167              		.loc 2 420 3 is_stmt 1 view .LVU39
 168              		.loc 2 420 24 is_stmt 0 view .LVU40
 169 0068 0593     		str	r3, [sp, #20]
 421:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 2 421 3 is_stmt 1 view .LVU41
 171              		.loc 2 421 24 is_stmt 0 view .LVU42
 172 006a 0694     		str	r4, [sp, #24]
 422:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 173              		.loc 2 422 3 is_stmt 1 view .LVU43
 174              		.loc 2 422 25 is_stmt 0 view .LVU44
 175 006c 0223     		movs	r3, #2
 176 006e 0793     		str	r3, [sp, #28]
 423:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 177              		.loc 2 423 3 is_stmt 1 view .LVU45
 178 0070 04A9     		add	r1, sp, #16
 179 0072 2846     		mov	r0, r5
 180 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 181              	.LVL5:
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 426:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 427:Core/Src/main.c **** }
 182              		.loc 2 427 1 is_stmt 0 view .LVU46
 183 0078 09B0     		add	sp, sp, #36
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 12
 186              		@ sp needed
 187 007a 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 14


 188              	.L10:
 189              		.align	2
 190              	.L9:
 191 007c 00100240 		.word	1073876992
 192 0080 00080140 		.word	1073809408
 193              		.cfi_endproc
 194              	.LFE129:
 196              		.section	.text.rtc_clean,"ax",%progbits
 197              		.align	1
 198              		.global	rtc_clean
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	rtc_clean:
 204              	.LFB68:
 205              		.file 3 "Core/Src/USER/rtc.c"
   1:Core/Src/USER/rtc.c **** /* ********************************************* */
   2:Core/Src/USER/rtc.c **** /* (c)2022 by www.vabolis.lt, Kaunas             */
   3:Core/Src/USER/rtc.c **** /**
   4:Core/Src/USER/rtc.c ****   **********************************************
   5:Core/Src/USER/rtc.c ****   * @file           : rtc.c
   6:Core/Src/USER/rtc.c ****   * @version        : 1.0
   7:Core/Src/USER/rtc.c ****   * @brief          : generic RTC clock and calendar for STM32
   8:Core/Src/USER/rtc.c **** **/  
   9:Core/Src/USER/rtc.c **** /* ********************************************* */
  10:Core/Src/USER/rtc.c **** 
  11:Core/Src/USER/rtc.c **** #include "rtc.h"
  12:Core/Src/USER/rtc.c **** #include "user.h"
  13:Core/Src/USER/rtc.c **** #include "usbd_cdc_if.h"
  14:Core/Src/USER/rtc.c **** 
  15:Core/Src/USER/rtc.c **** //#include "epoch.c"
  16:Core/Src/USER/rtc.c **** 
  17:Core/Src/USER/rtc.c **** extern RTC_HandleTypeDef hrtc;
  18:Core/Src/USER/rtc.c **** 
  19:Core/Src/USER/rtc.c **** 
  20:Core/Src/USER/rtc.c **** // ****** pacioje pradzioje, globalus laikas. Galima persideklaruoti, bet ar verta?
  21:Core/Src/USER/rtc.c **** 
  22:Core/Src/USER/rtc.c **** RTC_TimeTypeDef currTime = {0};
  23:Core/Src/USER/rtc.c **** RTC_TimeTypeDef oldTime = {0xFF,0xFF,0xFF}; //del refresh
  24:Core/Src/USER/rtc.c **** volatile unsigned char LastHour=255;
  25:Core/Src/USER/rtc.c **** 
  26:Core/Src/USER/rtc.c **** /* instrukcijos kurias reikia ikelti i main.c */
  27:Core/Src/USER/rtc.c **** 
  28:Core/Src/USER/rtc.c **** //-  /* USER CODE BEGIN Check_RTC_BKUP */
  29:Core/Src/USER/rtc.c **** //-  
  30:Core/Src/USER/rtc.c **** //-  // CIA TIKRINAM AR RTC ir kiti RAM baitai isliko gyvi.
  31:Core/Src/USER/rtc.c **** //-    if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)!= 0x5051)
  32:Core/Src/USER/rtc.c **** //-	{
  33:Core/Src/USER/rtc.c **** //-  /* USER CODE END Check_RTC_BKUP */
  34:Core/Src/USER/rtc.c **** 
  35:Core/Src/USER/rtc.c **** 
  36:Core/Src/USER/rtc.c **** //- /* USER CODE BEGIN RTC_Init 2 */
  37:Core/Src/USER/rtc.c **** //-	} // Kitame user code virsuje yra IF komanda. Cia ji uzsidaro.
  38:Core/Src/USER/rtc.c **** //-  // LAIKAS BUVO ISSAUGOTAS, NES USER REGISTRAS TURI MAGIC skaiciu 0x5051
  39:Core/Src/USER/rtc.c **** //- 
  40:Core/Src/USER/rtc.c **** //- /* read RTC for time */
  41:Core/Src/USER/rtc.c **** //-	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 15


  42:Core/Src/USER/rtc.c **** //- /* read time seconds for epoch */
  43:Core/Src/USER/rtc.c **** //- // uint32_t nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*
  44:Core/Src/USER/rtc.c **** //-
  45:Core/Src/USER/rtc.c **** //- /* set time to RTC */
  46:Core/Src/USER/rtc.c **** //-	if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
  47:Core/Src/USER/rtc.c **** //-	{
  48:Core/Src/USER/rtc.c **** //-	Error_Handler();
  49:Core/Src/USER/rtc.c **** //-	}
  50:Core/Src/USER/rtc.c **** //-
  51:Core/Src/USER/rtc.c **** //- // DEMESIO! STM32F103 NETURI KALENDORIAUS ir panasu, kad neturi epoch skaitliuko.
  52:Core/Src/USER/rtc.c **** //-	//RTC_DateTypeDef dienos= {0};
  53:Core/Src/USER/rtc.c **** //-	//HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
  54:Core/Src/USER/rtc.c **** //-	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
  55:Core/Src/USER/rtc.c **** //-
  56:Core/Src/USER/rtc.c **** //- //Cia irasom MAGIC skaiciu. Jis po pilno reseto ir RTC mirties turi neislikti.
  57:Core/Src/USER/rtc.c **** //-	HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, 0x5051);//Write data to the specified backing area regi
  58:Core/Src/USER/rtc.c **** //-
  59:Core/Src/USER/rtc.c **** //- //HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10);
  60:Core/Src/USER/rtc.c **** //-   /* USER CODE END RTC_Init 2 */
  61:Core/Src/USER/rtc.c **** 
  62:Core/Src/USER/rtc.c **** 
  63:Core/Src/USER/rtc.c **** // sunaikina sena laika. Naudojama LCD grafikos spartinimui
  64:Core/Src/USER/rtc.c **** void rtc_clean(void)
  65:Core/Src/USER/rtc.c **** {
 206              		.loc 3 65 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
  66:Core/Src/USER/rtc.c **** 	oldTime.Hours = 60;
 211              		.loc 3 66 2 view .LVU48
 212              		.loc 3 66 16 is_stmt 0 view .LVU49
 213 0000 024B     		ldr	r3, .L12
 214 0002 3C22     		movs	r2, #60
 215 0004 1A70     		strb	r2, [r3]
  67:Core/Src/USER/rtc.c **** 	oldTime.Minutes = 60;
 216              		.loc 3 67 2 is_stmt 1 view .LVU50
 217              		.loc 3 67 18 is_stmt 0 view .LVU51
 218 0006 5A70     		strb	r2, [r3, #1]
  68:Core/Src/USER/rtc.c **** 	oldTime.Seconds = 60;
 219              		.loc 3 68 2 is_stmt 1 view .LVU52
 220              		.loc 3 68 18 is_stmt 0 view .LVU53
 221 0008 9A70     		strb	r2, [r3, #2]
  69:Core/Src/USER/rtc.c **** }
 222              		.loc 3 69 1 view .LVU54
 223 000a 7047     		bx	lr
 224              	.L13:
 225              		.align	2
 226              	.L12:
 227 000c 00000000 		.word	.LANCHOR1
 228              		.cfi_endproc
 229              	.LFE68:
 231              		.section	.text.filter_string,"ax",%progbits
 232              		.align	1
 233              		.global	filter_string
 234              		.syntax unified
 235              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 16


 236              		.thumb_func
 238              	filter_string:
 239              	.LVL6:
 240              	.LFB69:
  70:Core/Src/USER/rtc.c **** 
  71:Core/Src/USER/rtc.c **** 
  72:Core/Src/USER/rtc.c **** 
  73:Core/Src/USER/rtc.c **** 
  74:Core/Src/USER/rtc.c **** // teksto filtras laiko ir datos nustatymui.
  75:Core/Src/USER/rtc.c **** void filter_string(char *Buf)
  76:Core/Src/USER/rtc.c **** {
 241              		.loc 3 76 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245              		.loc 3 76 1 is_stmt 0 view .LVU56
 246 0000 00B5     		push	{lr}
 247              	.LCFI4:
 248              		.cfi_def_cfa_offset 4
 249              		.cfi_offset 14, -4
 250 0002 0246     		mov	r2, r0
  77:Core/Src/USER/rtc.c **** int i=0;
 251              		.loc 3 77 1 is_stmt 1 view .LVU57
 252              	.LVL7:
  78:Core/Src/USER/rtc.c **** int j=0;
 253              		.loc 3 78 1 view .LVU58
  79:Core/Src/USER/rtc.c **** 
  80:Core/Src/USER/rtc.c **** for(i=0;Buf[i] != 0; i++)
 254              		.loc 3 80 1 view .LVU59
 255              		.loc 3 80 6 is_stmt 0 view .LVU60
 256 0004 4FF0000C 		mov	ip, #0
 257              		.loc 3 80 1 view .LVU61
 258 0008 17E0     		b	.L15
 259              	.LVL8:
 260              	.L16:
  81:Core/Src/USER/rtc.c **** 	{
  82:Core/Src/USER/rtc.c **** 	while(!((Buf[i]>='0' && Buf[i]<='9') || Buf[i]==':' || Buf[i]=='.') && !(Buf[i]==0))
  83:Core/Src/USER/rtc.c **** 		{
  84:Core/Src/USER/rtc.c **** 			for(j=i;Buf[j] !=0; ++j)
  85:Core/Src/USER/rtc.c **** 				{
  86:Core/Src/USER/rtc.c **** 					Buf[j]=Buf[j+1];
 261              		.loc 3 86 6 is_stmt 1 discriminator 3 view .LVU62
 262              		.loc 3 86 16 is_stmt 0 discriminator 3 view .LVU63
 263 000a D118     		adds	r1, r2, r3
 264 000c 4978     		ldrb	r1, [r1, #1]	@ zero_extendqisi2
 265              		.loc 3 86 12 discriminator 3 view .LVU64
 266 000e D154     		strb	r1, [r2, r3]
  84:Core/Src/USER/rtc.c **** 				{
 267              		.loc 3 84 24 is_stmt 1 discriminator 3 view .LVU65
 268 0010 0133     		adds	r3, r3, #1
 269              	.LVL9:
 270              	.L18:
  84:Core/Src/USER/rtc.c **** 				{
 271              		.loc 3 84 12 discriminator 1 view .LVU66
  84:Core/Src/USER/rtc.c **** 				{
 272              		.loc 3 84 15 is_stmt 0 discriminator 1 view .LVU67
 273 0012 D018     		adds	r0, r2, r3
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 17


 274 0014 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
  84:Core/Src/USER/rtc.c **** 				{
 275              		.loc 3 84 4 discriminator 1 view .LVU68
 276 0016 0029     		cmp	r1, #0
 277 0018 F7D1     		bne	.L16
  87:Core/Src/USER/rtc.c **** 				}
  88:Core/Src/USER/rtc.c **** 			Buf[j]=0;
 278              		.loc 3 88 4 is_stmt 1 view .LVU69
 279              		.loc 3 88 10 is_stmt 0 view .LVU70
 280 001a 0023     		movs	r3, #0
 281              	.LVL10:
 282              		.loc 3 88 10 view .LVU71
 283 001c 0370     		strb	r3, [r0]
 284              	.L19:
  82:Core/Src/USER/rtc.c **** 		{
 285              		.loc 3 82 7 is_stmt 1 view .LVU72
  82:Core/Src/USER/rtc.c **** 		{
 286              		.loc 3 82 14 is_stmt 0 view .LVU73
 287 001e 9EF80010 		ldrb	r1, [lr]	@ zero_extendqisi2
  82:Core/Src/USER/rtc.c **** 		{
 288              		.loc 3 82 39 view .LVU74
 289 0022 A1F13003 		sub	r3, r1, #48
 290 0026 DBB2     		uxtb	r3, r3
  82:Core/Src/USER/rtc.c **** 		{
 291              		.loc 3 82 7 view .LVU75
 292 0028 0A2B     		cmp	r3, #10
 293 002a 04D9     		bls	.L17
  82:Core/Src/USER/rtc.c **** 		{
 294              		.loc 3 82 8 discriminator 1 view .LVU76
 295 002c 2E29     		cmp	r1, #46
 296 002e 02D0     		beq	.L17
  82:Core/Src/USER/rtc.c **** 		{
 297              		.loc 3 82 70 discriminator 2 view .LVU77
 298 0030 09B1     		cbz	r1, .L17
  84:Core/Src/USER/rtc.c **** 				{
 299              		.loc 3 84 9 view .LVU78
 300 0032 6346     		mov	r3, ip
 301 0034 EDE7     		b	.L18
 302              	.L17:
  80:Core/Src/USER/rtc.c **** 	{
 303              		.loc 3 80 22 is_stmt 1 discriminator 2 view .LVU79
  80:Core/Src/USER/rtc.c **** 	{
 304              		.loc 3 80 23 is_stmt 0 discriminator 2 view .LVU80
 305 0036 0CF1010C 		add	ip, ip, #1
 306              	.LVL11:
 307              	.L15:
  80:Core/Src/USER/rtc.c **** 	{
 308              		.loc 3 80 9 is_stmt 1 discriminator 1 view .LVU81
  80:Core/Src/USER/rtc.c **** 	{
 309              		.loc 3 80 12 is_stmt 0 discriminator 1 view .LVU82
 310 003a 02EB0C0E 		add	lr, r2, ip
 311 003e 12F80C30 		ldrb	r3, [r2, ip]	@ zero_extendqisi2
  80:Core/Src/USER/rtc.c **** 	{
 312              		.loc 3 80 1 discriminator 1 view .LVU83
 313 0042 002B     		cmp	r3, #0
 314 0044 EBD1     		bne	.L19
  89:Core/Src/USER/rtc.c **** 		}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 18


  90:Core/Src/USER/rtc.c **** 	}
  91:Core/Src/USER/rtc.c **** }
 315              		.loc 3 91 1 view .LVU84
 316 0046 5DF804FB 		ldr	pc, [sp], #4
 317              		.cfi_endproc
 318              	.LFE69:
 320              		.section	.text.rtc_update,"ax",%progbits
 321              		.align	1
 322              		.global	rtc_update
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 327              	rtc_update:
 328              	.LFB72:
  92:Core/Src/USER/rtc.c **** 
  93:Core/Src/USER/rtc.c **** //nustatyti kalendoriu.
  94:Core/Src/USER/rtc.c **** void rtc_set_date_text(char * Buf)
  95:Core/Src/USER/rtc.c **** {
  96:Core/Src/USER/rtc.c **** filter_string(Buf);
  97:Core/Src/USER/rtc.c **** //22.12.23
  98:Core/Src/USER/rtc.c **** 
  99:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 100:Core/Src/USER/rtc.c **** 
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 103:Core/Src/USER/rtc.c **** 
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 106:Core/Src/USER/rtc.c **** 	
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 109:Core/Src/USER/rtc.c **** 	
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 112:Core/Src/USER/rtc.c **** 	
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 114:Core/Src/USER/rtc.c ****   {
 115:Core/Src/USER/rtc.c ****     Error_Handler();
 116:Core/Src/USER/rtc.c ****   }
 117:Core/Src/USER/rtc.c ****   
 118:Core/Src/USER/rtc.c ****   rtc_backup_date();
 119:Core/Src/USER/rtc.c **** }
 120:Core/Src/USER/rtc.c **** 
 121:Core/Src/USER/rtc.c **** //nustatyti laikrodi
 122:Core/Src/USER/rtc.c **** void rtc_set_time_text(char * Buf)
 123:Core/Src/USER/rtc.c **** {
 124:Core/Src/USER/rtc.c **** // echo ATT%TIME% >COMx
 125:Core/Src/USER/rtc.c **** //ATT19:14:32.94
 126:Core/Src/USER/rtc.c **** 
 127:Core/Src/USER/rtc.c **** 
 128:Core/Src/USER/rtc.c **** filter_string(Buf);
 129:Core/Src/USER/rtc.c **** 
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 131:Core/Src/USER/rtc.c **** 
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 133:Core/Src/USER/rtc.c **** 
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 19


 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 136:Core/Src/USER/rtc.c **** 	
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 139:Core/Src/USER/rtc.c **** 	
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 142:Core/Src/USER/rtc.c **** 	
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 144:Core/Src/USER/rtc.c ****   {
 145:Core/Src/USER/rtc.c ****     Error_Handler();
 146:Core/Src/USER/rtc.c ****   }
 147:Core/Src/USER/rtc.c **** 
 148:Core/Src/USER/rtc.c **** }
 149:Core/Src/USER/rtc.c **** 
 150:Core/Src/USER/rtc.c **** // nuskaityti laika is hardwares.
 151:Core/Src/USER/rtc.c **** void rtc_update(void)
 152:Core/Src/USER/rtc.c **** {
 329              		.loc 3 152 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI5:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 153:Core/Src/USER/rtc.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 338              		.loc 3 153 2 view .LVU86
 339 0002 0022     		movs	r2, #0
 340 0004 0249     		ldr	r1, .L24
 341 0006 0348     		ldr	r0, .L24+4
 342 0008 FFF7FEFF 		bl	HAL_RTC_GetTime
 343              	.LVL12:
 154:Core/Src/USER/rtc.c **** }
 344              		.loc 3 154 1 is_stmt 0 view .LVU87
 345 000c 08BD     		pop	{r3, pc}
 346              	.L25:
 347 000e 00BF     		.align	2
 348              	.L24:
 349 0010 00000000 		.word	.LANCHOR2
 350 0014 00000000 		.word	.LANCHOR3
 351              		.cfi_endproc
 352              	.LFE72:
 354              		.section	.text.rtc_time_string,"ax",%progbits
 355              		.align	1
 356              		.global	rtc_time_string
 357              		.syntax unified
 358              		.thumb
 359              		.thumb_func
 361              	rtc_time_string:
 362              	.LVL13:
 363              	.LFB73:
 155:Core/Src/USER/rtc.c **** 
 156:Core/Src/USER/rtc.c **** //rtc->tekstas
 157:Core/Src/USER/rtc.c **** void rtc_time_string(char * text)
 158:Core/Src/USER/rtc.c **** {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 20


 364              		.loc 3 158 1 is_stmt 1 view -0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 0, uses_anonymous_args = 0
 368              		.loc 3 158 1 is_stmt 0 view .LVU89
 369 0000 38B5     		push	{r3, r4, r5, lr}
 370              	.LCFI6:
 371              		.cfi_def_cfa_offset 16
 372              		.cfi_offset 3, -16
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 5, -8
 375              		.cfi_offset 14, -4
 376 0002 0446     		mov	r4, r0
 159:Core/Src/USER/rtc.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 377              		.loc 3 159 2 is_stmt 1 view .LVU90
 378 0004 1B4D     		ldr	r5, .L28
 379 0006 0022     		movs	r2, #0
 380 0008 2946     		mov	r1, r5
 381 000a 1B48     		ldr	r0, .L28+4
 382              	.LVL14:
 383              		.loc 3 159 2 is_stmt 0 view .LVU91
 384 000c FFF7FEFF 		bl	HAL_RTC_GetTime
 385              	.LVL15:
 160:Core/Src/USER/rtc.c **** 	text[0]=(currTime.Hours)/10+'0';
 386              		.loc 3 160 2 is_stmt 1 view .LVU92
 387              		.loc 3 160 19 is_stmt 0 view .LVU93
 388 0010 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 389              		.loc 3 160 29 view .LVU94
 390 0012 1A4B     		ldr	r3, .L28+8
 391 0014 A3FB0212 		umull	r1, r2, r3, r2
 392 0018 D208     		lsrs	r2, r2, #3
 393 001a 3032     		adds	r2, r2, #48
 394              		.loc 3 160 9 view .LVU95
 395 001c 2270     		strb	r2, [r4]
 161:Core/Src/USER/rtc.c **** 	text[1]=(currTime.Hours)%10+'0';
 396              		.loc 3 161 2 is_stmt 1 view .LVU96
 397              		.loc 3 161 19 is_stmt 0 view .LVU97
 398 001e 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 399              		.loc 3 161 29 view .LVU98
 400 0020 A3FB0201 		umull	r0, r1, r3, r2
 401 0024 C908     		lsrs	r1, r1, #3
 402 0026 01EB8101 		add	r1, r1, r1, lsl #2
 403 002a A2EB4102 		sub	r2, r2, r1, lsl #1
 404 002e 3032     		adds	r2, r2, #48
 405              		.loc 3 161 9 view .LVU99
 406 0030 6270     		strb	r2, [r4, #1]
 162:Core/Src/USER/rtc.c **** 	text[2]=':';	
 407              		.loc 3 162 2 is_stmt 1 view .LVU100
 408              		.loc 3 162 9 is_stmt 0 view .LVU101
 409 0032 3A20     		movs	r0, #58
 410 0034 A070     		strb	r0, [r4, #2]
 163:Core/Src/USER/rtc.c **** 
 164:Core/Src/USER/rtc.c **** 	text[3]=(currTime.Minutes)/10+'0';
 411              		.loc 3 164 2 is_stmt 1 view .LVU102
 412              		.loc 3 164 19 is_stmt 0 view .LVU103
 413 0036 6978     		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 414              		.loc 3 164 31 view .LVU104
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 21


 415 0038 A3FB01C2 		umull	ip, r2, r3, r1
 416 003c D208     		lsrs	r2, r2, #3
 417 003e 02F1300C 		add	ip, r2, #48
 418              		.loc 3 164 9 view .LVU105
 419 0042 84F803C0 		strb	ip, [r4, #3]
 165:Core/Src/USER/rtc.c **** 	text[4]=(currTime.Minutes)%10+'0';
 420              		.loc 3 165 2 is_stmt 1 view .LVU106
 421              		.loc 3 165 31 is_stmt 0 view .LVU107
 422 0046 02EB8202 		add	r2, r2, r2, lsl #2
 423 004a A1EB4202 		sub	r2, r1, r2, lsl #1
 424 004e 3032     		adds	r2, r2, #48
 425              		.loc 3 165 9 view .LVU108
 426 0050 2271     		strb	r2, [r4, #4]
 166:Core/Src/USER/rtc.c **** 	text[5]=':';	
 427              		.loc 3 166 2 is_stmt 1 view .LVU109
 428              		.loc 3 166 9 is_stmt 0 view .LVU110
 429 0052 6071     		strb	r0, [r4, #5]
 167:Core/Src/USER/rtc.c **** 
 168:Core/Src/USER/rtc.c **** 	text[6]=(currTime.Seconds)/10+'0';
 430              		.loc 3 168 2 is_stmt 1 view .LVU111
 431              		.loc 3 168 19 is_stmt 0 view .LVU112
 432 0054 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 433              		.loc 3 168 31 view .LVU113
 434 0056 A3FB0213 		umull	r1, r3, r3, r2
 435 005a DB08     		lsrs	r3, r3, #3
 436 005c 03F13001 		add	r1, r3, #48
 437              		.loc 3 168 9 view .LVU114
 438 0060 A171     		strb	r1, [r4, #6]
 169:Core/Src/USER/rtc.c **** 	text[7]=(currTime.Seconds)%10+'0';
 439              		.loc 3 169 2 is_stmt 1 view .LVU115
 440              		.loc 3 169 31 is_stmt 0 view .LVU116
 441 0062 03EB8303 		add	r3, r3, r3, lsl #2
 442 0066 A2EB4303 		sub	r3, r2, r3, lsl #1
 443 006a 3033     		adds	r3, r3, #48
 444              		.loc 3 169 9 view .LVU117
 445 006c E371     		strb	r3, [r4, #7]
 170:Core/Src/USER/rtc.c **** 	text[8]=0;
 446              		.loc 3 170 2 is_stmt 1 view .LVU118
 447              		.loc 3 170 9 is_stmt 0 view .LVU119
 448 006e 0023     		movs	r3, #0
 449 0070 2372     		strb	r3, [r4, #8]
 171:Core/Src/USER/rtc.c **** }
 450              		.loc 3 171 1 view .LVU120
 451 0072 38BD     		pop	{r3, r4, r5, pc}
 452              	.LVL16:
 453              	.L29:
 454              		.loc 3 171 1 view .LVU121
 455              		.align	2
 456              	.L28:
 457 0074 00000000 		.word	.LANCHOR2
 458 0078 00000000 		.word	.LANCHOR3
 459 007c CDCCCCCC 		.word	-858993459
 460              		.cfi_endproc
 461              	.LFE73:
 463              		.section	.text.rtc_date_string,"ax",%progbits
 464              		.align	1
 465              		.global	rtc_date_string
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 22


 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
 470              	rtc_date_string:
 471              	.LVL17:
 472              	.LFB74:
 172:Core/Src/USER/rtc.c **** void rtc_date_string(char * text)
 173:Core/Src/USER/rtc.c **** {
 473              		.loc 3 173 1 is_stmt 1 view -0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477              		.loc 3 173 1 is_stmt 0 view .LVU123
 478 0000 10B5     		push	{r4, lr}
 479              	.LCFI7:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 4, -8
 482              		.cfi_offset 14, -4
 483 0002 82B0     		sub	sp, sp, #8
 484              	.LCFI8:
 485              		.cfi_def_cfa_offset 16
 486 0004 0446     		mov	r4, r0
 174:Core/Src/USER/rtc.c **** 	RTC_DateTypeDef dienos;
 487              		.loc 3 174 2 is_stmt 1 view .LVU124
 175:Core/Src/USER/rtc.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 488              		.loc 3 175 2 view .LVU125
 489 0006 0022     		movs	r2, #0
 490 0008 01A9     		add	r1, sp, #4
 491 000a 1B48     		ldr	r0, .L32
 492              	.LVL18:
 493              		.loc 3 175 2 is_stmt 0 view .LVU126
 494 000c FFF7FEFF 		bl	HAL_RTC_GetDate
 495              	.LVL19:
 176:Core/Src/USER/rtc.c **** 
 177:Core/Src/USER/rtc.c **** 	text[0]=(dienos.Year)/10+'0';
 496              		.loc 3 177 2 is_stmt 1 view .LVU127
 497              		.loc 3 177 17 is_stmt 0 view .LVU128
 498 0010 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 499              		.loc 3 177 26 view .LVU129
 500 0014 194B     		ldr	r3, .L32+4
 501 0016 A3FB0102 		umull	r0, r2, r3, r1
 502 001a D208     		lsrs	r2, r2, #3
 503 001c 02F13000 		add	r0, r2, #48
 504              		.loc 3 177 9 view .LVU130
 505 0020 2070     		strb	r0, [r4]
 178:Core/Src/USER/rtc.c **** 	text[1]=(dienos.Year)%10+'0';
 506              		.loc 3 178 2 is_stmt 1 view .LVU131
 507              		.loc 3 178 26 is_stmt 0 view .LVU132
 508 0022 02EB8202 		add	r2, r2, r2, lsl #2
 509 0026 A1EB4202 		sub	r2, r1, r2, lsl #1
 510 002a 3032     		adds	r2, r2, #48
 511              		.loc 3 178 9 view .LVU133
 512 002c 6270     		strb	r2, [r4, #1]
 179:Core/Src/USER/rtc.c **** 	text[2]='.';
 513              		.loc 3 179 2 is_stmt 1 view .LVU134
 514              		.loc 3 179 9 is_stmt 0 view .LVU135
 515 002e 2E20     		movs	r0, #46
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 23


 516 0030 A070     		strb	r0, [r4, #2]
 180:Core/Src/USER/rtc.c **** 	text[3]=(dienos.Month)/10+'0';
 517              		.loc 3 180 2 is_stmt 1 view .LVU136
 518              		.loc 3 180 17 is_stmt 0 view .LVU137
 519 0032 9DF80510 		ldrb	r1, [sp, #5]	@ zero_extendqisi2
 520              		.loc 3 180 27 view .LVU138
 521 0036 A3FB01C2 		umull	ip, r2, r3, r1
 522 003a D208     		lsrs	r2, r2, #3
 523 003c 02F1300C 		add	ip, r2, #48
 524              		.loc 3 180 9 view .LVU139
 525 0040 84F803C0 		strb	ip, [r4, #3]
 181:Core/Src/USER/rtc.c **** 	text[4]=(dienos.Month)%10+'0';
 526              		.loc 3 181 2 is_stmt 1 view .LVU140
 527              		.loc 3 181 27 is_stmt 0 view .LVU141
 528 0044 02EB8202 		add	r2, r2, r2, lsl #2
 529 0048 A1EB4202 		sub	r2, r1, r2, lsl #1
 530 004c 3032     		adds	r2, r2, #48
 531              		.loc 3 181 9 view .LVU142
 532 004e 2271     		strb	r2, [r4, #4]
 182:Core/Src/USER/rtc.c **** 	text[5]='.';
 533              		.loc 3 182 2 is_stmt 1 view .LVU143
 534              		.loc 3 182 9 is_stmt 0 view .LVU144
 535 0050 6071     		strb	r0, [r4, #5]
 183:Core/Src/USER/rtc.c **** 	text[6]=(dienos.Date)/10+'0';
 536              		.loc 3 183 2 is_stmt 1 view .LVU145
 537              		.loc 3 183 17 is_stmt 0 view .LVU146
 538 0052 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 539              		.loc 3 183 26 view .LVU147
 540 0056 A3FB0213 		umull	r1, r3, r3, r2
 541 005a DB08     		lsrs	r3, r3, #3
 542 005c 03F13001 		add	r1, r3, #48
 543              		.loc 3 183 9 view .LVU148
 544 0060 A171     		strb	r1, [r4, #6]
 184:Core/Src/USER/rtc.c **** 	text[7]=(dienos.Date)%10+'0';
 545              		.loc 3 184 2 is_stmt 1 view .LVU149
 546              		.loc 3 184 26 is_stmt 0 view .LVU150
 547 0062 03EB8303 		add	r3, r3, r3, lsl #2
 548 0066 A2EB4303 		sub	r3, r2, r3, lsl #1
 549 006a 3033     		adds	r3, r3, #48
 550              		.loc 3 184 9 view .LVU151
 551 006c E371     		strb	r3, [r4, #7]
 185:Core/Src/USER/rtc.c **** 	text[8]=0;
 552              		.loc 3 185 2 is_stmt 1 view .LVU152
 553              		.loc 3 185 9 is_stmt 0 view .LVU153
 554 006e 0023     		movs	r3, #0
 555 0070 2372     		strb	r3, [r4, #8]
 186:Core/Src/USER/rtc.c **** }
 556              		.loc 3 186 1 view .LVU154
 557 0072 02B0     		add	sp, sp, #8
 558              	.LCFI9:
 559              		.cfi_def_cfa_offset 8
 560              		@ sp needed
 561 0074 10BD     		pop	{r4, pc}
 562              	.LVL20:
 563              	.L33:
 564              		.loc 3 186 1 view .LVU155
 565 0076 00BF     		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 24


 566              	.L32:
 567 0078 00000000 		.word	.LANCHOR3
 568 007c CDCCCCCC 		.word	-858993459
 569              		.cfi_endproc
 570              	.LFE74:
 572              		.section	.text.rtc_backup_date,"ax",%progbits
 573              		.align	1
 574              		.global	rtc_backup_date
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 579              	rtc_backup_date:
 580              	.LFB75:
 187:Core/Src/USER/rtc.c **** 
 188:Core/Src/USER/rtc.c **** void rtc_backup_date(void)
 189:Core/Src/USER/rtc.c **** {
 581              		.loc 3 189 1 is_stmt 1 view -0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585 0000 30B5     		push	{r4, r5, lr}
 586              	.LCFI10:
 587              		.cfi_def_cfa_offset 12
 588              		.cfi_offset 4, -12
 589              		.cfi_offset 5, -8
 590              		.cfi_offset 14, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              	.LCFI11:
 593              		.cfi_def_cfa_offset 24
 190:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 594              		.loc 3 190 1 view .LVU157
 191:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 595              		.loc 3 191 2 view .LVU158
 596              		.loc 3 191 5 is_stmt 0 view .LVU159
 597 0004 0121     		movs	r1, #1
 598 0006 1448     		ldr	r0, .L38
 599 0008 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 600              	.LVL21:
 601              		.loc 3 191 4 view .LVU160
 602 000c 45F25103 		movw	r3, #20561
 603 0010 9842     		cmp	r0, r3
 604 0012 01D0     		beq	.L37
 605              	.L34:
 192:Core/Src/USER/rtc.c **** 	{
 193:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 194:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR2, (uint16_t) (dienos.Year<<8) + dienos.Month);	
 196:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 197:Core/Src/USER/rtc.c **** 	}
 198:Core/Src/USER/rtc.c **** }
 606              		.loc 3 198 1 view .LVU161
 607 0014 03B0     		add	sp, sp, #12
 608              	.LCFI12:
 609              		.cfi_remember_state
 610              		.cfi_def_cfa_offset 12
 611              		@ sp needed
 612 0016 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 25


 613              	.L37:
 614              	.LCFI13:
 615              		.cfi_restore_state
 193:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 616              		.loc 3 193 3 is_stmt 1 view .LVU162
 617 0018 0F4C     		ldr	r4, .L38
 618 001a 0022     		movs	r2, #0
 619 001c 01A9     		add	r1, sp, #4
 620 001e 2046     		mov	r0, r4
 621 0020 FFF7FEFF 		bl	HAL_RTC_GetDate
 622              	.LVL22:
 194:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR2, (uint16_t) (dienos.Year<<8) + dienos.Month);	
 623              		.loc 3 194 3 view .LVU163
 624 0024 0D4D     		ldr	r5, .L38+4
 625 0026 0022     		movs	r2, #0
 626 0028 2946     		mov	r1, r5
 627 002a 2046     		mov	r0, r4
 628 002c FFF7FEFF 		bl	HAL_RTC_GetTime
 629              	.LVL23:
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 630              		.loc 3 195 3 view .LVU164
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 631              		.loc 3 195 61 is_stmt 0 view .LVU165
 632 0030 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 633              		.loc 3 195 79 view .LVU166
 634 0034 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 195:Core/Src/USER/rtc.c **** 		HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR3, (uint16_t) (dienos.Date<<8) + currTime.Hours);	
 635              		.loc 3 195 3 view .LVU167
 636 0038 03EB0222 		add	r2, r3, r2, lsl #8
 637 003c 0221     		movs	r1, #2
 638 003e 2046     		mov	r0, r4
 639 0040 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 640              	.LVL24:
 196:Core/Src/USER/rtc.c **** 	}
 641              		.loc 3 196 3 is_stmt 1 view .LVU168
 196:Core/Src/USER/rtc.c **** 	}
 642              		.loc 3 196 61 is_stmt 0 view .LVU169
 643 0044 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 196:Core/Src/USER/rtc.c **** 	}
 644              		.loc 3 196 81 view .LVU170
 645 0048 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 196:Core/Src/USER/rtc.c **** 	}
 646              		.loc 3 196 3 view .LVU171
 647 004a 03EB0222 		add	r2, r3, r2, lsl #8
 648 004e 0321     		movs	r1, #3
 649 0050 2046     		mov	r0, r4
 650 0052 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 651              	.LVL25:
 652              		.loc 3 198 1 view .LVU172
 653 0056 DDE7     		b	.L34
 654              	.L39:
 655              		.align	2
 656              	.L38:
 657 0058 00000000 		.word	.LANCHOR3
 658 005c 00000000 		.word	.LANCHOR2
 659              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 26


 660              	.LFE75:
 662              		.section	.text.rtc_int_init,"ax",%progbits
 663              		.align	1
 664              		.global	rtc_int_init
 665              		.syntax unified
 666              		.thumb
 667              		.thumb_func
 669              	rtc_int_init:
 670              	.LFB77:
 199:Core/Src/USER/rtc.c **** 
 200:Core/Src/USER/rtc.c **** void rtc_check_screwd_calendar(void)
 201:Core/Src/USER/rtc.c **** {
 202:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 204:Core/Src/USER/rtc.c **** 	{
 205:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 206:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 208:Core/Src/USER/rtc.c **** 		
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 211:Core/Src/USER/rtc.c **** 	
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 214:Core/Src/USER/rtc.c **** 			{
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 219:Core/Src/USER/rtc.c **** 			  {
 220:Core/Src/USER/rtc.c **** 				Error_Handler();
 221:Core/Src/USER/rtc.c **** 			  }
 222:Core/Src/USER/rtc.c **** 			 rtc_backup_date();
 223:Core/Src/USER/rtc.c **** 			}
 224:Core/Src/USER/rtc.c **** 	}
 225:Core/Src/USER/rtc.c **** }
 226:Core/Src/USER/rtc.c **** 
 227:Core/Src/USER/rtc.c **** 
 228:Core/Src/USER/rtc.c **** /* INT INT INT INT INT INT INT INT INT INT INT INT INT INT INT INT */
 229:Core/Src/USER/rtc.c **** 
 230:Core/Src/USER/rtc.c **** /* ijungti RTC pertraukimus */
 231:Core/Src/USER/rtc.c **** void rtc_int_init(void)
 232:Core/Src/USER/rtc.c **** {
 671              		.loc 3 232 1 is_stmt 1 view -0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 0, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 233:Core/Src/USER/rtc.c **** 	__HAL_RTC_SECOND_ENABLE_IT(&hrtc,RTC_IT_SEC); //turn on RTC clock seconds interrupt
 676              		.loc 3 233 2 view .LVU174
 677 0000 034B     		ldr	r3, .L41
 678 0002 1A68     		ldr	r2, [r3]
 679 0004 1368     		ldr	r3, [r2]
 680 0006 43F00103 		orr	r3, r3, #1
 681 000a 1360     		str	r3, [r2]
 234:Core/Src/USER/rtc.c **** }
 682              		.loc 3 234 1 is_stmt 0 view .LVU175
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 27


 683 000c 7047     		bx	lr
 684              	.L42:
 685 000e 00BF     		.align	2
 686              	.L41:
 687 0010 00000000 		.word	.LANCHOR3
 688              		.cfi_endproc
 689              	.LFE77:
 691              		.section	.text.circle_reset,"ax",%progbits
 692              		.align	1
 693              		.global	circle_reset
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 698              	circle_reset:
 699              	.LVL26:
 700              	.LFB79:
 701              		.file 4 "Core/Src/USER/circular_buffer.c"
   1:Core/Src/USER/circular_buffer.c **** /* ********************************************* */
   2:Core/Src/USER/circular_buffer.c **** /* (c)2022 by www.vabolis.lt, Kaunas             */
   3:Core/Src/USER/circular_buffer.c **** /**
   4:Core/Src/USER/circular_buffer.c ****   **********************************************
   5:Core/Src/USER/circular_buffer.c ****   * @file           : circular_buffer.c
   6:Core/Src/USER/circular_buffer.c ****   * @version        : 1.0
   7:Core/Src/USER/circular_buffer.c ****   * @brief          : circular buffer for uart/usb
   8:Core/Src/USER/circular_buffer.c **** **/  
   9:Core/Src/USER/circular_buffer.c **** /* ********************************************* */
  10:Core/Src/USER/circular_buffer.c **** 
  11:Core/Src/USER/circular_buffer.c **** #include "circular_buffer.h"
  12:Core/Src/USER/circular_buffer.c **** 
  13:Core/Src/USER/circular_buffer.c **** /* INSTRUKCIJA
  14:Core/Src/USER/circular_buffer.c **** #define BUFFER_SIZE 32
  15:Core/Src/USER/circular_buffer.c **** 
  16:Core/Src/USER/circular_buffer.c **** unsigned char testas[BUFFER_SIZE];
  17:Core/Src/USER/circular_buffer.c **** CCBuf cc; //struktura
  18:Core/Src/USER/circular_buffer.c **** //init
  19:Core/Src/USER/circular_buffer.c **** cc.buffer=testas;
  20:Core/Src/USER/circular_buffer.c **** circle_reset(&cc,BUFFER_SIZE);
  21:Core/Src/USER/circular_buffer.c **** 
  22:Core/Src/USER/circular_buffer.c **** //naudojimas
  23:Core/Src/USER/circular_buffer.c **** 
  24:Core/Src/USER/circular_buffer.c **** while(circle_available(&cc)>0) {a=circle_pull(&cc); naudoti duomenys}
  25:Core/Src/USER/circular_buffer.c **** 					
  26:Core/Src/USER/circular_buffer.c **** // uart callback
  27:Core/Src/USER/circular_buffer.c **** circle_push(&cc , baitinisbuferis); // push received byte to circular buffer
  28:Core/Src/USER/circular_buffer.c **** 					
  29:Core/Src/USER/circular_buffer.c **** 
  30:Core/Src/USER/circular_buffer.c **** ************* */
  31:Core/Src/USER/circular_buffer.c **** 
  32:Core/Src/USER/circular_buffer.c **** 
  33:Core/Src/USER/circular_buffer.c **** 
  34:Core/Src/USER/circular_buffer.c **** void circle_reset(CCBuf *c, size_t size)
  35:Core/Src/USER/circular_buffer.c **** {
 702              		.loc 4 35 1 is_stmt 1 view -0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 28


  36:Core/Src/USER/circular_buffer.c **** 	c->head=0;
 707              		.loc 4 36 2 view .LVU177
 708              		.loc 4 36 9 is_stmt 0 view .LVU178
 709 0000 0023     		movs	r3, #0
 710 0002 4360     		str	r3, [r0, #4]
  37:Core/Src/USER/circular_buffer.c **** 	c->tail=0;
 711              		.loc 4 37 2 is_stmt 1 view .LVU179
 712              		.loc 4 37 9 is_stmt 0 view .LVU180
 713 0004 8360     		str	r3, [r0, #8]
  38:Core/Src/USER/circular_buffer.c **** 	c->max=size; //sizeof(c->buffer); <-- negauna sitos informacijos
 714              		.loc 4 38 2 is_stmt 1 view .LVU181
 715              		.loc 4 38 8 is_stmt 0 view .LVU182
 716 0006 0161     		str	r1, [r0, #16]
  39:Core/Src/USER/circular_buffer.c **** 	c->count=0;
 717              		.loc 4 39 2 is_stmt 1 view .LVU183
 718              		.loc 4 39 10 is_stmt 0 view .LVU184
 719 0008 C360     		str	r3, [r0, #12]
  40:Core/Src/USER/circular_buffer.c **** }
 720              		.loc 4 40 1 view .LVU185
 721 000a 7047     		bx	lr
 722              		.cfi_endproc
 723              	.LFE79:
 725              		.section	.text.circle_push,"ax",%progbits
 726              		.align	1
 727              		.global	circle_push
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 732              	circle_push:
 733              	.LVL27:
 734              	.LFB80:
  41:Core/Src/USER/circular_buffer.c **** 
  42:Core/Src/USER/circular_buffer.c **** void circle_push(CCBuf *c,unsigned char b)
  43:Core/Src/USER/circular_buffer.c **** {
 735              		.loc 4 43 1 is_stmt 1 view -0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              		@ link register save eliminated.
  44:Core/Src/USER/circular_buffer.c **** 	c->buffer[c->head]=b;
 740              		.loc 4 44 2 view .LVU187
 741              		.loc 4 44 3 is_stmt 0 view .LVU188
 742 0000 0268     		ldr	r2, [r0]
 743              		.loc 4 44 13 view .LVU189
 744 0002 4368     		ldr	r3, [r0, #4]
 745              		.loc 4 44 20 view .LVU190
 746 0004 D154     		strb	r1, [r2, r3]
  45:Core/Src/USER/circular_buffer.c **** 	c->head++; if(c->head == c->max) {c->head=0;}
 747              		.loc 4 45 2 is_stmt 1 view .LVU191
 748              		.loc 4 45 3 is_stmt 0 view .LVU192
 749 0006 4368     		ldr	r3, [r0, #4]
 750              		.loc 4 45 9 view .LVU193
 751 0008 0133     		adds	r3, r3, #1
 752 000a 4360     		str	r3, [r0, #4]
 753              		.loc 4 45 13 is_stmt 1 view .LVU194
 754              		.loc 4 45 28 is_stmt 0 view .LVU195
 755 000c 0269     		ldr	r2, [r0, #16]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 29


 756              		.loc 4 45 15 view .LVU196
 757 000e 9342     		cmp	r3, r2
 758 0010 03D0     		beq	.L46
 759              	.L45:
  46:Core/Src/USER/circular_buffer.c **** 	c->count++;
 760              		.loc 4 46 2 is_stmt 1 view .LVU197
 761              		.loc 4 46 3 is_stmt 0 view .LVU198
 762 0012 C368     		ldr	r3, [r0, #12]
 763              		.loc 4 46 10 view .LVU199
 764 0014 0133     		adds	r3, r3, #1
 765 0016 C360     		str	r3, [r0, #12]
  47:Core/Src/USER/circular_buffer.c **** 	//if(c->count == c->max) {c->count=c->max;} //error
  48:Core/Src/USER/circular_buffer.c **** }
 766              		.loc 4 48 1 view .LVU200
 767 0018 7047     		bx	lr
 768              	.L46:
  45:Core/Src/USER/circular_buffer.c **** 	c->count++;
 769              		.loc 4 45 36 is_stmt 1 discriminator 1 view .LVU201
  45:Core/Src/USER/circular_buffer.c **** 	c->count++;
 770              		.loc 4 45 43 is_stmt 0 discriminator 1 view .LVU202
 771 001a 0023     		movs	r3, #0
 772 001c 4360     		str	r3, [r0, #4]
 773 001e F8E7     		b	.L45
 774              		.cfi_endproc
 775              	.LFE80:
 777              		.section	.text.circle_pull,"ax",%progbits
 778              		.align	1
 779              		.global	circle_pull
 780              		.syntax unified
 781              		.thumb
 782              		.thumb_func
 784              	circle_pull:
 785              	.LVL28:
 786              	.LFB81:
  49:Core/Src/USER/circular_buffer.c **** 
  50:Core/Src/USER/circular_buffer.c **** unsigned char circle_pull(CCBuf *c)
  51:Core/Src/USER/circular_buffer.c **** {
 787              		.loc 4 51 1 is_stmt 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792              		.loc 4 51 1 is_stmt 0 view .LVU204
 793 0000 0346     		mov	r3, r0
  52:Core/Src/USER/circular_buffer.c **** unsigned char b;
 794              		.loc 4 52 1 is_stmt 1 view .LVU205
  53:Core/Src/USER/circular_buffer.c **** 	b=c->buffer[c->tail];
 795              		.loc 4 53 2 view .LVU206
 796              		.loc 4 53 5 is_stmt 0 view .LVU207
 797 0002 0168     		ldr	r1, [r0]
 798              		.loc 4 53 15 view .LVU208
 799 0004 8268     		ldr	r2, [r0, #8]
 800              		.loc 4 53 3 view .LVU209
 801 0006 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 802              	.LVL29:
  54:Core/Src/USER/circular_buffer.c **** 	c->tail++;
 803              		.loc 4 54 2 is_stmt 1 view .LVU210
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 30


 804              		.loc 4 54 9 is_stmt 0 view .LVU211
 805 0008 0132     		adds	r2, r2, #1
 806 000a 9A60     		str	r2, [r3, #8]
  55:Core/Src/USER/circular_buffer.c **** 	if(c->tail == c->max) {c->tail=0;}
 807              		.loc 4 55 2 is_stmt 1 view .LVU212
 808              		.loc 4 55 17 is_stmt 0 view .LVU213
 809 000c 1969     		ldr	r1, [r3, #16]
 810              		.loc 4 55 4 view .LVU214
 811 000e 8A42     		cmp	r2, r1
 812 0010 03D0     		beq	.L49
 813              	.L48:
  56:Core/Src/USER/circular_buffer.c **** 	c->count--;
 814              		.loc 4 56 2 is_stmt 1 view .LVU215
 815              		.loc 4 56 3 is_stmt 0 view .LVU216
 816 0012 DA68     		ldr	r2, [r3, #12]
 817              		.loc 4 56 10 view .LVU217
 818 0014 013A     		subs	r2, r2, #1
 819 0016 DA60     		str	r2, [r3, #12]
  57:Core/Src/USER/circular_buffer.c **** 	//if(c->count == c->max){c->count=0;} //error
  58:Core/Src/USER/circular_buffer.c **** return b;
 820              		.loc 4 58 1 is_stmt 1 view .LVU218
  59:Core/Src/USER/circular_buffer.c **** }
 821              		.loc 4 59 1 is_stmt 0 view .LVU219
 822 0018 7047     		bx	lr
 823              	.L49:
  55:Core/Src/USER/circular_buffer.c **** 	c->count--;
 824              		.loc 4 55 25 is_stmt 1 discriminator 1 view .LVU220
  55:Core/Src/USER/circular_buffer.c **** 	c->count--;
 825              		.loc 4 55 32 is_stmt 0 discriminator 1 view .LVU221
 826 001a 0022     		movs	r2, #0
 827 001c 9A60     		str	r2, [r3, #8]
 828 001e F8E7     		b	.L48
 829              		.cfi_endproc
 830              	.LFE81:
 832              		.section	.text.circle_push_buf,"ax",%progbits
 833              		.align	1
 834              		.global	circle_push_buf
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	circle_push_buf:
 840              	.LVL30:
 841              	.LFB82:
  60:Core/Src/USER/circular_buffer.c **** 
  61:Core/Src/USER/circular_buffer.c **** void circle_push_buf(CCBuf *c, unsigned char *b, size_t len)
  62:Core/Src/USER/circular_buffer.c **** {
 842              		.loc 4 62 1 is_stmt 1 view -0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 0
 845              		@ frame_needed = 0, uses_anonymous_args = 0
 846              		.loc 4 62 1 is_stmt 0 view .LVU223
 847 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 848              	.LCFI14:
 849              		.cfi_def_cfa_offset 24
 850              		.cfi_offset 3, -24
 851              		.cfi_offset 4, -20
 852              		.cfi_offset 5, -16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 31


 853              		.cfi_offset 6, -12
 854              		.cfi_offset 7, -8
 855              		.cfi_offset 14, -4
 856 0002 0746     		mov	r7, r0
 857 0004 0E46     		mov	r6, r1
 858 0006 1546     		mov	r5, r2
  63:Core/Src/USER/circular_buffer.c **** size_t i;
 859              		.loc 4 63 1 is_stmt 1 view .LVU224
  64:Core/Src/USER/circular_buffer.c **** for (i=0;i<len;i++){circle_push(c,b[i]);}
 860              		.loc 4 64 1 view .LVU225
 861              	.LVL31:
 862              		.loc 4 64 7 is_stmt 0 view .LVU226
 863 0008 0024     		movs	r4, #0
 864              		.loc 4 64 1 view .LVU227
 865 000a 04E0     		b	.L51
 866              	.LVL32:
 867              	.L52:
 868              		.loc 4 64 21 is_stmt 1 discriminator 3 view .LVU228
 869 000c 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 870 000e 3846     		mov	r0, r7
 871 0010 FFF7FEFF 		bl	circle_push
 872              	.LVL33:
 873              		.loc 4 64 16 discriminator 3 view .LVU229
 874              		.loc 4 64 17 is_stmt 0 discriminator 3 view .LVU230
 875 0014 0134     		adds	r4, r4, #1
 876              	.LVL34:
 877              	.L51:
 878              		.loc 4 64 10 is_stmt 1 discriminator 1 view .LVU231
 879              		.loc 4 64 1 is_stmt 0 discriminator 1 view .LVU232
 880 0016 AC42     		cmp	r4, r5
 881 0018 F8D3     		bcc	.L52
  65:Core/Src/USER/circular_buffer.c **** }
 882              		.loc 4 65 1 view .LVU233
 883 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 884              		.loc 4 65 1 view .LVU234
 885              		.cfi_endproc
 886              	.LFE82:
 888              		.section	.text.circle_available,"ax",%progbits
 889              		.align	1
 890              		.global	circle_available
 891              		.syntax unified
 892              		.thumb
 893              		.thumb_func
 895              	circle_available:
 896              	.LVL35:
 897              	.LFB83:
  66:Core/Src/USER/circular_buffer.c **** 
  67:Core/Src/USER/circular_buffer.c **** size_t circle_available(CCBuf *c)
  68:Core/Src/USER/circular_buffer.c **** {
 898              		.loc 4 68 1 is_stmt 1 view -0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902              		@ link register save eliminated.
  69:Core/Src/USER/circular_buffer.c **** return c->count;
 903              		.loc 4 69 1 view .LVU236
  70:Core/Src/USER/circular_buffer.c **** }
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 32


 904              		.loc 4 70 1 is_stmt 0 view .LVU237
 905 0000 C068     		ldr	r0, [r0, #12]
 906              	.LVL36:
 907              		.loc 4 70 1 view .LVU238
 908 0002 7047     		bx	lr
 909              		.cfi_endproc
 910              	.LFE83:
 912              		.section	.text.circle_free,"ax",%progbits
 913              		.align	1
 914              		.global	circle_free
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 919              	circle_free:
 920              	.LVL37:
 921              	.LFB84:
  71:Core/Src/USER/circular_buffer.c **** size_t circle_free(CCBuf *c)
  72:Core/Src/USER/circular_buffer.c **** {
 922              		.loc 4 72 1 is_stmt 1 view -0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926              		@ link register save eliminated.
  73:Core/Src/USER/circular_buffer.c **** return c->max - c->count;
 927              		.loc 4 73 1 view .LVU240
 928              		.loc 4 73 9 is_stmt 0 view .LVU241
 929 0000 0269     		ldr	r2, [r0, #16]
 930              		.loc 4 73 18 view .LVU242
 931 0002 C068     		ldr	r0, [r0, #12]
 932              	.LVL38:
  74:Core/Src/USER/circular_buffer.c **** }
 933              		.loc 4 74 1 view .LVU243
 934 0004 101A     		subs	r0, r2, r0
 935 0006 7047     		bx	lr
 936              		.cfi_endproc
 937              	.LFE84:
 939              		.section	.text.getRotation,"ax",%progbits
 940              		.align	1
 941              		.global	getRotation
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 946              	getRotation:
 947              	.LFB85:
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 948              		.loc 1 87 33 is_stmt 1 view -0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 0
 951              		@ frame_needed = 0, uses_anonymous_args = 0
 952              		@ link register save eliminated.
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 953              		.loc 1 87 35 view .LVU245
  87:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 954              		.loc 1 87 44 is_stmt 0 view .LVU246
 955 0000 0020     		movs	r0, #0
 956 0002 7047     		bx	lr
 957              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 33


 958              	.LFE85:
 960              		.section	.text.SSD1306_command1,"ax",%progbits
 961              		.align	1
 962              		.global	SSD1306_command1
 963              		.syntax unified
 964              		.thumb
 965              		.thumb_func
 967              	SSD1306_command1:
 968              	.LVL39:
 969              	.LFB86:
  93:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 970              		.loc 1 93 1 is_stmt 1 view -0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 8
 973              		@ frame_needed = 0, uses_anonymous_args = 0
  93:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 974              		.loc 1 93 1 is_stmt 0 view .LVU248
 975 0000 00B5     		push	{lr}
 976              	.LCFI15:
 977              		.cfi_def_cfa_offset 4
 978              		.cfi_offset 14, -4
 979 0002 85B0     		sub	sp, sp, #20
 980              	.LCFI16:
 981              		.cfi_def_cfa_offset 24
  94:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[0]=0; // DC=0, CO=0
 982              		.loc 1 94 1 is_stmt 1 view .LVU249
  95:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=c;
 983              		.loc 1 95 2 view .LVU250
  95:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=c;
 984              		.loc 1 95 6 is_stmt 0 view .LVU251
 985 0004 0023     		movs	r3, #0
 986 0006 8DF80C30 		strb	r3, [sp, #12]
  96:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 987              		.loc 1 96 2 is_stmt 1 view .LVU252
  96:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 988              		.loc 1 96 6 is_stmt 0 view .LVU253
 989 000a 8DF80D00 		strb	r0, [sp, #13]
  97:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 990              		.loc 1 97 2 is_stmt 1 view .LVU254
 991 000e C823     		movs	r3, #200
 992 0010 0093     		str	r3, [sp]
 993 0012 0223     		movs	r3, #2
 994 0014 03AA     		add	r2, sp, #12
 995 0016 7821     		movs	r1, #120
 996 0018 0248     		ldr	r0, .L59
 997              	.LVL40:
  97:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 998              		.loc 1 97 2 is_stmt 0 view .LVU255
 999 001a FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1000              	.LVL41:
  98:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 1001              		.loc 1 98 1 view .LVU256
 1002 001e 05B0     		add	sp, sp, #20
 1003              	.LCFI17:
 1004              		.cfi_def_cfa_offset 4
 1005              		@ sp needed
 1006 0020 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 34


 1007              	.L60:
 1008              		.align	2
 1009              	.L59:
 1010 0024 00000000 		.word	.LANCHOR0
 1011              		.cfi_endproc
 1012              	.LFE86:
 1014              		.section	.text.SSD1306_sendbuffer,"ax",%progbits
 1015              		.align	1
 1016              		.global	SSD1306_sendbuffer
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1021              	SSD1306_sendbuffer:
 1022              	.LVL42:
 1023              	.LFB87:
 102:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, c, n,SSD_MAX_DELAY);
 1024              		.loc 1 102 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 102:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, c, n,SSD_MAX_DELAY);
 1028              		.loc 1 102 1 is_stmt 0 view .LVU258
 1029 0000 00B5     		push	{lr}
 1030              	.LCFI18:
 1031              		.cfi_def_cfa_offset 4
 1032              		.cfi_offset 14, -4
 1033 0002 83B0     		sub	sp, sp, #12
 1034              	.LCFI19:
 1035              		.cfi_def_cfa_offset 16
 1036 0004 0246     		mov	r2, r0
 1037 0006 0B46     		mov	r3, r1
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1038              		.loc 1 103 2 is_stmt 1 view .LVU259
 1039 0008 C821     		movs	r1, #200
 1040              	.LVL43:
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1041              		.loc 1 103 2 is_stmt 0 view .LVU260
 1042 000a 0091     		str	r1, [sp]
 1043 000c 7821     		movs	r1, #120
 1044 000e 0348     		ldr	r0, .L63
 1045              	.LVL44:
 103:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1046              		.loc 1 103 2 view .LVU261
 1047 0010 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1048              	.LVL45:
 104:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 1049              		.loc 1 104 1 view .LVU262
 1050 0014 03B0     		add	sp, sp, #12
 1051              	.LCFI20:
 1052              		.cfi_def_cfa_offset 4
 1053              		@ sp needed
 1054 0016 5DF804FB 		ldr	pc, [sp], #4
 1055              	.L64:
 1056 001a 00BF     		.align	2
 1057              	.L63:
 1058 001c 00000000 		.word	.LANCHOR0
 1059              		.cfi_endproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 35


 1060              	.LFE87:
 1062              		.section	.text.SSD1306_write,"ax",%progbits
 1063              		.align	1
 1064              		.global	SSD1306_write
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1069              	SSD1306_write:
 1070              	.LVL46:
 1071              	.LFB88:
 108:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 1072              		.loc 1 108 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 108:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char a[2];
 1076              		.loc 1 108 1 is_stmt 0 view .LVU264
 1077 0000 00B5     		push	{lr}
 1078              	.LCFI21:
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 14, -4
 1081 0002 85B0     		sub	sp, sp, #20
 1082              	.LCFI22:
 1083              		.cfi_def_cfa_offset 24
 109:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* copypaste from datasheet:
 1084              		.loc 1 109 1 is_stmt 1 view .LVU265
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1085              		.loc 1 120 2 view .LVU266
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1086              		.loc 1 120 4 is_stmt 0 view .LVU267
 1087 0004 78B1     		cbz	r0, .L66
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1088              		.loc 1 120 10 is_stmt 1 discriminator 1 view .LVU268
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1089              		.loc 1 120 14 is_stmt 0 discriminator 1 view .LVU269
 1090 0006 4023     		movs	r3, #64
 1091 0008 8DF80C30 		strb	r3, [sp, #12]
 1092              	.L67:
 121:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 1093              		.loc 1 121 2 is_stmt 1 view .LVU270
 121:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	HAL_I2C_Master_Transmit(HI2C, SSD1306_ADR<<1, a, 2,SSD_MAX_DELAY);
 1094              		.loc 1 121 6 is_stmt 0 view .LVU271
 1095 000c 8DF80D10 		strb	r1, [sp, #13]
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1096              		.loc 1 122 2 is_stmt 1 view .LVU272
 1097 0010 C823     		movs	r3, #200
 1098 0012 0093     		str	r3, [sp]
 1099 0014 0223     		movs	r3, #2
 1100 0016 03AA     		add	r2, sp, #12
 1101 0018 7821     		movs	r1, #120
 1102              	.LVL47:
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1103              		.loc 1 122 2 is_stmt 0 view .LVU273
 1104 001a 0548     		ldr	r0, .L69
 1105              	.LVL48:
 122:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1106              		.loc 1 122 2 view .LVU274
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 36


 1107 001c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1108              	.LVL49:
 123:Core/Src/USER/oled/ssd1306_oled_i2c.c **** static char SSD1306_present(void)
 1109              		.loc 1 123 1 view .LVU275
 1110 0020 05B0     		add	sp, sp, #20
 1111              	.LCFI23:
 1112              		.cfi_remember_state
 1113              		.cfi_def_cfa_offset 4
 1114              		@ sp needed
 1115 0022 5DF804FB 		ldr	pc, [sp], #4
 1116              	.LVL50:
 1117              	.L66:
 1118              	.LCFI24:
 1119              		.cfi_restore_state
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1120              		.loc 1 120 34 is_stmt 1 discriminator 2 view .LVU276
 120:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	a[1]=data;
 1121              		.loc 1 120 38 is_stmt 0 discriminator 2 view .LVU277
 1122 0026 0023     		movs	r3, #0
 1123 0028 8DF80C30 		strb	r3, [sp, #12]
 1124 002c EEE7     		b	.L67
 1125              	.L70:
 1126 002e 00BF     		.align	2
 1127              	.L69:
 1128 0030 00000000 		.word	.LANCHOR0
 1129              		.cfi_endproc
 1130              	.LFE88:
 1132              		.section	.text.SSD1306_Init,"ax",%progbits
 1133              		.align	1
 1134              		.global	SSD1306_Init
 1135              		.syntax unified
 1136              		.thumb
 1137              		.thumb_func
 1139              	SSD1306_Init:
 1140              	.LFB90:
 129:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* ********* no more STM stuff bellow this line ****************************** */
 130:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 131:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 132:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* Init OLED screen */
 133:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 134:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 135:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 136:Core/Src/USER/oled/ssd1306_oled_i2c.c **** char SSD1306_Init(void)
 137:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 1141              		.loc 1 137 1 is_stmt 1 view -0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145 0000 08B5     		push	{r3, lr}
 1146              	.LCFI25:
 1147              		.cfi_def_cfa_offset 8
 1148              		.cfi_offset 3, -8
 1149              		.cfi_offset 14, -4
 138:Core/Src/USER/oled/ssd1306_oled_i2c.c **** SSD1306_command1(SSD1306_DISPLAYOFF);
 1150              		.loc 1 138 1 view .LVU279
 1151 0002 AE20     		movs	r0, #174
 1152 0004 FFF7FEFF 		bl	SSD1306_command1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 37


 1153              	.LVL51:
 139:Core/Src/USER/oled/ssd1306_oled_i2c.c **** HAL_Delay(2000); //test on hardware
 1154              		.loc 1 139 1 view .LVU280
 1155 0008 4FF4FA60 		mov	r0, #2000
 1156 000c FFF7FEFF 		bl	HAL_Delay
 1157              	.LVL52:
 140:Core/Src/USER/oled/ssd1306_oled_i2c.c **** if(SSD1306_present()==0) {return 0;}
 1158              		.loc 1 140 1 view .LVU281
 1159              		.loc 1 140 4 is_stmt 0 view .LVU282
 1160 0010 FFF7FEFF 		bl	SSD1306_present
 1161              	.LVL53:
 1162              		.loc 1 140 3 view .LVU283
 1163 0014 00B9     		cbnz	r0, .L74
 1164              	.L72:
 141:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 142:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Configurations are send to device in chunks of data. It is faster and smaller.
 143:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // For final products (with static configuration) it is possible to set all config
 144:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // in one array and send all data in one block.
 145:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 146:Core/Src/USER/oled/ssd1306_oled_i2c.c **** static unsigned char init1[]= {0x00, // first byte command !
 147:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYOFF,
 148:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETDISPLAYCLOCKDIV,	0x80, //7:4 bitai-freq (default 0b1000). 3:0-div(1-16)
 149:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETMULTIPLEX, SSD1306_HEIGHT-1,  //
 150:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETDISPLAYOFFSET,             // 0xD3
 151:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	0x0,                                  // no offset
 152:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETSTARTLINE | 0x0,           // line #0
 153:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_CHARGEPUMP,CHRPUMP,           // 0x8D
 154:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 155:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_MEMORYMODE,                   // 0x20
 156:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	0x00,                                 // 0x0 act like ks0108
 157:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SEGREMAP | 0x1,
 158:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_COMSCANDEC,
 159:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 160:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETCOMPINS,SSD_COMPINS,
 161:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETCONTRAST,SSD_CONTRAST,
 162:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETPRECHARGE,PRECHARGE, //((vccstate == SSD1306_EXTERNALVCC) ? 0x22 : 0xF1)};
 163:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 164:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_SETVCOMDETECT,               // 0xDB
 165:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	0x40,
 166:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYALLON_RESUME,         // 0xA4
 167:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_NORMALDISPLAY,               // 0xA6
 168:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DEACTIVATE_SCROLL,
 169:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYON };                 // Main screen turn on
 170:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(init1, sizeof(init1));
 171:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 172:Core/Src/USER/oled/ssd1306_oled_i2c.c **** return 1;
 173:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1165              		.loc 1 173 1 view .LVU284
 1166 0016 08BD     		pop	{r3, pc}
 1167              	.L74:
 146:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_DISPLAYOFF,
 1168              		.loc 1 146 1 is_stmt 1 view .LVU285
 170:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 1169              		.loc 1 170 2 view .LVU286
 1170 0018 1B21     		movs	r1, #27
 1171 001a 0248     		ldr	r0, .L75
 1172 001c FFF7FEFF 		bl	SSD1306_sendbuffer
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 38


 1173              	.LVL54:
 172:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1174              		.loc 1 172 1 view .LVU287
 172:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1175              		.loc 1 172 8 is_stmt 0 view .LVU288
 1176 0020 0120     		movs	r0, #1
 1177 0022 F8E7     		b	.L72
 1178              	.L76:
 1179              		.align	2
 1180              	.L75:
 1181 0024 00000000 		.word	.LANCHOR4
 1182              		.cfi_endproc
 1183              	.LFE90:
 1185              		.section	.text.SSD1306_off,"ax",%progbits
 1186              		.align	1
 1187              		.global	SSD1306_off
 1188              		.syntax unified
 1189              		.thumb
 1190              		.thumb_func
 1192              	SSD1306_off:
 1193              	.LFB91:
 174:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 175:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* small subroutines to make world brighter */
 176:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_off(void){SSD1306_command1(SSD1306_DISPLAYOFF);}
 1194              		.loc 1 176 23 is_stmt 1 view -0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 0, uses_anonymous_args = 0
 1198 0000 08B5     		push	{r3, lr}
 1199              	.LCFI26:
 1200              		.cfi_def_cfa_offset 8
 1201              		.cfi_offset 3, -8
 1202              		.cfi_offset 14, -4
 1203              		.loc 1 176 24 view .LVU290
 1204 0002 AE20     		movs	r0, #174
 1205 0004 FFF7FEFF 		bl	SSD1306_command1
 1206              	.LVL55:
 1207              		.loc 1 176 61 is_stmt 0 view .LVU291
 1208 0008 08BD     		pop	{r3, pc}
 1209              		.cfi_endproc
 1210              	.LFE91:
 1212              		.section	.text.SSD1306_on,"ax",%progbits
 1213              		.align	1
 1214              		.global	SSD1306_on
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1219              	SSD1306_on:
 1220              	.LFB92:
 177:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_on(void){SSD1306_command1(SSD1306_DISPLAYON);}
 1221              		.loc 1 177 22 is_stmt 1 view -0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225 0000 08B5     		push	{r3, lr}
 1226              	.LCFI27:
 1227              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 39


 1228              		.cfi_offset 3, -8
 1229              		.cfi_offset 14, -4
 1230              		.loc 1 177 23 view .LVU293
 1231 0002 AF20     		movs	r0, #175
 1232 0004 FFF7FEFF 		bl	SSD1306_command1
 1233              	.LVL56:
 1234              		.loc 1 177 59 is_stmt 0 view .LVU294
 1235 0008 08BD     		pop	{r3, pc}
 1236              		.cfi_endproc
 1237              	.LFE92:
 1239              		.section	.text.SSD1306_invert,"ax",%progbits
 1240              		.align	1
 1241              		.global	SSD1306_invert
 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1246              	SSD1306_invert:
 1247              	.LFB93:
 178:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_invert(void){SSD1306_command1(SSD1306_INVERTDISPLAY);}
 1248              		.loc 1 178 26 is_stmt 1 view -0
 1249              		.cfi_startproc
 1250              		@ args = 0, pretend = 0, frame = 0
 1251              		@ frame_needed = 0, uses_anonymous_args = 0
 1252 0000 08B5     		push	{r3, lr}
 1253              	.LCFI28:
 1254              		.cfi_def_cfa_offset 8
 1255              		.cfi_offset 3, -8
 1256              		.cfi_offset 14, -4
 1257              		.loc 1 178 27 view .LVU296
 1258 0002 A720     		movs	r0, #167
 1259 0004 FFF7FEFF 		bl	SSD1306_command1
 1260              	.LVL57:
 1261              		.loc 1 178 67 is_stmt 0 view .LVU297
 1262 0008 08BD     		pop	{r3, pc}
 1263              		.cfi_endproc
 1264              	.LFE93:
 1266              		.section	.text.SSD1306_normal,"ax",%progbits
 1267              		.align	1
 1268              		.global	SSD1306_normal
 1269              		.syntax unified
 1270              		.thumb
 1271              		.thumb_func
 1273              	SSD1306_normal:
 1274              	.LFB94:
 179:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_normal(void){SSD1306_command1(SSD1306_NORMALDISPLAY);}
 1275              		.loc 1 179 26 is_stmt 1 view -0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 0
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279 0000 08B5     		push	{r3, lr}
 1280              	.LCFI29:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 3, -8
 1283              		.cfi_offset 14, -4
 1284              		.loc 1 179 27 view .LVU299
 1285 0002 A620     		movs	r0, #166
 1286 0004 FFF7FEFF 		bl	SSD1306_command1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 40


 1287              	.LVL58:
 1288              		.loc 1 179 67 is_stmt 0 view .LVU300
 1289 0008 08BD     		pop	{r3, pc}
 1290              		.cfi_endproc
 1291              	.LFE94:
 1293              		.section	.text.SSD1306_flip,"ax",%progbits
 1294              		.align	1
 1295              		.global	SSD1306_flip
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	SSD1306_flip:
 1301              	.LVL59:
 1302              	.LFB95:
 180:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_flip(unsigned char m){SSD1306_command1((m==0)? SSD1306_COMSCANINC : SSD1306_COMSCANDEC
 1303              		.loc 1 180 35 is_stmt 1 view -0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 0
 1306              		@ frame_needed = 0, uses_anonymous_args = 0
 1307              		.loc 1 180 35 is_stmt 0 view .LVU302
 1308 0000 08B5     		push	{r3, lr}
 1309              	.LCFI30:
 1310              		.cfi_def_cfa_offset 8
 1311              		.cfi_offset 3, -8
 1312              		.cfi_offset 14, -4
 1313              		.loc 1 180 36 is_stmt 1 view .LVU303
 1314 0002 18B9     		cbnz	r0, .L87
 1315 0004 C020     		movs	r0, #192
 1316              	.LVL60:
 1317              	.L86:
 1318              		.loc 1 180 36 is_stmt 0 discriminator 4 view .LVU304
 1319 0006 FFF7FEFF 		bl	SSD1306_command1
 1320              	.LVL61:
 1321              		.loc 1 180 102 discriminator 4 view .LVU305
 1322 000a 08BD     		pop	{r3, pc}
 1323              	.LVL62:
 1324              	.L87:
 1325              		.loc 1 180 36 view .LVU306
 1326 000c C820     		movs	r0, #200
 1327              	.LVL63:
 1328              		.loc 1 180 36 view .LVU307
 1329 000e FAE7     		b	.L86
 1330              		.cfi_endproc
 1331              	.LFE95:
 1333              		.section	.text.SSD1306_set_addr_mode,"ax",%progbits
 1334              		.align	1
 1335              		.global	SSD1306_set_addr_mode
 1336              		.syntax unified
 1337              		.thumb
 1338              		.thumb_func
 1340              	SSD1306_set_addr_mode:
 1341              	.LVL64:
 1342              	.LFB96:
 181:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 182:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_set_addr_mode(uint8_t mode) {
 1343              		.loc 1 182 42 is_stmt 1 view -0
 1344              		.cfi_startproc
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 41


 1345              		@ args = 0, pretend = 0, frame = 8
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              		.loc 1 182 42 is_stmt 0 view .LVU309
 1348 0000 00B5     		push	{lr}
 1349              	.LCFI31:
 1350              		.cfi_def_cfa_offset 4
 1351              		.cfi_offset 14, -4
 1352 0002 83B0     		sub	sp, sp, #12
 1353              	.LCFI32:
 1354              		.cfi_def_cfa_offset 16
 183:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// 0 -> horizontal (write column, increment column pointer, at column overrun reset column pointer
 184:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// 1 -> vertical (write column, increment page pointer, at page overrun reset page pointer and inc
 185:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// 2 -> page (write column, increment column pointer, reset column pointer at overrun)
 186:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char data[]={0,SSD1306_MEMORYMODE,((mode < 2) ? mode : 0)};
 1355              		.loc 1 186 2 is_stmt 1 view .LVU310
 1356              		.loc 1 186 16 is_stmt 0 view .LVU311
 1357 0004 0023     		movs	r3, #0
 1358 0006 8DF80430 		strb	r3, [sp, #4]
 1359 000a 2023     		movs	r3, #32
 1360 000c 8DF80530 		strb	r3, [sp, #5]
 1361 0010 0128     		cmp	r0, #1
 1362 0012 00D9     		bls	.L90
 1363 0014 0020     		movs	r0, #0
 1364              	.LVL65:
 1365              	.L90:
 1366              		.loc 1 186 16 discriminator 4 view .LVU312
 1367 0016 8DF80600 		strb	r0, [sp, #6]
 187:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(data, sizeof(data));	
 1368              		.loc 1 187 2 is_stmt 1 discriminator 4 view .LVU313
 1369 001a 0321     		movs	r1, #3
 1370 001c 01A8     		add	r0, sp, #4
 1371 001e FFF7FEFF 		bl	SSD1306_sendbuffer
 1372              	.LVL66:
 188:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1373              		.loc 1 188 1 is_stmt 0 discriminator 4 view .LVU314
 1374 0022 03B0     		add	sp, sp, #12
 1375              	.LCFI33:
 1376              		.cfi_def_cfa_offset 4
 1377              		@ sp needed
 1378 0024 5DF804FB 		ldr	pc, [sp], #4
 1379              		.cfi_endproc
 1380              	.LFE96:
 1382              		.section	.text.SSD1306_scroll,"ax",%progbits
 1383              		.align	1
 1384              		.global	SSD1306_scroll
 1385              		.syntax unified
 1386              		.thumb
 1387              		.thumb_func
 1389              	SSD1306_scroll:
 1390              	.LVL67:
 1391              	.LFB97:
 189:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_scroll(unsigned char n)
 190:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 1392              		.loc 1 190 1 is_stmt 1 view -0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 8
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 42


 1396              		.loc 1 190 1 is_stmt 0 view .LVU316
 1397 0000 00B5     		push	{lr}
 1398              	.LCFI34:
 1399              		.cfi_def_cfa_offset 4
 1400              		.cfi_offset 14, -4
 1401 0002 83B0     		sub	sp, sp, #12
 1402              	.LCFI35:
 1403              		.cfi_def_cfa_offset 16
 191:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char data[]={0,SSD1306_SETDISPLAYOFFSET,n & 0b01111111};
 1404              		.loc 1 191 2 is_stmt 1 view .LVU317
 1405              		.loc 1 191 16 is_stmt 0 view .LVU318
 1406 0004 0023     		movs	r3, #0
 1407 0006 8DF80430 		strb	r3, [sp, #4]
 1408 000a D323     		movs	r3, #211
 1409 000c 8DF80530 		strb	r3, [sp, #5]
 1410              		.loc 1 191 53 view .LVU319
 1411 0010 00F07F00 		and	r0, r0, #127
 1412              	.LVL68:
 1413              		.loc 1 191 16 view .LVU320
 1414 0014 8DF80600 		strb	r0, [sp, #6]
 192:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(data, sizeof(data));
 1415              		.loc 1 192 2 is_stmt 1 view .LVU321
 1416 0018 0321     		movs	r1, #3
 1417 001a 01A8     		add	r0, sp, #4
 1418 001c FFF7FEFF 		bl	SSD1306_sendbuffer
 1419              	.LVL69:
 193:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1420              		.loc 1 193 1 is_stmt 0 view .LVU322
 1421 0020 03B0     		add	sp, sp, #12
 1422              	.LCFI36:
 1423              		.cfi_def_cfa_offset 4
 1424              		@ sp needed
 1425 0022 5DF804FB 		ldr	pc, [sp], #4
 1426              		.cfi_endproc
 1427              	.LFE97:
 1429              		.section	.text.SSD1306_put_tile,"ax",%progbits
 1430              		.align	1
 1431              		.global	SSD1306_put_tile
 1432              		.syntax unified
 1433              		.thumb
 1434              		.thumb_func
 1436              	SSD1306_put_tile:
 1437              	.LVL70:
 1438              	.LFB98:
 194:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* send buffer to device. We need to add first "command/data" byte in the buffer.
 195:Core/Src/USER/oled/ssd1306_oled_i2c.c ****    This gives us all rush with allocation, copying and flushing memory. */
 196:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_put_tile(uint8_t *tile, uint8_t limit) {
 1439              		.loc 1 196 53 is_stmt 1 view -0
 1440              		.cfi_startproc
 1441              		@ args = 0, pretend = 0, frame = 0
 1442              		@ frame_needed = 0, uses_anonymous_args = 0
 1443              		.loc 1 196 53 is_stmt 0 view .LVU324
 1444 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1445              	.LCFI37:
 1446              		.cfi_def_cfa_offset 24
 1447              		.cfi_offset 3, -24
 1448              		.cfi_offset 4, -20
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 43


 1449              		.cfi_offset 5, -16
 1450              		.cfi_offset 6, -12
 1451              		.cfi_offset 7, -8
 1452              		.cfi_offset 14, -4
 1453 0002 0646     		mov	r6, r0
 1454 0004 0D46     		mov	r5, r1
 197:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char *tempbuf=(unsigned char *) malloc(limit+1);
 1455              		.loc 1 197 2 is_stmt 1 view .LVU325
 1456              		.loc 1 197 55 is_stmt 0 view .LVU326
 1457 0006 4F1C     		adds	r7, r1, #1
 1458              		.loc 1 197 43 view .LVU327
 1459 0008 3846     		mov	r0, r7
 1460              	.LVL71:
 1461              		.loc 1 197 43 view .LVU328
 1462 000a FFF7FEFF 		bl	malloc
 1463              	.LVL72:
 1464              		.loc 1 197 43 view .LVU329
 1465 000e 0446     		mov	r4, r0
 1466              	.LVL73:
 198:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	memcpy(tempbuf+1,tile,limit); tempbuf[0]=0b01000000; //data mode
 1467              		.loc 1 198 2 is_stmt 1 view .LVU330
 1468 0010 2A46     		mov	r2, r5
 1469 0012 3146     		mov	r1, r6
 1470 0014 0130     		adds	r0, r0, #1
 1471              	.LVL74:
 1472              		.loc 1 198 2 is_stmt 0 view .LVU331
 1473 0016 FFF7FEFF 		bl	memcpy
 1474              	.LVL75:
 1475              		.loc 1 198 32 is_stmt 1 view .LVU332
 1476              		.loc 1 198 42 is_stmt 0 view .LVU333
 1477 001a 4023     		movs	r3, #64
 1478 001c 2370     		strb	r3, [r4]
 199:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(tempbuf,limit+1);
 1479              		.loc 1 199 2 is_stmt 1 view .LVU334
 1480 001e F9B2     		uxtb	r1, r7
 1481 0020 2046     		mov	r0, r4
 1482 0022 FFF7FEFF 		bl	SSD1306_sendbuffer
 1483              	.LVL76:
 200:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	free(tempbuf);
 1484              		.loc 1 200 2 view .LVU335
 1485 0026 2046     		mov	r0, r4
 1486 0028 FFF7FEFF 		bl	free
 1487              	.LVL77:
 201:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1488              		.loc 1 201 1 is_stmt 0 view .LVU336
 1489 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1490              		.loc 1 201 1 view .LVU337
 1491              		.cfi_endproc
 1492              	.LFE98:
 1494              		.section	.text.SSD1306_putc_raw,"ax",%progbits
 1495              		.align	1
 1496              		.global	SSD1306_putc_raw
 1497              		.syntax unified
 1498              		.thumb
 1499              		.thumb_func
 1501              	SSD1306_putc_raw:
 1502              	.LVL78:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 44


 1503              	.LFB99:
 202:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 203:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* print char (raw mode)-according font table */
 204:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_putc_raw(char c) {
 1504              		.loc 1 204 31 is_stmt 1 view -0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 0
 1507              		@ frame_needed = 0, uses_anonymous_args = 0
 1508              		.loc 1 204 31 is_stmt 0 view .LVU339
 1509 0000 08B5     		push	{r3, lr}
 1510              	.LCFI38:
 1511              		.cfi_def_cfa_offset 8
 1512              		.cfi_offset 3, -8
 1513              		.cfi_offset 14, -4
 205:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_put_tile(font+(c<<3),8);
 1514              		.loc 1 205 2 is_stmt 1 view .LVU340
 1515 0002 0821     		movs	r1, #8
 1516 0004 024B     		ldr	r3, .L99
 1517 0006 03EBC000 		add	r0, r3, r0, lsl #3
 1518              	.LVL79:
 1519              		.loc 1 205 2 is_stmt 0 view .LVU341
 1520 000a FFF7FEFF 		bl	SSD1306_put_tile
 1521              	.LVL80:
 206:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1522              		.loc 1 206 1 view .LVU342
 1523 000e 08BD     		pop	{r3, pc}
 1524              	.L100:
 1525              		.align	2
 1526              	.L99:
 1527 0010 00000000 		.word	.LANCHOR5
 1528              		.cfi_endproc
 1529              	.LFE99:
 1531              		.section	.text.SSD1306_putc,"ax",%progbits
 1532              		.align	1
 1533              		.global	SSD1306_putc
 1534              		.syntax unified
 1535              		.thumb
 1536              		.thumb_func
 1538              	SSD1306_putc:
 1539              	.LVL81:
 1540              	.LFB100:
 207:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 208:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* print char from ASCII */
 209:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_putc(char c) {
 1541              		.loc 1 209 27 is_stmt 1 view -0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              		.loc 1 209 27 is_stmt 0 view .LVU344
 1546 0000 08B5     		push	{r3, lr}
 1547              	.LCFI39:
 1548              		.cfi_def_cfa_offset 8
 1549              		.cfi_offset 3, -8
 1550              		.cfi_offset 14, -4
 210:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// remap from petscii to ascii, shifts drawing characters into the lower 32 ascii cells
 211:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(c > 'A' && c < 'Z') { }               // upper-case ascii range
 1551              		.loc 1 211 2 is_stmt 1 view .LVU345
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 45


 1552              		.loc 1 211 13 is_stmt 0 view .LVU346
 1553 0002 A0F14203 		sub	r3, r0, #66
 1554 0006 DBB2     		uxtb	r3, r3
 1555              		.loc 1 211 4 view .LVU347
 1556 0008 172B     		cmp	r3, #23
 1557 000a 06D9     		bls	.L102
 212:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 'a' && c < 'z') { c -= 96; } // lower-case ascii range
 1558              		.loc 1 212 7 is_stmt 1 view .LVU348
 1559              		.loc 1 212 18 is_stmt 0 view .LVU349
 1560 000c A0F16203 		sub	r3, r0, #98
 1561 0010 DBB2     		uxtb	r3, r3
 1562              		.loc 1 212 9 view .LVU350
 1563 0012 172B     		cmp	r3, #23
 1564 0014 04D8     		bhi	.L103
 1565              		.loc 1 212 32 is_stmt 1 discriminator 1 view .LVU351
 1566              		.loc 1 212 34 is_stmt 0 discriminator 1 view .LVU352
 1567 0016 6038     		subs	r0, r0, #96
 1568              	.LVL82:
 1569              		.loc 1 212 34 discriminator 1 view .LVU353
 1570 0018 C0B2     		uxtb	r0, r0
 1571              	.LVL83:
 1572              	.L102:
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c < 32) { c += 96; }             // low ascii
 215:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1573              		.loc 1 215 2 is_stmt 1 view .LVU354
 1574 001a FFF7FEFF 		bl	SSD1306_putc_raw
 1575              	.LVL84:
 216:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1576              		.loc 1 216 1 is_stmt 0 view .LVU355
 1577 001e 08BD     		pop	{r3, pc}
 1578              	.LVL85:
 1579              	.L103:
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 1580              		.loc 1 213 7 is_stmt 1 view .LVU356
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 1581              		.loc 1 213 17 is_stmt 0 view .LVU357
 1582 0020 A0F12003 		sub	r3, r0, #32
 1583 0024 DBB2     		uxtb	r3, r3
 213:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else if(c > 31 && c < 64) { }            // numbers and symbols
 1584              		.loc 1 213 9 view .LVU358
 1585 0026 1F2B     		cmp	r3, #31
 1586 0028 F7D9     		bls	.L102
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1587              		.loc 1 214 7 is_stmt 1 view .LVU359
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1588              		.loc 1 214 9 is_stmt 0 view .LVU360
 1589 002a 1F28     		cmp	r0, #31
 1590 002c F5D8     		bhi	.L102
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1591              		.loc 1 214 20 is_stmt 1 discriminator 1 view .LVU361
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1592              		.loc 1 214 22 is_stmt 0 discriminator 1 view .LVU362
 1593 002e 6030     		adds	r0, r0, #96
 1594              	.LVL86:
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1595              		.loc 1 214 22 discriminator 1 view .LVU363
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 46


 1596 0030 C0B2     		uxtb	r0, r0
 1597              	.LVL87:
 214:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc_raw(c);
 1598              		.loc 1 214 22 discriminator 1 view .LVU364
 1599 0032 F2E7     		b	.L102
 1600              		.cfi_endproc
 1601              	.LFE100:
 1603              		.section	.text.SSD1306_move_raw,"ax",%progbits
 1604              		.align	1
 1605              		.global	SSD1306_move_raw
 1606              		.syntax unified
 1607              		.thumb
 1608              		.thumb_func
 1610              	SSD1306_move_raw:
 1611              	.LVL88:
 1612              	.LFB101:
 217:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 218:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* move to position in pixels/bytes */
 219:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_move_raw(uint8_t row, uint8_t col) {
 1613              		.loc 1 219 49 is_stmt 1 view -0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 8
 1616              		@ frame_needed = 0, uses_anonymous_args = 0
 1617              		.loc 1 219 49 is_stmt 0 view .LVU366
 1618 0000 00B5     		push	{lr}
 1619              	.LCFI40:
 1620              		.cfi_def_cfa_offset 4
 1621              		.cfi_offset 14, -4
 1622 0002 83B0     		sub	sp, sp, #12
 1623              	.LCFI41:
 1624              		.cfi_def_cfa_offset 16
 220:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(col > 127) { col = 127; }
 1625              		.loc 1 220 2 is_stmt 1 view .LVU367
 1626              		.loc 1 220 4 is_stmt 0 view .LVU368
 1627 0004 11F0800F 		tst	r1, #128
 1628 0008 1CD1     		bne	.L111
 1629              	.LVL89:
 1630              	.L106:
 221:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }
 1631              		.loc 1 221 2 is_stmt 1 view .LVU369
 1632              		.loc 1 221 4 is_stmt 0 view .LVU370
 1633 000a 0728     		cmp	r0, #7
 1634 000c 00D9     		bls	.L107
 1635              		.loc 1 221 20 view .LVU371
 1636 000e 0720     		movs	r0, #7
 1637              	.LVL90:
 1638              	.L107:
 222:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char data[]={0,SSD1306_COLUMNADDR,col,0x7F,SSD1306_PAGEADDR,row,SSD_MAGIC};
 1639              		.loc 1 222 2 is_stmt 1 view .LVU372
 1640              		.loc 1 222 16 is_stmt 0 view .LVU373
 1641 0010 0023     		movs	r3, #0
 1642 0012 8DF80030 		strb	r3, [sp]
 1643 0016 2123     		movs	r3, #33
 1644 0018 8DF80130 		strb	r3, [sp, #1]
 1645 001c 8DF80210 		strb	r1, [sp, #2]
 1646 0020 7F23     		movs	r3, #127
 1647 0022 8DF80330 		strb	r3, [sp, #3]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 47


 1648 0026 2223     		movs	r3, #34
 1649 0028 8DF80430 		strb	r3, [sp, #4]
 1650 002c 8DF80500 		strb	r0, [sp, #5]
 1651 0030 0323     		movs	r3, #3
 1652 0032 8DF80630 		strb	r3, [sp, #6]
 223:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_sendbuffer(data, sizeof(data));
 1653              		.loc 1 223 2 is_stmt 1 view .LVU374
 1654 0036 0721     		movs	r1, #7
 1655              	.LVL91:
 1656              		.loc 1 223 2 is_stmt 0 view .LVU375
 1657 0038 6846     		mov	r0, sp
 1658              	.LVL92:
 1659              		.loc 1 223 2 view .LVU376
 1660 003a FFF7FEFF 		bl	SSD1306_sendbuffer
 1661              	.LVL93:
 224:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1662              		.loc 1 224 1 view .LVU377
 1663 003e 03B0     		add	sp, sp, #12
 1664              	.LCFI42:
 1665              		.cfi_remember_state
 1666              		.cfi_def_cfa_offset 4
 1667              		@ sp needed
 1668 0040 5DF804FB 		ldr	pc, [sp], #4
 1669              	.LVL94:
 1670              	.L111:
 1671              	.LCFI43:
 1672              		.cfi_restore_state
 220:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }
 1673              		.loc 1 220 22 view .LVU378
 1674 0044 7F21     		movs	r1, #127
 1675              	.LVL95:
 220:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }
 1676              		.loc 1 220 22 view .LVU379
 1677 0046 E0E7     		b	.L106
 1678              		.cfi_endproc
 1679              	.LFE101:
 1681              		.section	.text.SSD1306_move,"ax",%progbits
 1682              		.align	1
 1683              		.global	SSD1306_move
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1688              	SSD1306_move:
 1689              	.LVL96:
 1690              	.LFB102:
 225:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 226:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* move to position in char positions */
 227:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_move(uint8_t row, uint8_t col) {
 1691              		.loc 1 227 45 is_stmt 1 view -0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              		.loc 1 227 45 is_stmt 0 view .LVU381
 1696 0000 08B5     		push	{r3, lr}
 1697              	.LCFI44:
 1698              		.cfi_def_cfa_offset 8
 1699              		.cfi_offset 3, -8
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 48


 1700              		.cfi_offset 14, -4
 228:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(col > 15) { col = 15; }
 1701              		.loc 1 228 2 is_stmt 1 view .LVU382
 1702              		.loc 1 228 4 is_stmt 0 view .LVU383
 1703 0002 0F29     		cmp	r1, #15
 1704 0004 00D9     		bls	.L113
 1705              		.loc 1 228 21 view .LVU384
 1706 0006 0F21     		movs	r1, #15
 1707              	.LVL97:
 1708              	.L113:
 229:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(row > 7) { row = 7; }	
 1709              		.loc 1 229 2 is_stmt 1 view .LVU385
 1710              		.loc 1 229 4 is_stmt 0 view .LVU386
 1711 0008 0728     		cmp	r0, #7
 1712 000a 00D9     		bls	.L114
 1713              		.loc 1 229 20 view .LVU387
 1714 000c 0720     		movs	r0, #7
 1715              	.LVL98:
 1716              	.L114:
 230:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move_raw(row, col << 3);
 1717              		.loc 1 230 2 is_stmt 1 view .LVU388
 1718 000e C900     		lsls	r1, r1, #3
 1719              	.LVL99:
 1720              		.loc 1 230 2 is_stmt 0 view .LVU389
 1721 0010 01F0F801 		and	r1, r1, #248
 1722 0014 FFF7FEFF 		bl	SSD1306_move_raw
 1723              	.LVL100:
 231:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1724              		.loc 1 231 1 view .LVU390
 1725 0018 08BD     		pop	{r3, pc}
 1726              		.cfi_endproc
 1727              	.LFE102:
 1729              		.section	.text.SSD1306_home,"ax",%progbits
 1730              		.align	1
 1731              		.global	SSD1306_home
 1732              		.syntax unified
 1733              		.thumb
 1734              		.thumb_func
 1736              	SSD1306_home:
 1737              	.LFB103:
 232:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 233:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* move to "home" positions. Just make it easier to type */
 234:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_home() {SSD1306_move_raw(0,0);}
 1738              		.loc 1 234 21 is_stmt 1 view -0
 1739              		.cfi_startproc
 1740              		@ args = 0, pretend = 0, frame = 0
 1741              		@ frame_needed = 0, uses_anonymous_args = 0
 1742 0000 08B5     		push	{r3, lr}
 1743              	.LCFI45:
 1744              		.cfi_def_cfa_offset 8
 1745              		.cfi_offset 3, -8
 1746              		.cfi_offset 14, -4
 1747              		.loc 1 234 22 view .LVU392
 1748 0002 0021     		movs	r1, #0
 1749 0004 0846     		mov	r0, r1
 1750 0006 FFF7FEFF 		bl	SSD1306_move_raw
 1751              	.LVL101:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 49


 1752              		.loc 1 234 44 is_stmt 0 view .LVU393
 1753 000a 08BD     		pop	{r3, pc}
 1754              		.cfi_endproc
 1755              	.LFE103:
 1757              		.section	.text.SSD1306_clear,"ax",%progbits
 1758              		.align	1
 1759              		.global	SSD1306_clear
 1760              		.syntax unified
 1761              		.thumb
 1762              		.thumb_func
 1764              	SSD1306_clear:
 1765              	.LVL102:
 1766              	.LFB104:
 235:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 236:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* clear screen/fill screen with byte pattern */
 237:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_clear(unsigned char c) {
 1767              		.loc 1 237 37 is_stmt 1 view -0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 16
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              		.loc 1 237 37 is_stmt 0 view .LVU395
 1772 0000 10B5     		push	{r4, lr}
 1773              	.LCFI46:
 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 4, -8
 1776              		.cfi_offset 14, -4
 1777 0002 84B0     		sub	sp, sp, #16
 1778              	.LCFI47:
 1779              		.cfi_def_cfa_offset 24
 1780 0004 0446     		mov	r4, r0
 238:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_home();
 1781              		.loc 1 238 2 is_stmt 1 view .LVU396
 1782 0006 FFF7FEFF 		bl	SSD1306_home
 1783              	.LVL103:
 239:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// just fill 128*64 pixels = 8192 bits = 1024bytes =1kb.
 240:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	// I do it in 8 bytes blocks= 128 times.
 241:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char tmp[]={0b01000000,c,c,c,c,c,c,c,c};
 1784              		.loc 1 241 1 view .LVU397
 1785              		.loc 1 241 15 is_stmt 0 view .LVU398
 1786 000a 4023     		movs	r3, #64
 1787 000c 8DF80430 		strb	r3, [sp, #4]
 1788 0010 8DF80540 		strb	r4, [sp, #5]
 1789 0014 8DF80640 		strb	r4, [sp, #6]
 1790 0018 8DF80740 		strb	r4, [sp, #7]
 1791 001c 8DF80840 		strb	r4, [sp, #8]
 1792 0020 8DF80940 		strb	r4, [sp, #9]
 1793 0024 8DF80A40 		strb	r4, [sp, #10]
 1794 0028 8DF80B40 		strb	r4, [sp, #11]
 1795 002c 8DF80C40 		strb	r4, [sp, #12]
 242:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 128; i > 0; i--) {SSD1306_sendbuffer(tmp, sizeof(tmp));}
 1796              		.loc 1 242 2 is_stmt 1 view .LVU399
 1797              	.LBB8:
 1798              		.loc 1 242 6 view .LVU400
 1799              	.LVL104:
 1800              		.loc 1 242 14 is_stmt 0 view .LVU401
 1801 0030 8024     		movs	r4, #128
 1802              		.loc 1 242 2 view .LVU402
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 50


 1803 0032 05E0     		b	.L121
 1804              	.LVL105:
 1805              	.L122:
 1806              		.loc 1 242 36 is_stmt 1 discriminator 3 view .LVU403
 1807 0034 0921     		movs	r1, #9
 1808 0036 01A8     		add	r0, sp, #4
 1809 0038 FFF7FEFF 		bl	SSD1306_sendbuffer
 1810              	.LVL106:
 1811              		.loc 1 242 30 discriminator 3 view .LVU404
 1812              		.loc 1 242 31 is_stmt 0 discriminator 3 view .LVU405
 1813 003c 013C     		subs	r4, r4, #1
 1814              	.LVL107:
 1815              		.loc 1 242 31 discriminator 3 view .LVU406
 1816 003e E4B2     		uxtb	r4, r4
 1817              	.LVL108:
 1818              	.L121:
 1819              		.loc 1 242 23 is_stmt 1 discriminator 1 view .LVU407
 1820              		.loc 1 242 2 is_stmt 0 discriminator 1 view .LVU408
 1821 0040 002C     		cmp	r4, #0
 1822 0042 F7D1     		bne	.L122
 1823              	.LBE8:
 243:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_scroll(0);
 1824              		.loc 1 243 2 is_stmt 1 view .LVU409
 1825 0044 0020     		movs	r0, #0
 1826 0046 FFF7FEFF 		bl	SSD1306_scroll
 1827              	.LVL109:
 244:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	oled_line=0;
 1828              		.loc 1 244 2 view .LVU410
 1829              		.loc 1 244 11 is_stmt 0 view .LVU411
 1830 004a 024B     		ldr	r3, .L124
 1831 004c 0022     		movs	r2, #0
 1832 004e 1A70     		strb	r2, [r3]
 245:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1833              		.loc 1 245 1 view .LVU412
 1834 0050 04B0     		add	sp, sp, #16
 1835              	.LCFI48:
 1836              		.cfi_def_cfa_offset 8
 1837              		@ sp needed
 1838 0052 10BD     		pop	{r4, pc}
 1839              	.LVL110:
 1840              	.L125:
 1841              		.loc 1 245 1 view .LVU413
 1842              		.align	2
 1843              	.L124:
 1844 0054 00000000 		.word	.LANCHOR6
 1845              		.cfi_endproc
 1846              	.LFE104:
 1848              		.section	.text.SSD1306_fill,"ax",%progbits
 1849              		.align	1
 1850              		.global	SSD1306_fill
 1851              		.syntax unified
 1852              		.thumb
 1853              		.thumb_func
 1855              	SSD1306_fill:
 1856              	.LVL111:
 1857              	.LFB105:
 246:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 51


 247:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* I don't know what this is doint. Ask kmm */
 248:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_fill(uint8_t row, uint8_t col, uint8_t count, uint8_t max, uint32_t pattern, int8_t ps
 1858              		.loc 1 248 106 is_stmt 1 view -0
 1859              		.cfi_startproc
 1860              		@ args = 8, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 1862              		.loc 1 248 106 is_stmt 0 view .LVU415
 1863 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1864              	.LCFI49:
 1865              		.cfi_def_cfa_offset 32
 1866              		.cfi_offset 4, -32
 1867              		.cfi_offset 5, -28
 1868              		.cfi_offset 6, -24
 1869              		.cfi_offset 7, -20
 1870              		.cfi_offset 8, -16
 1871              		.cfi_offset 9, -12
 1872              		.cfi_offset 10, -8
 1873              		.cfi_offset 14, -4
 1874 0004 1746     		mov	r7, r2
 1875 0006 1E46     		mov	r6, r3
 1876 0008 DDF82090 		ldr	r9, [sp, #32]
 1877 000c 9DF92480 		ldrsb	r8, [sp, #36]
 249:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(row, col);
 1878              		.loc 1 249 2 is_stmt 1 view .LVU416
 1879 0010 FFF7FEFF 		bl	SSD1306_move
 1880              	.LVL112:
 250:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t pstate = 0;
 1881              		.loc 1 250 2 view .LVU417
 251:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	unsigned char i;
 1882              		.loc 1 251 2 view .LVU418
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(i=max; i > 0; i--) {
 1883              		.loc 1 252 2 view .LVU419
 1884              		.loc 1 252 7 is_stmt 0 view .LVU420
 1885 0014 3546     		mov	r5, r6
 250:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t pstate = 0;
 1886              		.loc 1 250 10 view .LVU421
 1887 0016 0024     		movs	r4, #0
 1888              		.loc 1 252 2 view .LVU422
 1889 0018 12E0     		b	.L127
 1890              	.LVL113:
 1891              	.L135:
 253:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 254:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			if(pshift < 0) {
 255:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ << 3)) & 0xFF);
 1892              		.loc 1 255 5 is_stmt 1 view .LVU423
 1893              		.loc 1 255 41 is_stmt 0 view .LVU424
 1894 001a 04F1010A 		add	r10, r4, #1
 1895 001e 5FFA8AFA 		uxtb	r10, r10
 1896              	.LVL114:
 1897              		.loc 1 255 44 view .LVU425
 1898 0022 E100     		lsls	r1, r4, #3
 1899              		.loc 1 255 31 view .LVU426
 1900 0024 29FA01F1 		lsr	r1, r9, r1
 1901              		.loc 1 255 5 view .LVU427
 1902 0028 C9B2     		uxtb	r1, r1
 1903 002a 0120     		movs	r0, #1
 1904 002c FFF7FEFF 		bl	SSD1306_write
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 52


 1905              	.LVL115:
 1906              		.loc 1 255 41 view .LVU428
 1907 0030 5446     		mov	r4, r10
 1908 0032 18E0     		b	.L130
 1909              	.LVL116:
 1910              	.L128:
 256:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			} 
 257:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			else 
 258:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			{
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ + pshift)) & 0xFF);
 260:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			pstate = (pstate > 3) ? 0 : pstate;
 262:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 263:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		else {
 264:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_write(1, 0x00);
 1911              		.loc 1 264 4 is_stmt 1 view .LVU429
 1912 0034 0021     		movs	r1, #0
 1913 0036 0120     		movs	r0, #1
 1914 0038 FFF7FEFF 		bl	SSD1306_write
 1915              	.LVL117:
 1916              	.L131:
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1917              		.loc 1 252 20 discriminator 2 view .LVU430
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1918              		.loc 1 252 21 is_stmt 0 discriminator 2 view .LVU431
 1919 003c 691E     		subs	r1, r5, #1
 1920 003e CDB2     		uxtb	r5, r1
 1921              	.LVL118:
 1922              	.L127:
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1923              		.loc 1 252 13 is_stmt 1 discriminator 1 view .LVU432
 252:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1924              		.loc 1 252 2 is_stmt 0 discriminator 1 view .LVU433
 1925 0040 ADB1     		cbz	r5, .L134
 253:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1926              		.loc 1 253 3 is_stmt 1 view .LVU434
 253:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(count > max) {
 1927              		.loc 1 253 5 is_stmt 0 view .LVU435
 1928 0042 BE42     		cmp	r6, r7
 1929 0044 F6D2     		bcs	.L128
 254:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ << 3)) & 0xFF);
 1930              		.loc 1 254 4 is_stmt 1 view .LVU436
 254:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 				SSD1306_write(1, (pattern >> (pstate++ << 3)) & 0xFF);
 1931              		.loc 1 254 6 is_stmt 0 view .LVU437
 1932 0046 B8F1000F 		cmp	r8, #0
 1933 004a E6DB     		blt	.L135
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1934              		.loc 1 259 5 is_stmt 1 view .LVU438
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1935              		.loc 1 259 41 is_stmt 0 view .LVU439
 1936 004c 04F1010A 		add	r10, r4, #1
 1937 0050 5FFA8AFA 		uxtb	r10, r10
 1938              	.LVL119:
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1939              		.loc 1 259 44 view .LVU440
 1940 0054 08EB0401 		add	r1, r8, r4
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 53


 1941              		.loc 1 259 31 view .LVU441
 1942 0058 29FA01F1 		lsr	r1, r9, r1
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1943              		.loc 1 259 5 view .LVU442
 1944 005c C9B2     		uxtb	r1, r1
 1945 005e 0120     		movs	r0, #1
 1946 0060 FFF7FEFF 		bl	SSD1306_write
 1947              	.LVL120:
 259:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			}			
 1948              		.loc 1 259 41 view .LVU443
 1949 0064 5446     		mov	r4, r10
 1950              	.L130:
 1951              	.LVL121:
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 1952              		.loc 1 261 4 is_stmt 1 view .LVU444
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 1953              		.loc 1 261 11 is_stmt 0 view .LVU445
 1954 0066 032C     		cmp	r4, #3
 1955 0068 E8D9     		bls	.L131
 1956 006a 0024     		movs	r4, #0
 1957              	.LVL122:
 261:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 1958              		.loc 1 261 11 view .LVU446
 1959 006c E6E7     		b	.L131
 1960              	.LVL123:
 1961              	.L134:
 265:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}		
 266:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 267:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 1962              		.loc 1 267 1 view .LVU447
 1963 006e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1964              		.loc 1 267 1 view .LVU448
 1965              		.cfi_endproc
 1966              	.LFE105:
 1968              		.section	.text.SSD1306_putxy,"ax",%progbits
 1969              		.align	1
 1970              		.global	SSD1306_putxy
 1971              		.syntax unified
 1972              		.thumb
 1973              		.thumb_func
 1975              	SSD1306_putxy:
 1976              	.LVL124:
 1977              	.LFB106:
 268:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 269:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 270:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Draw a tile at an arbitrary pixel location (top, left) using an 8 byte tile buffer referenced by
 271:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Slower than oled_putc(), potentially substantially so; only use for things that need
 272:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // finer grained positioning than is possible with tile cells, like sprites.
 273:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Clips right and bottom edges properly; untested and not expected to work with negative positions
 274:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_putxy(uint8_t left_pxl, uint8_t top_pxl, uint8_t *tile) {
 1978              		.loc 1 274 70 is_stmt 1 view -0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 16
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 1982              		.loc 1 274 70 is_stmt 0 view .LVU450
 1983 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1984              	.LCFI50:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 54


 1985              		.cfi_def_cfa_offset 20
 1986              		.cfi_offset 4, -20
 1987              		.cfi_offset 5, -16
 1988              		.cfi_offset 6, -12
 1989              		.cfi_offset 7, -8
 1990              		.cfi_offset 14, -4
 1991 0002 85B0     		sub	sp, sp, #20
 1992              	.LCFI51:
 1993              		.cfi_def_cfa_offset 40
 1994 0004 0546     		mov	r5, r0
 1995 0006 0E46     		mov	r6, r1
 275:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t tbuf[8], obuf[8];
 1996              		.loc 1 275 2 is_stmt 1 view .LVU451
 276:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t top_cell = top_pxl >> 3;
 1997              		.loc 1 276 2 view .LVU452
 1998              		.loc 1 276 10 is_stmt 0 view .LVU453
 1999 0008 CF08     		lsrs	r7, r1, #3
 2000              	.LVL125:
 277:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	uint8_t left_cell = left_pxl >> 3;
 2001              		.loc 1 277 2 is_stmt 1 view .LVU454
 278:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	int8_t voff = top_pxl - ((top_cell << 3) - 1);
 2002              		.loc 1 278 2 view .LVU455
 2003              		.loc 1 278 24 is_stmt 0 view .LVU456
 2004 000a 01F00700 		and	r0, r1, #7
 2005              	.LVL126:
 279:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	int8_t hoff = left_pxl - ((left_cell << 3) - 1);
 2006              		.loc 1 279 2 is_stmt 1 view .LVU457
 2007              		.loc 1 279 25 is_stmt 0 view .LVU458
 2008 000e 05F00704 		and	r4, r5, #7
 2009 0012 0134     		adds	r4, r4, #1
 2010              	.LVL127:
 280:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	
 281:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(voff == 0 && hoff == 0) {
 2011              		.loc 1 281 2 is_stmt 1 view .LVU459
 2012              		.loc 1 281 4 is_stmt 0 view .LVU460
 2013 0014 0130     		adds	r0, r0, #1
 2014              	.LVL128:
 2015              		.loc 1 281 4 view .LVU461
 2016 0016 0023     		movs	r3, #0
 2017 0018 10E0     		b	.L139
 2018              	.LVL129:
 2019              	.L140:
 2020              	.LBB9:
 282:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(top_cell, left_pxl >> 3);
 283:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_put_tile(tile, 8);
 284:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		return;
 285:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 286:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	else {
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		for(uint8_t tcol = 0; tcol < 8; tcol++) { // tile column
 288:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2021              		.loc 1 288 4 is_stmt 1 discriminator 3 view .LVU462
 2022              		.loc 1 288 22 is_stmt 0 discriminator 3 view .LVU463
 2023 001a 12F803C0 		ldrb	ip, [r2, r3]	@ zero_extendqisi2
 2024              		.loc 1 288 30 discriminator 3 view .LVU464
 2025 001e 0CFA00FE 		lsl	lr, ip, r0
 2026              		.loc 1 288 15 discriminator 3 view .LVU465
 2027 0022 03F11001 		add	r1, r3, #16
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 55


 2028 0026 6944     		add	r1, sp, r1
 2029 0028 01F808EC 		strb	lr, [r1, #-8]
 289:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			obuf[tcol] = (tile[tcol]) >> (8 - (uint8_t)voff); //shift right (up) by voff
 2030              		.loc 1 289 4 is_stmt 1 discriminator 3 view .LVU466
 2031              		.loc 1 289 36 is_stmt 0 discriminator 3 view .LVU467
 2032 002c C0F1080E 		rsb	lr, r0, #8
 2033              		.loc 1 289 30 discriminator 3 view .LVU468
 2034 0030 4CFA0EFC 		asr	ip, ip, lr
 2035              		.loc 1 289 15 discriminator 3 view .LVU469
 2036 0034 01F810CC 		strb	ip, [r1, #-16]
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2037              		.loc 1 287 35 is_stmt 1 discriminator 3 view .LVU470
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2038              		.loc 1 287 39 is_stmt 0 discriminator 3 view .LVU471
 2039 0038 0133     		adds	r3, r3, #1
 2040              	.LVL130:
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2041              		.loc 1 287 39 discriminator 3 view .LVU472
 2042 003a DBB2     		uxtb	r3, r3
 2043              	.LVL131:
 2044              	.L139:
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2045              		.loc 1 287 25 is_stmt 1 discriminator 1 view .LVU473
 287:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			tbuf[tcol] = (tile[tcol]) << ((uint8_t)voff); // shift left (down) by voff
 2046              		.loc 1 287 3 is_stmt 0 discriminator 1 view .LVU474
 2047 003c 072B     		cmp	r3, #7
 2048 003e ECD9     		bls	.L140
 2049              	.LBE9:
 290:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}
 291:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		
 292:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move_raw(top_cell, left_pxl); // move_raw(row[0:7], column[0:127]) rows and pixels for ex
 2050              		.loc 1 292 3 is_stmt 1 view .LVU475
 2051 0040 2946     		mov	r1, r5
 2052 0042 3846     		mov	r0, r7
 2053              	.LVL132:
 2054              		.loc 1 292 3 is_stmt 0 view .LVU476
 2055 0044 FFF7FEFF 		bl	SSD1306_move_raw
 2056              	.LVL133:
 293:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_put_tile(tbuf, (left_pxl > (SSD1306_WIDTH - 8)) ? 8 - hoff : 8);
 2057              		.loc 1 293 3 is_stmt 1 view .LVU477
 2058 0048 782D     		cmp	r5, #120
 2059 004a 0AD9     		bls	.L145
 2060              		.loc 1 293 3 is_stmt 0 discriminator 1 view .LVU478
 2061 004c C4F10804 		rsb	r4, r4, #8
 2062              	.LVL134:
 2063              		.loc 1 293 3 discriminator 1 view .LVU479
 2064 0050 E4B2     		uxtb	r4, r4
 2065              	.L141:
 2066              		.loc 1 293 3 discriminator 4 view .LVU480
 2067 0052 2146     		mov	r1, r4
 2068 0054 02A8     		add	r0, sp, #8
 2069 0056 FFF7FEFF 		bl	SSD1306_put_tile
 2070              	.LVL135:
 294:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(top_pxl < (SSD1306_HEIGHT - 8)) {
 2071              		.loc 1 294 3 is_stmt 1 discriminator 4 view .LVU481
 2072              		.loc 1 294 5 is_stmt 0 discriminator 4 view .LVU482
 2073 005a 172E     		cmp	r6, #23
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 56


 2074 005c 03D9     		bls	.L147
 2075              	.L136:
 295:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_move_raw((top_cell + 1), left_pxl);
 296:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_put_tile(obuf, (left_pxl > (SSD1306_WIDTH - 8)) ? 8 - hoff : 8);
 297:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}		
 298:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}	
 299:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2076              		.loc 1 299 1 view .LVU483
 2077 005e 05B0     		add	sp, sp, #20
 2078              	.LCFI52:
 2079              		.cfi_remember_state
 2080              		.cfi_def_cfa_offset 20
 2081              		@ sp needed
 2082 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 2083              	.LVL136:
 2084              	.L145:
 2085              	.LCFI53:
 2086              		.cfi_restore_state
 293:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(top_pxl < (SSD1306_HEIGHT - 8)) {
 2087              		.loc 1 293 3 view .LVU484
 2088 0062 0824     		movs	r4, #8
 2089              	.LVL137:
 293:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(top_pxl < (SSD1306_HEIGHT - 8)) {
 2090              		.loc 1 293 3 view .LVU485
 2091 0064 F5E7     		b	.L141
 2092              	.L147:
 295:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			SSD1306_move_raw((top_cell + 1), left_pxl);
 2093              		.loc 1 295 4 is_stmt 1 view .LVU486
 2094 0066 2946     		mov	r1, r5
 2095 0068 781C     		adds	r0, r7, #1
 2096 006a FFF7FEFF 		bl	SSD1306_move_raw
 2097              	.LVL138:
 296:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		}		
 2098              		.loc 1 296 4 view .LVU487
 2099 006e 2146     		mov	r1, r4
 2100 0070 6846     		mov	r0, sp
 2101 0072 FFF7FEFF 		bl	SSD1306_put_tile
 2102              	.LVL139:
 2103 0076 F2E7     		b	.L136
 2104              		.cfi_endproc
 2105              	.LFE106:
 2107              		.section	.text.SSD1306_puts,"ax",%progbits
 2108              		.align	1
 2109              		.global	SSD1306_puts
 2110              		.syntax unified
 2111              		.thumb
 2112              		.thumb_func
 2114              	SSD1306_puts:
 2115              	.LVL140:
 2116              	.LFB107:
 300:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 301:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* print string at current position */
 302:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_puts(char *str) {
 2117              		.loc 1 302 30 view -0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 57


 2121              		.loc 1 302 30 is_stmt 0 view .LVU489
 2122 0000 10B5     		push	{r4, lr}
 2123              	.LCFI54:
 2124              		.cfi_def_cfa_offset 8
 2125              		.cfi_offset 4, -8
 2126              		.cfi_offset 14, -4
 2127 0002 0446     		mov	r4, r0
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2128              		.loc 1 303 2 is_stmt 1 view .LVU490
 2129              		.loc 1 303 7 is_stmt 0 view .LVU491
 2130 0004 02E0     		b	.L149
 2131              	.LVL141:
 2132              	.L150:
 304:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(*str++);
 2133              		.loc 1 304 3 is_stmt 1 view .LVU492
 2134              		.loc 1 304 20 is_stmt 0 view .LVU493
 2135 0006 0134     		adds	r4, r4, #1
 2136              	.LVL142:
 2137              		.loc 1 304 3 view .LVU494
 2138 0008 FFF7FEFF 		bl	SSD1306_putc
 2139              	.LVL143:
 2140              	.L149:
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2141              		.loc 1 303 7 is_stmt 1 view .LVU495
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2142              		.loc 1 303 8 is_stmt 0 view .LVU496
 2143 000c 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 303:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	while(*str != 0) {
 2144              		.loc 1 303 7 view .LVU497
 2145 000e 0028     		cmp	r0, #0
 2146 0010 F9D1     		bne	.L150
 305:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 306:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2147              		.loc 1 306 1 view .LVU498
 2148 0012 10BD     		pop	{r4, pc}
 2149              		.loc 1 306 1 view .LVU499
 2150              		.cfi_endproc
 2151              	.LFE107:
 2153              		.section	.text.SSD1306_bigdigit,"ax",%progbits
 2154              		.align	1
 2155              		.global	SSD1306_bigdigit
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2160              	SSD1306_bigdigit:
 2161              	.LVL144:
 2162              	.LFB108:
 307:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 308:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // print bigger digits using Commodore 64 symbols.
 309:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // box graphics digit (a single digit, not byte or word; use this to render output of an int->bcd c
 310:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	const uint8_t chartable[]  = { 0x10, 0x0E, 0x5D, 0x5D, 0x0D, 0x1D, // zero
 311:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x20, 0x0E, 0x20, 0x5D, 0x20, 0x11, // one
 312:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		                                  0x10, 0x0E, 0x10, 0x1D, 0x0D, 0x1D, // two
 313:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x20, 0x13, 0x0D, 0x1D, // three
 314:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x5F, 0x5F, 0x0D, 0x13, 0x20, 0x5E, // four
 315:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0D, 0x0E, 0x0D, 0x1D, // five
 316:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0B, 0x0E, 0x0D, 0x1D, // six
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 58


 317:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x20, 0x5B, 0x20, 0x5E, // seven
 318:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0B, 0x13, 0x0D, 0x1D, // eight
 319:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 							              0x10, 0x0E, 0x0d, 0x13, 0x0D, 0x1D  // nine
 320:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 						                };
 321:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_bigdigit(uint8_t top, uint8_t left, uint8_t num) {
 2163              		.loc 1 321 63 is_stmt 1 view -0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 322:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(num > 9) { return; }
 2167              		.loc 1 322 2 view .LVU501
 2168              		.loc 1 322 4 is_stmt 0 view .LVU502
 2169 0000 092A     		cmp	r2, #9
 2170 0002 00D9     		bls	.L162
 2171 0004 7047     		bx	lr
 2172              	.L162:
 321:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(num > 9) { return; }
 2173              		.loc 1 321 63 view .LVU503
 2174 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2175              	.LCFI55:
 2176              		.cfi_def_cfa_offset 24
 2177              		.cfi_offset 3, -24
 2178              		.cfi_offset 4, -20
 2179              		.cfi_offset 5, -16
 2180              		.cfi_offset 6, -12
 2181              		.cfi_offset 7, -8
 2182              		.cfi_offset 14, -4
 2183 0008 0646     		mov	r6, r0
 2184 000a 0F46     		mov	r7, r1
 2185 000c 1546     		mov	r5, r2
 323:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(top, left);
 2186              		.loc 1 323 2 is_stmt 1 view .LVU504
 2187 000e FFF7FEFF 		bl	SSD1306_move
 2188              	.LVL145:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2189              		.loc 1 324 2 view .LVU505
 2190              	.LBB10:
 2191              		.loc 1 324 6 view .LVU506
 2192              		.loc 1 324 14 is_stmt 0 view .LVU507
 2193 0012 0024     		movs	r4, #0
 2194              		.loc 1 324 2 view .LVU508
 2195 0014 0FE0     		b	.L154
 2196              	.LVL146:
 2197              	.L155:
 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2198              		.loc 1 325 26 is_stmt 1 discriminator 3 view .LVU509
 2199 0016 0136     		adds	r6, r6, #1
 2200              	.LVL147:
 2201              		.loc 1 325 26 is_stmt 0 discriminator 3 view .LVU510
 2202 0018 F6B2     		uxtb	r6, r6
 2203              	.LVL148:
 2204              		.loc 1 325 26 discriminator 3 view .LVU511
 2205 001a 3946     		mov	r1, r7
 2206 001c 3046     		mov	r0, r6
 2207 001e FFF7FEFF 		bl	SSD1306_move
 2208              	.LVL149:
 2209              	.L156:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 59


 326:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(chartable[(num * 6) + i]);
 2210              		.loc 1 326 3 is_stmt 1 discriminator 2 view .LVU512
 2211              		.loc 1 326 31 is_stmt 0 discriminator 2 view .LVU513
 2212 0022 05EB4503 		add	r3, r5, r5, lsl #1
 2213              		.loc 1 326 36 discriminator 2 view .LVU514
 2214 0026 04EB4303 		add	r3, r4, r3, lsl #1
 2215              		.loc 1 326 3 discriminator 2 view .LVU515
 2216 002a 074A     		ldr	r2, .L164
 2217 002c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 2218 002e FFF7FEFF 		bl	SSD1306_putc
 2219              	.LVL150:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2220              		.loc 1 324 28 is_stmt 1 discriminator 2 view .LVU516
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2221              		.loc 1 324 29 is_stmt 0 discriminator 2 view .LVU517
 2222 0032 0134     		adds	r4, r4, #1
 2223              	.LVL151:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2224              		.loc 1 324 29 discriminator 2 view .LVU518
 2225 0034 E4B2     		uxtb	r4, r4
 2226              	.LVL152:
 2227              	.L154:
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2228              		.loc 1 324 21 is_stmt 1 discriminator 1 view .LVU519
 324:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = 0; i < 6; i++) {
 2229              		.loc 1 324 2 is_stmt 0 discriminator 1 view .LVU520
 2230 0036 052C     		cmp	r4, #5
 2231 0038 04D8     		bhi	.L163
 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2232              		.loc 1 325 3 is_stmt 1 view .LVU521
 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2233              		.loc 1 325 5 is_stmt 0 view .LVU522
 2234 003a 022C     		cmp	r4, #2
 2235 003c EBD0     		beq	.L155
 325:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		if(i == 2 || i == 4) { SSD1306_move(++top, left); }
 2236              		.loc 1 325 13 discriminator 2 view .LVU523
 2237 003e 042C     		cmp	r4, #4
 2238 0040 EFD1     		bne	.L156
 2239 0042 E8E7     		b	.L155
 2240              	.L163:
 2241              	.LBE10:
 327:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}		
 328:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2242              		.loc 1 328 1 view .LVU524
 2243 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2244              	.LVL153:
 2245              	.L165:
 2246              		.loc 1 328 1 view .LVU525
 2247 0046 00BF     		.align	2
 2248              	.L164:
 2249 0048 00000000 		.word	.LANCHOR7
 2250              		.cfi_endproc
 2251              	.LFE108:
 2253              		.section	.text.SSD1306_box,"ax",%progbits
 2254              		.align	1
 2255              		.global	SSD1306_box
 2256              		.syntax unified
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 60


 2257              		.thumb
 2258              		.thumb_func
 2260              	SSD1306_box:
 2261              	.LVL154:
 2262              	.LFB109:
 329:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 330:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* draw box from PET symbols */
 331:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_box(uint8_t top, uint8_t left, uint8_t width, uint8_t height) {
 2263              		.loc 1 331 76 is_stmt 1 view -0
 2264              		.cfi_startproc
 2265              		@ args = 0, pretend = 0, frame = 0
 2266              		@ frame_needed = 0, uses_anonymous_args = 0
 2267              		.loc 1 331 76 is_stmt 0 view .LVU527
 2268 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2269              	.LCFI56:
 2270              		.cfi_def_cfa_offset 32
 2271              		.cfi_offset 3, -32
 2272              		.cfi_offset 4, -28
 2273              		.cfi_offset 5, -24
 2274              		.cfi_offset 6, -20
 2275              		.cfi_offset 7, -16
 2276              		.cfi_offset 8, -12
 2277              		.cfi_offset 9, -8
 2278              		.cfi_offset 14, -4
 2279 0004 8046     		mov	r8, r0
 2280 0006 0E46     		mov	r6, r1
 2281 0008 1746     		mov	r7, r2
 2282 000a 9946     		mov	r9, r3
 332:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(top, left);
 2283              		.loc 1 332 2 is_stmt 1 view .LVU528
 2284 000c FFF7FEFF 		bl	SSD1306_move
 2285              	.LVL155:
 333:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc(BOX_TL); for(uint8_t i = 0; i < width - 2; i++) { SSD1306_putc(BOX_HL);} SSD1306_putc
 2286              		.loc 1 333 2 view .LVU529
 2287 0010 1020     		movs	r0, #16
 2288 0012 FFF7FEFF 		bl	SSD1306_putc
 2289              	.LVL156:
 2290              		.loc 1 333 24 view .LVU530
 2291              	.LBB11:
 2292              		.loc 1 333 28 view .LVU531
 2293              		.loc 1 333 36 is_stmt 0 view .LVU532
 2294 0016 0024     		movs	r4, #0
 2295              		.loc 1 333 24 view .LVU533
 2296 0018 04E0     		b	.L167
 2297              	.LVL157:
 2298              	.L168:
 2299              		.loc 1 333 65 is_stmt 1 discriminator 3 view .LVU534
 2300 001a 4020     		movs	r0, #64
 2301 001c FFF7FEFF 		bl	SSD1306_putc
 2302              	.LVL158:
 2303              		.loc 1 333 58 discriminator 3 view .LVU535
 2304              		.loc 1 333 59 is_stmt 0 discriminator 3 view .LVU536
 2305 0020 0134     		adds	r4, r4, #1
 2306              	.LVL159:
 2307              		.loc 1 333 59 discriminator 3 view .LVU537
 2308 0022 E4B2     		uxtb	r4, r4
 2309              	.LVL160:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 61


 2310              	.L167:
 2311              		.loc 1 333 43 is_stmt 1 discriminator 1 view .LVU538
 2312              		.loc 1 333 53 is_stmt 0 discriminator 1 view .LVU539
 2313 0024 BD1E     		subs	r5, r7, #2
 2314              		.loc 1 333 24 discriminator 1 view .LVU540
 2315 0026 AC42     		cmp	r4, r5
 2316 0028 F7DB     		blt	.L168
 2317              	.LBE11:
 2318              		.loc 1 333 88 is_stmt 1 discriminator 4 view .LVU541
 2319 002a 0E20     		movs	r0, #14
 2320 002c FFF7FEFF 		bl	SSD1306_putc
 2321              	.LVL161:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	for(uint8_t i = top+1; i < top+height-1; i++) {
 2322              		.loc 1 334 2 discriminator 4 view .LVU542
 2323              	.LBB12:
 2324              		.loc 1 334 6 discriminator 4 view .LVU543
 2325              		.loc 1 334 14 is_stmt 0 discriminator 4 view .LVU544
 2326 0030 08F10104 		add	r4, r8, #1
 2327              	.LVL162:
 2328              		.loc 1 334 14 discriminator 4 view .LVU545
 2329 0034 E4B2     		uxtb	r4, r4
 2330              	.LVL163:
 2331              		.loc 1 334 2 discriminator 4 view .LVU546
 2332 0036 12E0     		b	.L169
 2333              	.L170:
 335:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2334              		.loc 1 335 3 is_stmt 1 discriminator 3 view .LVU547
 2335 0038 3146     		mov	r1, r6
 2336 003a 2046     		mov	r0, r4
 2337 003c FFF7FEFF 		bl	SSD1306_move
 2338              	.LVL164:
 336:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(BOX_VL); 
 2339              		.loc 1 336 3 discriminator 3 view .LVU548
 2340 0040 5D20     		movs	r0, #93
 2341 0042 FFF7FEFF 		bl	SSD1306_putc
 2342              	.LVL165:
 337:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left + width - 1);
 2343              		.loc 1 337 3 discriminator 3 view .LVU549
 2344              		.loc 1 337 24 is_stmt 0 discriminator 3 view .LVU550
 2345 0046 F119     		adds	r1, r6, r7
 2346 0048 C9B2     		uxtb	r1, r1
 2347              		.loc 1 337 3 discriminator 3 view .LVU551
 2348 004a 0139     		subs	r1, r1, #1
 2349 004c C9B2     		uxtb	r1, r1
 2350 004e 2046     		mov	r0, r4
 2351 0050 FFF7FEFF 		bl	SSD1306_move
 2352              	.LVL166:
 338:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_putc(BOX_VL);
 2353              		.loc 1 338 3 is_stmt 1 discriminator 3 view .LVU552
 2354 0054 5D20     		movs	r0, #93
 2355 0056 FFF7FEFF 		bl	SSD1306_putc
 2356              	.LVL167:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2357              		.loc 1 334 43 discriminator 3 view .LVU553
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2358              		.loc 1 334 44 is_stmt 0 discriminator 3 view .LVU554
 2359 005a 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 62


 2360              	.LVL168:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2361              		.loc 1 334 44 discriminator 3 view .LVU555
 2362 005c E4B2     		uxtb	r4, r4
 2363              	.LVL169:
 2364              	.L169:
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2365              		.loc 1 334 25 is_stmt 1 discriminator 1 view .LVU556
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2366              		.loc 1 334 32 is_stmt 0 discriminator 1 view .LVU557
 2367 005e 08EB0903 		add	r3, r8, r9
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2368              		.loc 1 334 39 discriminator 1 view .LVU558
 2369 0062 013B     		subs	r3, r3, #1
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2370              		.loc 1 334 2 discriminator 1 view .LVU559
 2371 0064 9C42     		cmp	r4, r3
 2372 0066 E7DB     		blt	.L170
 334:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 		SSD1306_move(i, left); 
 2373              		.loc 1 334 2 discriminator 1 view .LVU560
 2374              	.LBE12:
 339:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	}
 340:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(top + height - 1, left);
 2375              		.loc 1 340 2 is_stmt 1 view .LVU561
 2376              		.loc 1 340 19 is_stmt 0 view .LVU562
 2377 0068 08EB0900 		add	r0, r8, r9
 2378 006c C0B2     		uxtb	r0, r0
 2379              		.loc 1 340 2 view .LVU563
 2380 006e 0138     		subs	r0, r0, #1
 2381 0070 3146     		mov	r1, r6
 2382 0072 C0B2     		uxtb	r0, r0
 2383 0074 FFF7FEFF 		bl	SSD1306_move
 2384              	.LVL170:
 341:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_putc(BOX_BL); for(uint8_t i = 0; i < width - 2; i++) { SSD1306_putc(BOX_HL);} SSD1306_putc
 2385              		.loc 1 341 2 is_stmt 1 view .LVU564
 2386 0078 0D20     		movs	r0, #13
 2387 007a FFF7FEFF 		bl	SSD1306_putc
 2388              	.LVL171:
 2389              		.loc 1 341 24 view .LVU565
 2390              	.LBB13:
 2391              		.loc 1 341 28 view .LVU566
 2392              		.loc 1 341 36 is_stmt 0 view .LVU567
 2393 007e 0024     		movs	r4, #0
 2394              	.LVL172:
 2395              		.loc 1 341 24 view .LVU568
 2396 0080 04E0     		b	.L171
 2397              	.LVL173:
 2398              	.L172:
 2399              		.loc 1 341 65 is_stmt 1 discriminator 3 view .LVU569
 2400 0082 4020     		movs	r0, #64
 2401 0084 FFF7FEFF 		bl	SSD1306_putc
 2402              	.LVL174:
 2403              		.loc 1 341 58 discriminator 3 view .LVU570
 2404              		.loc 1 341 59 is_stmt 0 discriminator 3 view .LVU571
 2405 0088 0134     		adds	r4, r4, #1
 2406              	.LVL175:
 2407              		.loc 1 341 59 discriminator 3 view .LVU572
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 63


 2408 008a E4B2     		uxtb	r4, r4
 2409              	.LVL176:
 2410              	.L171:
 2411              		.loc 1 341 43 is_stmt 1 discriminator 1 view .LVU573
 2412              		.loc 1 341 24 is_stmt 0 discriminator 1 view .LVU574
 2413 008c A542     		cmp	r5, r4
 2414 008e F8DC     		bgt	.L172
 2415              	.LBE13:
 2416              		.loc 1 341 88 is_stmt 1 discriminator 4 view .LVU575
 2417 0090 1D20     		movs	r0, #29
 2418 0092 FFF7FEFF 		bl	SSD1306_putc
 2419              	.LVL177:
 342:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2420              		.loc 1 342 1 is_stmt 0 discriminator 4 view .LVU576
 2421 0096 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2422              		.loc 1 342 1 discriminator 4 view .LVU577
 2423              		.cfi_endproc
 2424              	.LFE109:
 2426              		.section	.text.SSD1306_scroll_print,"ax",%progbits
 2427              		.align	1
 2428              		.global	SSD1306_scroll_print
 2429              		.syntax unified
 2430              		.thumb
 2431              		.thumb_func
 2433              	SSD1306_scroll_print:
 2434              	.LVL178:
 2435              	.LFB110:
 343:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 344:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* 
 345:Core/Src/USER/oled/ssd1306_oled_i2c.c **** "I tell you, we are here on Earth to fart around, and don't let anybody tell you different." - Kurt
 346:Core/Src/USER/oled/ssd1306_oled_i2c.c **** */
 347:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 348:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* www.vabolis.lt adds */
 349:Core/Src/USER/oled/ssd1306_oled_i2c.c **** /* scroll stuff up and print on bottom of the screen. "listing" emulation */ 
 350:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_scroll_print(char *n)
 351:Core/Src/USER/oled/ssd1306_oled_i2c.c **** {
 2436              		.loc 1 351 1 is_stmt 1 view -0
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 0
 2439              		@ frame_needed = 0, uses_anonymous_args = 0
 2440              		.loc 1 351 1 is_stmt 0 view .LVU579
 2441 0000 38B5     		push	{r3, r4, r5, lr}
 2442              	.LCFI57:
 2443              		.cfi_def_cfa_offset 16
 2444              		.cfi_offset 3, -16
 2445              		.cfi_offset 4, -12
 2446              		.cfi_offset 5, -8
 2447              		.cfi_offset 14, -4
 2448 0002 0446     		mov	r4, r0
 352:Core/Src/USER/oled/ssd1306_oled_i2c.c **** unsigned char tmp;
 2449              		.loc 1 352 1 is_stmt 1 view .LVU580
 353:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_scroll(oled_line*8);
 2450              		.loc 1 353 2 view .LVU581
 2451 0004 0E4D     		ldr	r5, .L179
 2452 0006 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 2453              	.LVL179:
 2454              		.loc 1 353 2 is_stmt 0 view .LVU582
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 64


 2455 0008 C000     		lsls	r0, r0, #3
 2456 000a 00F0F800 		and	r0, r0, #248
 2457 000e FFF7FEFF 		bl	SSD1306_scroll
 2458              	.LVL180:
 354:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	if(oled_line==0){tmp=7;} else {tmp=oled_line-1;}
 2459              		.loc 1 354 2 is_stmt 1 view .LVU583
 2460              		.loc 1 354 14 is_stmt 0 view .LVU584
 2461 0012 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 2462              		.loc 1 354 4 view .LVU585
 2463 0014 93B1     		cbz	r3, .L177
 2464              		.loc 1 354 33 is_stmt 1 discriminator 2 view .LVU586
 2465              		.loc 1 354 36 is_stmt 0 discriminator 2 view .LVU587
 2466 0016 013B     		subs	r3, r3, #1
 2467 0018 D8B2     		uxtb	r0, r3
 2468              	.LVL181:
 2469              	.L175:
 355:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(tmp, 0);
 2470              		.loc 1 355 2 is_stmt 1 view .LVU588
 2471 001a 0021     		movs	r1, #0
 2472 001c FFF7FEFF 		bl	SSD1306_move
 2473              	.LVL182:
 356:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_puts(n);
 2474              		.loc 1 356 2 view .LVU589
 2475 0020 2046     		mov	r0, r4
 2476 0022 FFF7FEFF 		bl	SSD1306_puts
 2477              	.LVL183:
 357:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	oled_line++; if(oled_line>7)oled_line=0;
 2478              		.loc 1 357 2 view .LVU590
 2479              		.loc 1 357 11 is_stmt 0 view .LVU591
 2480 0026 064A     		ldr	r2, .L179
 2481 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2482 002a 0133     		adds	r3, r3, #1
 2483 002c DBB2     		uxtb	r3, r3
 2484 002e 1370     		strb	r3, [r2]
 2485              		.loc 1 357 15 is_stmt 1 view .LVU592
 2486              		.loc 1 357 17 is_stmt 0 view .LVU593
 2487 0030 072B     		cmp	r3, #7
 2488 0032 02D9     		bls	.L174
 2489              		.loc 1 357 30 is_stmt 1 discriminator 1 view .LVU594
 2490              		.loc 1 357 39 is_stmt 0 discriminator 1 view .LVU595
 2491 0034 1346     		mov	r3, r2
 2492 0036 0022     		movs	r2, #0
 2493 0038 1A70     		strb	r2, [r3]
 2494              	.L174:
 358:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2495              		.loc 1 358 1 view .LVU596
 2496 003a 38BD     		pop	{r3, r4, r5, pc}
 2497              	.LVL184:
 2498              	.L177:
 354:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 	SSD1306_move(tmp, 0);
 2499              		.loc 1 354 22 view .LVU597
 2500 003c 0720     		movs	r0, #7
 2501 003e ECE7     		b	.L175
 2502              	.L180:
 2503              		.align	2
 2504              	.L179:
 2505 0040 00000000 		.word	.LANCHOR6
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 65


 2506              		.cfi_endproc
 2507              	.LFE110:
 2509              		.section	.text.SSD1306_stopscroll,"ax",%progbits
 2510              		.align	1
 2511              		.global	SSD1306_stopscroll
 2512              		.syntax unified
 2513              		.thumb
 2514              		.thumb_func
 2516              	SSD1306_stopscroll:
 2517              	.LFB111:
 359:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 360:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_stopscroll(void){
 2518              		.loc 1 360 30 is_stmt 1 view -0
 2519              		.cfi_startproc
 2520              		@ args = 0, pretend = 0, frame = 0
 2521              		@ frame_needed = 0, uses_anonymous_args = 0
 2522 0000 08B5     		push	{r3, lr}
 2523              	.LCFI58:
 2524              		.cfi_def_cfa_offset 8
 2525              		.cfi_offset 3, -8
 2526              		.cfi_offset 14, -4
 361:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_DEACTIVATE_SCROLL);
 2527              		.loc 1 361 3 view .LVU599
 2528 0002 2E20     		movs	r0, #46
 2529 0004 FFF7FEFF 		bl	SSD1306_command1
 2530              	.LVL185:
 362:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2531              		.loc 1 362 1 is_stmt 0 view .LVU600
 2532 0008 08BD     		pop	{r3, pc}
 2533              		.cfi_endproc
 2534              	.LFE111:
 2536              		.section	.text.SSD1306_dim,"ax",%progbits
 2537              		.align	1
 2538              		.global	SSD1306_dim
 2539              		.syntax unified
 2540              		.thumb
 2541              		.thumb_func
 2543              	SSD1306_dim:
 2544              	.LVL186:
 2545              	.LFB112:
 363:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 364:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 365:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Dim the display
 366:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // dim = true: display is dimmed
 367:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // dim = false: display is normal
 368:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_dim(unsigned char dim) {
 2546              		.loc 1 368 37 is_stmt 1 view -0
 2547              		.cfi_startproc
 2548              		@ args = 0, pretend = 0, frame = 0
 2549              		@ frame_needed = 0, uses_anonymous_args = 0
 2550              		.loc 1 368 37 is_stmt 0 view .LVU602
 2551 0000 10B5     		push	{r4, lr}
 2552              	.LCFI59:
 2553              		.cfi_def_cfa_offset 8
 2554              		.cfi_offset 4, -8
 2555              		.cfi_offset 14, -4
 369:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   uint8_t contrast;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 66


 2556              		.loc 1 369 3 is_stmt 1 view .LVU603
 370:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 371:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   if (dim) {
 2557              		.loc 1 371 3 view .LVU604
 2558              		.loc 1 371 6 is_stmt 0 view .LVU605
 2559 0002 38B1     		cbz	r0, .L185
 372:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			contrast = 0; // Dimmed display
 2560              		.loc 1 372 13 view .LVU606
 2561 0004 0024     		movs	r4, #0
 2562              	.L184:
 2563              	.LVL187:
 373:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			} else {
 374:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //				if (_vccstate == SSD1306_EXTERNALVCC) {
 375:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //						contrast = 0x9F;
 376:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //					} else {
 377:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 			contrast = 0xCF;
 378:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //    }
 379:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   }
 380:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   // the range of contrast to too small to be really useful
 381:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   // it is useful to dim the display
 382:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_SETCONTRAST);
 2564              		.loc 1 382 3 is_stmt 1 view .LVU607
 2565 0006 8120     		movs	r0, #129
 2566              	.LVL188:
 2567              		.loc 1 382 3 is_stmt 0 view .LVU608
 2568 0008 FFF7FEFF 		bl	SSD1306_command1
 2569              	.LVL189:
 383:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(contrast);
 2570              		.loc 1 383 3 is_stmt 1 view .LVU609
 2571 000c 2046     		mov	r0, r4
 2572 000e FFF7FEFF 		bl	SSD1306_command1
 2573              	.LVL190:
 384:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2574              		.loc 1 384 1 is_stmt 0 view .LVU610
 2575 0012 10BD     		pop	{r4, pc}
 2576              	.LVL191:
 2577              	.L185:
 377:Core/Src/USER/oled/ssd1306_oled_i2c.c **** //    }
 2578              		.loc 1 377 13 view .LVU611
 2579 0014 CF24     		movs	r4, #207
 2580 0016 F6E7     		b	.L184
 2581              		.cfi_endproc
 2582              	.LFE112:
 2584              		.section	.text.SSD1306_startscrollright,"ax",%progbits
 2585              		.align	1
 2586              		.global	SSD1306_startscrollright
 2587              		.syntax unified
 2588              		.thumb
 2589              		.thumb_func
 2591              	SSD1306_startscrollright:
 2592              	.LVL192:
 2593              	.LFB113:
 385:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 386:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 387:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrollright
 388:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a right handed scroll for rows start through stop
 389:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 67


 390:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 391:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrollright(uint8_t start, uint8_t stop){
 2594              		.loc 1 391 59 is_stmt 1 view -0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 0
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
 2598              		.loc 1 391 59 is_stmt 0 view .LVU613
 2599 0000 38B5     		push	{r3, r4, r5, lr}
 2600              	.LCFI60:
 2601              		.cfi_def_cfa_offset 16
 2602              		.cfi_offset 3, -16
 2603              		.cfi_offset 4, -12
 2604              		.cfi_offset 5, -8
 2605              		.cfi_offset 14, -4
 2606 0002 0546     		mov	r5, r0
 2607 0004 0C46     		mov	r4, r1
 392:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_RIGHT_HORIZONTAL_SCROLL);
 2608              		.loc 1 392 3 is_stmt 1 view .LVU614
 2609 0006 2620     		movs	r0, #38
 2610              	.LVL193:
 2611              		.loc 1 392 3 is_stmt 0 view .LVU615
 2612 0008 FFF7FEFF 		bl	SSD1306_command1
 2613              	.LVL194:
 393:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2614              		.loc 1 393 3 is_stmt 1 view .LVU616
 2615 000c 0020     		movs	r0, #0
 2616 000e FFF7FEFF 		bl	SSD1306_command1
 2617              	.LVL195:
 394:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2618              		.loc 1 394 3 view .LVU617
 2619 0012 2846     		mov	r0, r5
 2620 0014 FFF7FEFF 		bl	SSD1306_command1
 2621              	.LVL196:
 395:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2622              		.loc 1 395 3 view .LVU618
 2623 0018 0020     		movs	r0, #0
 2624 001a FFF7FEFF 		bl	SSD1306_command1
 2625              	.LVL197:
 396:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2626              		.loc 1 396 3 view .LVU619
 2627 001e 2046     		mov	r0, r4
 2628 0020 FFF7FEFF 		bl	SSD1306_command1
 2629              	.LVL198:
 397:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2630              		.loc 1 397 3 view .LVU620
 2631 0024 0020     		movs	r0, #0
 2632 0026 FFF7FEFF 		bl	SSD1306_command1
 2633              	.LVL199:
 398:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0XFF);
 2634              		.loc 1 398 3 view .LVU621
 2635 002a FF20     		movs	r0, #255
 2636 002c FFF7FEFF 		bl	SSD1306_command1
 2637              	.LVL200:
 399:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2638              		.loc 1 399 3 view .LVU622
 2639 0030 2F20     		movs	r0, #47
 2640 0032 FFF7FEFF 		bl	SSD1306_command1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 68


 2641              	.LVL201:
 400:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2642              		.loc 1 400 1 is_stmt 0 view .LVU623
 2643 0036 38BD     		pop	{r3, r4, r5, pc}
 2644              		.cfi_endproc
 2645              	.LFE113:
 2647              		.section	.text.SSD1306_startscrollleft,"ax",%progbits
 2648              		.align	1
 2649              		.global	SSD1306_startscrollleft
 2650              		.syntax unified
 2651              		.thumb
 2652              		.thumb_func
 2654              	SSD1306_startscrollleft:
 2655              	.LVL202:
 2656              	.LFB114:
 401:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 402:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrollleft
 403:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a right handed scroll for rows start through stop
 404:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
 405:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 406:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrollleft(uint8_t start, uint8_t stop){
 2657              		.loc 1 406 58 is_stmt 1 view -0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661              		.loc 1 406 58 is_stmt 0 view .LVU625
 2662 0000 38B5     		push	{r3, r4, r5, lr}
 2663              	.LCFI61:
 2664              		.cfi_def_cfa_offset 16
 2665              		.cfi_offset 3, -16
 2666              		.cfi_offset 4, -12
 2667              		.cfi_offset 5, -8
 2668              		.cfi_offset 14, -4
 2669 0002 0546     		mov	r5, r0
 2670 0004 0C46     		mov	r4, r1
 407:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_LEFT_HORIZONTAL_SCROLL);
 2671              		.loc 1 407 3 is_stmt 1 view .LVU626
 2672 0006 2720     		movs	r0, #39
 2673              	.LVL203:
 2674              		.loc 1 407 3 is_stmt 0 view .LVU627
 2675 0008 FFF7FEFF 		bl	SSD1306_command1
 2676              	.LVL204:
 408:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2677              		.loc 1 408 3 is_stmt 1 view .LVU628
 2678 000c 0020     		movs	r0, #0
 2679 000e FFF7FEFF 		bl	SSD1306_command1
 2680              	.LVL205:
 409:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2681              		.loc 1 409 3 view .LVU629
 2682 0012 2846     		mov	r0, r5
 2683 0014 FFF7FEFF 		bl	SSD1306_command1
 2684              	.LVL206:
 410:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2685              		.loc 1 410 3 view .LVU630
 2686 0018 0020     		movs	r0, #0
 2687 001a FFF7FEFF 		bl	SSD1306_command1
 2688              	.LVL207:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 69


 411:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2689              		.loc 1 411 3 view .LVU631
 2690 001e 2046     		mov	r0, r4
 2691 0020 FFF7FEFF 		bl	SSD1306_command1
 2692              	.LVL208:
 412:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2693              		.loc 1 412 3 view .LVU632
 2694 0024 0020     		movs	r0, #0
 2695 0026 FFF7FEFF 		bl	SSD1306_command1
 2696              	.LVL209:
 413:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0XFF);
 2697              		.loc 1 413 3 view .LVU633
 2698 002a FF20     		movs	r0, #255
 2699 002c FFF7FEFF 		bl	SSD1306_command1
 2700              	.LVL210:
 414:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2701              		.loc 1 414 3 view .LVU634
 2702 0030 2F20     		movs	r0, #47
 2703 0032 FFF7FEFF 		bl	SSD1306_command1
 2704              	.LVL211:
 415:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2705              		.loc 1 415 1 is_stmt 0 view .LVU635
 2706 0036 38BD     		pop	{r3, r4, r5, pc}
 2707              		.cfi_endproc
 2708              	.LFE114:
 2710              		.section	.text.SSD1306_startscrolldiagright,"ax",%progbits
 2711              		.align	1
 2712              		.global	SSD1306_startscrolldiagright
 2713              		.syntax unified
 2714              		.thumb
 2715              		.thumb_func
 2717              	SSD1306_startscrolldiagright:
 2718              	.LVL212:
 2719              	.LFB115:
 416:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 417:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrolldiagright
 418:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a diagonal scroll for rows start through stop
 419:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
 420:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 421:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrolldiagright(uint8_t start, uint8_t stop){
 2720              		.loc 1 421 63 is_stmt 1 view -0
 2721              		.cfi_startproc
 2722              		@ args = 0, pretend = 0, frame = 0
 2723              		@ frame_needed = 0, uses_anonymous_args = 0
 2724              		.loc 1 421 63 is_stmt 0 view .LVU637
 2725 0000 38B5     		push	{r3, r4, r5, lr}
 2726              	.LCFI62:
 2727              		.cfi_def_cfa_offset 16
 2728              		.cfi_offset 3, -16
 2729              		.cfi_offset 4, -12
 2730              		.cfi_offset 5, -8
 2731              		.cfi_offset 14, -4
 2732 0002 0546     		mov	r5, r0
 2733 0004 0C46     		mov	r4, r1
 422:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_SET_VERTICAL_SCROLL_AREA);
 2734              		.loc 1 422 3 is_stmt 1 view .LVU638
 2735 0006 A320     		movs	r0, #163
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 70


 2736              	.LVL213:
 2737              		.loc 1 422 3 is_stmt 0 view .LVU639
 2738 0008 FFF7FEFF 		bl	SSD1306_command1
 2739              	.LVL214:
 423:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2740              		.loc 1 423 3 is_stmt 1 view .LVU640
 2741 000c 0020     		movs	r0, #0
 2742 000e FFF7FEFF 		bl	SSD1306_command1
 2743              	.LVL215:
 424:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_HEIGHT);
 2744              		.loc 1 424 3 view .LVU641
 2745 0012 2020     		movs	r0, #32
 2746 0014 FFF7FEFF 		bl	SSD1306_command1
 2747              	.LVL216:
 425:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL);
 2748              		.loc 1 425 3 view .LVU642
 2749 0018 2920     		movs	r0, #41
 2750 001a FFF7FEFF 		bl	SSD1306_command1
 2751              	.LVL217:
 426:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2752              		.loc 1 426 3 view .LVU643
 2753 001e 0020     		movs	r0, #0
 2754 0020 FFF7FEFF 		bl	SSD1306_command1
 2755              	.LVL218:
 427:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2756              		.loc 1 427 3 view .LVU644
 2757 0024 2846     		mov	r0, r5
 2758 0026 FFF7FEFF 		bl	SSD1306_command1
 2759              	.LVL219:
 428:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2760              		.loc 1 428 3 view .LVU645
 2761 002a 0020     		movs	r0, #0
 2762 002c FFF7FEFF 		bl	SSD1306_command1
 2763              	.LVL220:
 429:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2764              		.loc 1 429 3 view .LVU646
 2765 0030 2046     		mov	r0, r4
 2766 0032 FFF7FEFF 		bl	SSD1306_command1
 2767              	.LVL221:
 430:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X01);
 2768              		.loc 1 430 3 view .LVU647
 2769 0036 0120     		movs	r0, #1
 2770 0038 FFF7FEFF 		bl	SSD1306_command1
 2771              	.LVL222:
 431:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2772              		.loc 1 431 3 view .LVU648
 2773 003c 2F20     		movs	r0, #47
 2774 003e FFF7FEFF 		bl	SSD1306_command1
 2775              	.LVL223:
 432:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2776              		.loc 1 432 1 is_stmt 0 view .LVU649
 2777 0042 38BD     		pop	{r3, r4, r5, pc}
 2778              		.cfi_endproc
 2779              	.LFE115:
 2781              		.section	.text.SSD1306_startscrolldiagleft,"ax",%progbits
 2782              		.align	1
 2783              		.global	SSD1306_startscrolldiagleft
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 71


 2784              		.syntax unified
 2785              		.thumb
 2786              		.thumb_func
 2788              	SSD1306_startscrolldiagleft:
 2789              	.LVL224:
 2790              	.LFB116:
 433:Core/Src/USER/oled/ssd1306_oled_i2c.c **** 
 434:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // startscrolldiagleft
 435:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Activate a diagonal scroll for rows start through stop
 436:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // Hint, the display is 16 rows tall. To scroll the whole display, run:
 437:Core/Src/USER/oled/ssd1306_oled_i2c.c **** // display.scrollright(0x00, 0x0F)
 438:Core/Src/USER/oled/ssd1306_oled_i2c.c **** void SSD1306_startscrolldiagleft(uint8_t start, uint8_t stop){
 2791              		.loc 1 438 62 is_stmt 1 view -0
 2792              		.cfi_startproc
 2793              		@ args = 0, pretend = 0, frame = 0
 2794              		@ frame_needed = 0, uses_anonymous_args = 0
 2795              		.loc 1 438 62 is_stmt 0 view .LVU651
 2796 0000 38B5     		push	{r3, r4, r5, lr}
 2797              	.LCFI63:
 2798              		.cfi_def_cfa_offset 16
 2799              		.cfi_offset 3, -16
 2800              		.cfi_offset 4, -12
 2801              		.cfi_offset 5, -8
 2802              		.cfi_offset 14, -4
 2803 0002 0546     		mov	r5, r0
 2804 0004 0C46     		mov	r4, r1
 439:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_SET_VERTICAL_SCROLL_AREA);
 2805              		.loc 1 439 3 is_stmt 1 view .LVU652
 2806 0006 A320     		movs	r0, #163
 2807              	.LVL225:
 2808              		.loc 1 439 3 is_stmt 0 view .LVU653
 2809 0008 FFF7FEFF 		bl	SSD1306_command1
 2810              	.LVL226:
 440:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2811              		.loc 1 440 3 is_stmt 1 view .LVU654
 2812 000c 0020     		movs	r0, #0
 2813 000e FFF7FEFF 		bl	SSD1306_command1
 2814              	.LVL227:
 441:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_HEIGHT);
 2815              		.loc 1 441 3 view .LVU655
 2816 0012 2020     		movs	r0, #32
 2817 0014 FFF7FEFF 		bl	SSD1306_command1
 2818              	.LVL228:
 442:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL);
 2819              		.loc 1 442 3 view .LVU656
 2820 0018 2A20     		movs	r0, #42
 2821 001a FFF7FEFF 		bl	SSD1306_command1
 2822              	.LVL229:
 443:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2823              		.loc 1 443 3 view .LVU657
 2824 001e 0020     		movs	r0, #0
 2825 0020 FFF7FEFF 		bl	SSD1306_command1
 2826              	.LVL230:
 444:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(start);
 2827              		.loc 1 444 3 view .LVU658
 2828 0024 2846     		mov	r0, r5
 2829 0026 FFF7FEFF 		bl	SSD1306_command1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 72


 2830              	.LVL231:
 445:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X00);
 2831              		.loc 1 445 3 view .LVU659
 2832 002a 0020     		movs	r0, #0
 2833 002c FFF7FEFF 		bl	SSD1306_command1
 2834              	.LVL232:
 446:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(stop);
 2835              		.loc 1 446 3 view .LVU660
 2836 0030 2046     		mov	r0, r4
 2837 0032 FFF7FEFF 		bl	SSD1306_command1
 2838              	.LVL233:
 447:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(0X01);
 2839              		.loc 1 447 3 view .LVU661
 2840 0036 0120     		movs	r0, #1
 2841 0038 FFF7FEFF 		bl	SSD1306_command1
 2842              	.LVL234:
 448:Core/Src/USER/oled/ssd1306_oled_i2c.c ****   SSD1306_command1(SSD1306_ACTIVATE_SCROLL);
 2843              		.loc 1 448 3 view .LVU662
 2844 003c 2F20     		movs	r0, #47
 2845 003e FFF7FEFF 		bl	SSD1306_command1
 2846              	.LVL235:
 449:Core/Src/USER/oled/ssd1306_oled_i2c.c **** }
 2847              		.loc 1 449 1 is_stmt 0 view .LVU663
 2848 0042 38BD     		pop	{r3, r4, r5, pc}
 2849              		.cfi_endproc
 2850              	.LFE116:
 2852              		.section	.text.user_usb_rx,"ax",%progbits
 2853              		.align	1
 2854              		.global	user_usb_rx
 2855              		.syntax unified
 2856              		.thumb
 2857              		.thumb_func
 2859              	user_usb_rx:
 2860              	.LVL236:
 2861              	.LFB117:
 2862              		.file 5 "Core/Src/USER/user.c"
   1:Core/Src/USER/user.c **** /* ***********************************************
   2:Core/Src/USER/user.c **** **                                              **
   3:Core/Src/USER/user.c **** ** 40mA   RTC clock V1.0 www.vabolis.lt (c)2023 **
   4:Core/Src/USER/user.c **** **                                              **
   5:Core/Src/USER/user.c **** ************************************************ */
   6:Core/Src/USER/user.c **** 
   7:Core/Src/USER/user.c **** #include "user.h"
   8:Core/Src/USER/user.c **** 
   9:Core/Src/USER/user.c **** 
  10:Core/Src/USER/user.c **** #include "rtc.c"
  11:Core/Src/USER/user.c **** #include "circular_buffer.c"
  12:Core/Src/USER/user.c **** #include "oled/ssd1306_oled_i2c.c"
  13:Core/Src/USER/user.c **** 
  14:Core/Src/USER/user.c **** extern IWDG_HandleTypeDef hiwdg;
  15:Core/Src/USER/user.c **** extern RTC_HandleTypeDef hrtc;
  16:Core/Src/USER/user.c **** extern TIM_HandleTypeDef htim1;
  17:Core/Src/USER/user.c **** 
  18:Core/Src/USER/user.c **** unsigned char invertuotas=0;
  19:Core/Src/USER/user.c **** uint32_t bootsecons;
  20:Core/Src/USER/user.c **** 
  21:Core/Src/USER/user.c **** #define BUFFER_SIZE 64
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 73


  22:Core/Src/USER/user.c **** unsigned char testas[BUFFER_SIZE];
  23:Core/Src/USER/user.c **** 
  24:Core/Src/USER/user.c **** CCBuf cc; //struktura
  25:Core/Src/USER/user.c **** 
  26:Core/Src/USER/user.c **** volatile char seconds;
  27:Core/Src/USER/user.c **** 
  28:Core/Src/USER/user.c **** 
  29:Core/Src/USER/user.c **** void user_usb_rx(uint8_t* Buf, uint32_t *Len)
  30:Core/Src/USER/user.c **** {
 2863              		.loc 5 30 1 is_stmt 1 view -0
 2864              		.cfi_startproc
 2865              		@ args = 0, pretend = 0, frame = 0
 2866              		@ frame_needed = 0, uses_anonymous_args = 0
 2867              		.loc 5 30 1 is_stmt 0 view .LVU665
 2868 0000 70B5     		push	{r4, r5, r6, lr}
 2869              	.LCFI64:
 2870              		.cfi_def_cfa_offset 16
 2871              		.cfi_offset 4, -16
 2872              		.cfi_offset 5, -12
 2873              		.cfi_offset 6, -8
 2874              		.cfi_offset 14, -4
 2875 0002 0646     		mov	r6, r0
 2876 0004 0D46     		mov	r5, r1
  31:Core/Src/USER/user.c **** unsigned char i,a;
 2877              		.loc 5 31 1 is_stmt 1 view .LVU666
  32:Core/Src/USER/user.c **** for (i=0;i<*Len;i++)
 2878              		.loc 5 32 1 view .LVU667
 2879              	.LVL237:
 2880              		.loc 5 32 7 is_stmt 0 view .LVU668
 2881 0006 0024     		movs	r4, #0
 2882              		.loc 5 32 1 view .LVU669
 2883 0008 01E0     		b	.L196
 2884              	.LVL238:
 2885              	.L197:
 2886              		.loc 5 32 17 is_stmt 1 discriminator 2 view .LVU670
 2887              		.loc 5 32 18 is_stmt 0 discriminator 2 view .LVU671
 2888 000a 0134     		adds	r4, r4, #1
 2889              	.LVL239:
 2890              		.loc 5 32 18 discriminator 2 view .LVU672
 2891 000c E4B2     		uxtb	r4, r4
 2892              	.LVL240:
 2893              	.L196:
 2894              		.loc 5 32 10 is_stmt 1 discriminator 1 view .LVU673
 2895              		.loc 5 32 12 is_stmt 0 discriminator 1 view .LVU674
 2896 000e 2B68     		ldr	r3, [r5]
 2897              		.loc 5 32 1 discriminator 1 view .LVU675
 2898 0010 9C42     		cmp	r4, r3
 2899 0012 06D2     		bcs	.L200
  33:Core/Src/USER/user.c **** 	{
  34:Core/Src/USER/user.c **** 		a=Buf[i];
 2900              		.loc 5 34 3 is_stmt 1 view .LVU676
 2901              		.loc 5 34 4 is_stmt 0 view .LVU677
 2902 0014 315D     		ldrb	r1, [r6, r4]	@ zero_extendqisi2
 2903              	.LVL241:
  35:Core/Src/USER/user.c **** 		if (a>10) circle_push(&cc , a);
 2904              		.loc 5 35 3 is_stmt 1 view .LVU678
 2905              		.loc 5 35 6 is_stmt 0 view .LVU679
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 74


 2906 0016 0A29     		cmp	r1, #10
 2907 0018 F7D9     		bls	.L197
 2908              		.loc 5 35 13 is_stmt 1 discriminator 1 view .LVU680
 2909 001a 0248     		ldr	r0, .L201
 2910 001c FFF7FEFF 		bl	circle_push
 2911              	.LVL242:
 2912              		.loc 5 35 13 is_stmt 0 discriminator 1 view .LVU681
 2913 0020 F3E7     		b	.L197
 2914              	.L200:
  36:Core/Src/USER/user.c **** 	}
  37:Core/Src/USER/user.c **** }
 2915              		.loc 5 37 1 view .LVU682
 2916 0022 70BD     		pop	{r4, r5, r6, pc}
 2917              	.LVL243:
 2918              	.L202:
 2919              		.loc 5 37 1 view .LVU683
 2920              		.align	2
 2921              	.L201:
 2922 0024 00000000 		.word	.LANCHOR8
 2923              		.cfi_endproc
 2924              	.LFE117:
 2926              		.section	.rodata.user_init.str1.4,"aMS",%progbits,1
 2927              		.align	2
 2928              	.LC0:
 2929 0000 5757572E 		.ascii	"WWW.VABOLIS.LT\000"
 2929      5641424F 
 2929      4C49532E 
 2929      4C5400
 2930              		.section	.text.user_init,"ax",%progbits
 2931              		.align	1
 2932              		.global	user_init
 2933              		.syntax unified
 2934              		.thumb
 2935              		.thumb_func
 2937              	user_init:
 2938              	.LFB118:
  38:Core/Src/USER/user.c **** 
  39:Core/Src/USER/user.c **** void user_init(void)
  40:Core/Src/USER/user.c **** {
 2939              		.loc 5 40 1 is_stmt 1 view -0
 2940              		.cfi_startproc
 2941              		@ args = 0, pretend = 0, frame = 8
 2942              		@ frame_needed = 0, uses_anonymous_args = 0
 2943 0000 70B5     		push	{r4, r5, r6, lr}
 2944              	.LCFI65:
 2945              		.cfi_def_cfa_offset 16
 2946              		.cfi_offset 4, -16
 2947              		.cfi_offset 5, -12
 2948              		.cfi_offset 6, -8
 2949              		.cfi_offset 14, -4
 2950 0002 82B0     		sub	sp, sp, #8
 2951              	.LCFI66:
 2952              		.cfi_def_cfa_offset 24
  41:Core/Src/USER/user.c **** 	cc.buffer=testas;
 2953              		.loc 5 41 2 view .LVU685
 2954              		.loc 5 41 11 is_stmt 0 view .LVU686
 2955 0004 2948     		ldr	r0, .L205
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 75


 2956 0006 2A4B     		ldr	r3, .L205+4
 2957 0008 0360     		str	r3, [r0]
  42:Core/Src/USER/user.c **** 	circle_reset(&cc,BUFFER_SIZE);			//init circle buffer
 2958              		.loc 5 42 2 is_stmt 1 view .LVU687
 2959 000a 4021     		movs	r1, #64
 2960 000c FFF7FEFF 		bl	circle_reset
 2961              	.LVL244:
  43:Core/Src/USER/user.c **** 	rtc_int_init();
 2962              		.loc 5 43 2 view .LVU688
 2963 0010 FFF7FEFF 		bl	rtc_int_init
 2964              	.LVL245:
  44:Core/Src/USER/user.c **** 	
  45:Core/Src/USER/user.c **** 	//HAL_TIM_Base_Start(&htim1);
  46:Core/Src/USER/user.c **** 	
  47:Core/Src/USER/user.c **** 	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 2965              		.loc 5 47 2 view .LVU689
 2966 0014 274C     		ldr	r4, .L205+8
 2967 0016 0021     		movs	r1, #0
 2968 0018 2046     		mov	r0, r4
 2969 001a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 2970              	.LVL246:
  48:Core/Src/USER/user.c **** 	//HAL_TIM_Base_Start_IT(&htim1);
  49:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,5*255);
 2971              		.loc 5 49 1 view .LVU690
 2972 001e 2368     		ldr	r3, [r4]
 2973 0020 40F2FB42 		movw	r2, #1275
 2974 0024 5A63     		str	r2, [r3, #52]
  50:Core/Src/USER/user.c **** 	//HAL_RTCEx_SetSmoothCalib(&hrtc,0,0,10); // du nuliai nes F1 nera. paskutinis- skaicius 0-7F, tik
  51:Core/Src/USER/user.c **** 
  52:Core/Src/USER/user.c **** RTC_DateTypeDef dienos= {0};
 2975              		.loc 5 52 1 view .LVU691
 2976              		.loc 5 52 17 is_stmt 0 view .LVU692
 2977 0026 0024     		movs	r4, #0
 2978 0028 0194     		str	r4, [sp, #4]
  53:Core/Src/USER/user.c **** HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 2979              		.loc 5 53 1 is_stmt 1 view .LVU693
 2980 002a 234E     		ldr	r6, .L205+12
 2981 002c 2246     		mov	r2, r4
 2982 002e 01A9     		add	r1, sp, #4
 2983 0030 3046     		mov	r0, r6
 2984 0032 FFF7FEFF 		bl	HAL_RTC_GetDate
 2985              	.LVL247:
  54:Core/Src/USER/user.c **** HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 2986              		.loc 5 54 1 view .LVU694
 2987 0036 214D     		ldr	r5, .L205+16
 2988 0038 2246     		mov	r2, r4
 2989 003a 2946     		mov	r1, r5
 2990 003c 3046     		mov	r0, r6
 2991 003e FFF7FEFF 		bl	HAL_RTC_GetTime
 2992              	.LVL248:
  55:Core/Src/USER/user.c **** bootsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*86400;
 2993              		.loc 5 55 1 view .LVU695
 2994              		.loc 5 55 20 is_stmt 0 view .LVU696
 2995 0042 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 2996              		.loc 5 55 40 view .LVU697
 2997 0044 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2998              		.loc 5 55 48 view .LVU698
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 76


 2999 0046 C2EB0212 		rsb	r2, r2, r2, lsl #4
 3000 004a 9300     		lsls	r3, r2, #2
 3001              		.loc 5 55 31 view .LVU699
 3002 004c 4FF46162 		mov	r2, #3600
 3003 0050 02FB0133 		mla	r3, r2, r1, r3
 3004              		.loc 5 55 60 view .LVU700
 3005 0054 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 3006              		.loc 5 55 51 view .LVU701
 3007 0056 1344     		add	r3, r3, r2
 3008              		.loc 5 55 76 view .LVU702
 3009 0058 9DF80620 		ldrb	r2, [sp, #6]	@ zero_extendqisi2
 3010              		.loc 5 55 81 view .LVU703
 3011 005c 013A     		subs	r2, r2, #1
 3012              		.loc 5 55 68 view .LVU704
 3013 005e 1849     		ldr	r1, .L205+20
 3014 0060 01FB0233 		mla	r3, r1, r2, r3
 3015              		.loc 5 55 11 view .LVU705
 3016 0064 174A     		ldr	r2, .L205+24
 3017 0066 1360     		str	r3, [r2]
  56:Core/Src/USER/user.c **** 
  57:Core/Src/USER/user.c **** 
  58:Core/Src/USER/user.c **** 
  59:Core/Src/USER/user.c **** 
  60:Core/Src/USER/user.c **** SSD1306_Init();
 3018              		.loc 5 60 1 is_stmt 1 view .LVU706
 3019 0068 FFF7FEFF 		bl	SSD1306_Init
 3020              	.LVL249:
  61:Core/Src/USER/user.c **** HAL_Delay(500);
 3021              		.loc 5 61 1 view .LVU707
 3022 006c 4FF4FA70 		mov	r0, #500
 3023 0070 FFF7FEFF 		bl	HAL_Delay
 3024              	.LVL250:
  62:Core/Src/USER/user.c **** SSD1306_Init();
 3025              		.loc 5 62 1 view .LVU708
 3026 0074 FFF7FEFF 		bl	SSD1306_Init
 3027              	.LVL251:
  63:Core/Src/USER/user.c **** SSD1306_clear(0);
 3028              		.loc 5 63 1 view .LVU709
 3029 0078 2046     		mov	r0, r4
 3030 007a FFF7FEFF 		bl	SSD1306_clear
 3031              	.LVL252:
  64:Core/Src/USER/user.c **** SSD1306_move(0,0);
 3032              		.loc 5 64 1 view .LVU710
 3033 007e 2146     		mov	r1, r4
 3034 0080 2046     		mov	r0, r4
 3035 0082 FFF7FEFF 		bl	SSD1306_move
 3036              	.LVL253:
  65:Core/Src/USER/user.c **** //HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
  66:Core/Src/USER/user.c **** SSD1306_puts("WWW.VABOLIS.LT");
 3037              		.loc 5 66 1 view .LVU711
 3038 0086 1048     		ldr	r0, .L205+28
 3039 0088 FFF7FEFF 		bl	SSD1306_puts
 3040              	.LVL254:
  67:Core/Src/USER/user.c **** HAL_Delay(500);
 3041              		.loc 5 67 1 view .LVU712
 3042 008c 4FF4FA70 		mov	r0, #500
 3043 0090 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 77


 3044              	.LVL255:
  68:Core/Src/USER/user.c **** SSD1306_dim(1);
 3045              		.loc 5 68 1 view .LVU713
 3046 0094 0120     		movs	r0, #1
 3047 0096 FFF7FEFF 		bl	SSD1306_dim
 3048              	.LVL256:
  69:Core/Src/USER/user.c **** HAL_Delay(500);
 3049              		.loc 5 69 1 view .LVU714
 3050 009a 4FF4FA70 		mov	r0, #500
 3051 009e FFF7FEFF 		bl	HAL_Delay
 3052              	.LVL257:
  70:Core/Src/USER/user.c **** SSD1306_clear(0);
 3053              		.loc 5 70 1 view .LVU715
 3054 00a2 2046     		mov	r0, r4
 3055 00a4 FFF7FEFF 		bl	SSD1306_clear
 3056              	.LVL258:
  71:Core/Src/USER/user.c **** 
  72:Core/Src/USER/user.c **** 
  73:Core/Src/USER/user.c **** }
 3057              		.loc 5 73 1 is_stmt 0 view .LVU716
 3058 00a8 02B0     		add	sp, sp, #8
 3059              	.LCFI67:
 3060              		.cfi_def_cfa_offset 16
 3061              		@ sp needed
 3062 00aa 70BD     		pop	{r4, r5, r6, pc}
 3063              	.L206:
 3064              		.align	2
 3065              	.L205:
 3066 00ac 00000000 		.word	.LANCHOR8
 3067 00b0 00000000 		.word	.LANCHOR9
 3068 00b4 00000000 		.word	.LANCHOR10
 3069 00b8 00000000 		.word	.LANCHOR3
 3070 00bc 00000000 		.word	.LANCHOR2
 3071 00c0 80510100 		.word	86400
 3072 00c4 00000000 		.word	.LANCHOR11
 3073 00c8 00000000 		.word	.LC0
 3074              		.cfi_endproc
 3075              	.LFE118:
 3077              		.section	.text.show_time,"ax",%progbits
 3078              		.align	1
 3079              		.global	show_time
 3080              		.syntax unified
 3081              		.thumb
 3082              		.thumb_func
 3084              	show_time:
 3085              	.LFB122:
  74:Core/Src/USER/user.c **** 
  75:Core/Src/USER/user.c **** 
  76:Core/Src/USER/user.c **** 
  77:Core/Src/USER/user.c **** void commandcom(char * txt) // network (UART,USB) command interpreter
  78:Core/Src/USER/user.c **** {
  79:Core/Src/USER/user.c **** 
  80:Core/Src/USER/user.c **** if (txt[0] !='A' || txt[1]!='T') return;
  81:Core/Src/USER/user.c **** 
  82:Core/Src/USER/user.c **** 	switch(txt[2])
  83:Core/Src/USER/user.c **** 	{
  84:Core/Src/USER/user.c **** 		case 'T':
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 78


  85:Core/Src/USER/user.c **** 			rtc_set_time_text(txt+3);
  86:Core/Src/USER/user.c **** 		break;
  87:Core/Src/USER/user.c **** 		case 'D':
  88:Core/Src/USER/user.c **** 			rtc_set_date_text(txt+3);		
  89:Core/Src/USER/user.c **** 		break; 
  90:Core/Src/USER/user.c **** 		case 'I':
  91:Core/Src/USER/user.c **** 			CDC_Transmit_FS((uint8_t*) "9H CLOCK\r\n(c)2023 Vabolis.lt\r\n",33);
  92:Core/Src/USER/user.c **** 		break;
  93:Core/Src/USER/user.c **** 		case 'A':
  94:Core/Src/USER/user.c **** 			__HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,55*255);
  95:Core/Src/USER/user.c **** 		break;
  96:Core/Src/USER/user.c **** 	}
  97:Core/Src/USER/user.c **** }
  98:Core/Src/USER/user.c **** 
  99:Core/Src/USER/user.c **** 
 100:Core/Src/USER/user.c **** void user_loop(void)
 101:Core/Src/USER/user.c **** {
 102:Core/Src/USER/user.c **** char a;
 103:Core/Src/USER/user.c **** char txt[32];
 104:Core/Src/USER/user.c **** unsigned char txtp=0;
 105:Core/Src/USER/user.c **** 
 106:Core/Src/USER/user.c **** while(1)
 107:Core/Src/USER/user.c **** 	{
 108:Core/Src/USER/user.c **** 	HAL_IWDG_Refresh(&hiwdg); //watchdogas
 109:Core/Src/USER/user.c **** 	while(circle_available(&cc)>0) 
 110:Core/Src/USER/user.c **** 		{
 111:Core/Src/USER/user.c **** 			a=circle_pull(&cc);
 112:Core/Src/USER/user.c **** 			
 113:Core/Src/USER/user.c **** 			if (a>=' ' && a<='z')
 114:Core/Src/USER/user.c **** 			{
 115:Core/Src/USER/user.c **** 				txt[txtp]=a;
 116:Core/Src/USER/user.c **** 				txtp++;
 117:Core/Src/USER/user.c **** 				txt[txtp]=0;
 118:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 119:Core/Src/USER/user.c **** 			}
 120:Core/Src/USER/user.c **** 			else if (a<' ')
 121:Core/Src/USER/user.c **** 			{
 122:Core/Src/USER/user.c **** 				if (txtp>2)commandcom(txt);
 123:Core/Src/USER/user.c **** 				txt[0]=0;
 124:Core/Src/USER/user.c **** 				txtp=0;
 125:Core/Src/USER/user.c **** 			}
 126:Core/Src/USER/user.c **** 		}
 127:Core/Src/USER/user.c **** 	}
 128:Core/Src/USER/user.c **** } /* be isejimo is loop! */
 129:Core/Src/USER/user.c **** 
 130:Core/Src/USER/user.c **** 
 131:Core/Src/USER/user.c **** 
 132:Core/Src/USER/user.c **** void user_seconds_job(void)
 133:Core/Src/USER/user.c **** {
 134:Core/Src/USER/user.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 135:Core/Src/USER/user.c **** 
 136:Core/Src/USER/user.c **** 	HAL_GPIO_TogglePin(GPIOA, LED_Pin);
 137:Core/Src/USER/user.c **** 	
 138:Core/Src/USER/user.c **** 	show_time();
 139:Core/Src/USER/user.c **** 	
 140:Core/Src/USER/user.c **** seconds++;
 141:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,seconds*255);
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 79


 142:Core/Src/USER/user.c **** }
 143:Core/Src/USER/user.c **** 
 144:Core/Src/USER/user.c **** 
 145:Core/Src/USER/user.c **** /*
 146:Core/Src/USER/user.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)  //16kHz?
 147:Core/Src/USER/user.c **** {
 148:Core/Src/USER/user.c ****   if (htim == &htim1 )
 149:Core/Src/USER/user.c ****   {
 150:Core/Src/USER/user.c ****   }
 151:Core/Src/USER/user.c **** }
 152:Core/Src/USER/user.c **** */
 153:Core/Src/USER/user.c **** 
 154:Core/Src/USER/user.c **** 
 155:Core/Src/USER/user.c **** void show_time(void)
 156:Core/Src/USER/user.c **** {
 3086              		.loc 5 156 1 is_stmt 1 view -0
 3087              		.cfi_startproc
 3088              		@ args = 0, pretend = 0, frame = 24
 3089              		@ frame_needed = 0, uses_anonymous_args = 0
 3090 0000 70B5     		push	{r4, r5, r6, lr}
 3091              	.LCFI68:
 3092              		.cfi_def_cfa_offset 16
 3093              		.cfi_offset 4, -16
 3094              		.cfi_offset 5, -12
 3095              		.cfi_offset 6, -8
 3096              		.cfi_offset 14, -4
 3097 0002 86B0     		sub	sp, sp, #24
 3098              	.LCFI69:
 3099              		.cfi_def_cfa_offset 40
 157:Core/Src/USER/user.c **** unsigned char font[]={0x00, 0x00, 0xe7, 0xe7, 0xe7, 0xe7, 0x00, 0x00};
 3100              		.loc 5 157 1 view .LVU718
 3101              		.loc 5 157 15 is_stmt 0 view .LVU719
 3102 0004 764B     		ldr	r3, .L214
 3103 0006 93E80300 		ldm	r3, {r0, r1}
 3104 000a 06AB     		add	r3, sp, #24
 3105 000c 03E90300 		stmdb	r3, {r0, r1}
 158:Core/Src/USER/user.c **** uint32_t nowsecons, uptime;
 3106              		.loc 5 158 1 is_stmt 1 view .LVU720
 159:Core/Src/USER/user.c **** char text[9];
 3107              		.loc 5 159 1 view .LVU721
 160:Core/Src/USER/user.c **** 
 161:Core/Src/USER/user.c **** RTC_DateTypeDef dienos;
 3108              		.loc 5 161 1 view .LVU722
 162:Core/Src/USER/user.c **** 
 163:Core/Src/USER/user.c **** HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 3109              		.loc 5 163 1 view .LVU723
 3110 0010 0022     		movs	r2, #0
 3111 0012 0121     		movs	r1, #1
 3112 0014 7348     		ldr	r0, .L214+4
 3113 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 3114              	.LVL259:
 164:Core/Src/USER/user.c **** HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 3115              		.loc 5 164 1 view .LVU724
 3116 001a 734D     		ldr	r5, .L214+8
 3117 001c 0022     		movs	r2, #0
 3118 001e 6946     		mov	r1, sp
 3119 0020 2846     		mov	r0, r5
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 80


 3120 0022 FFF7FEFF 		bl	HAL_RTC_GetDate
 3121              	.LVL260:
 165:Core/Src/USER/user.c **** //HAL_Delay(5);
 166:Core/Src/USER/user.c **** 
 167:Core/Src/USER/user.c **** HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3122              		.loc 5 167 1 view .LVU725
 3123 0026 714C     		ldr	r4, .L214+12
 3124 0028 0022     		movs	r2, #0
 3125 002a 2146     		mov	r1, r4
 3126 002c 2846     		mov	r0, r5
 3127 002e FFF7FEFF 		bl	HAL_RTC_GetTime
 3128              	.LVL261:
 168:Core/Src/USER/user.c **** nowsecons=currTime.Hours*3600+currTime.Minutes*60+currTime.Seconds+(dienos.Date-1)*86400;
 3129              		.loc 5 168 1 view .LVU726
 3130              		.loc 5 168 19 is_stmt 0 view .LVU727
 3131 0032 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 3132              		.loc 5 168 39 view .LVU728
 3133 0034 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 3134              		.loc 5 168 47 view .LVU729
 3135 0036 C3EB0313 		rsb	r3, r3, r3, lsl #4
 3136 003a 9D00     		lsls	r5, r3, #2
 3137              		.loc 5 168 30 view .LVU730
 3138 003c 4FF46163 		mov	r3, #3600
 3139 0040 03FB0255 		mla	r5, r3, r2, r5
 3140              		.loc 5 168 59 view .LVU731
 3141 0044 A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 3142              		.loc 5 168 50 view .LVU732
 3143 0046 1D44     		add	r5, r5, r3
 3144              		.loc 5 168 75 view .LVU733
 3145 0048 9DF80230 		ldrb	r3, [sp, #2]	@ zero_extendqisi2
 3146              		.loc 5 168 80 view .LVU734
 3147 004c 013B     		subs	r3, r3, #1
 3148              		.loc 5 168 67 view .LVU735
 3149 004e 6849     		ldr	r1, .L214+16
 3150 0050 01FB0355 		mla	r5, r1, r3, r5
 3151              	.LVL262:
 169:Core/Src/USER/user.c **** 
 170:Core/Src/USER/user.c **** if(nowsecons>bootsecons){uptime=nowsecons-bootsecons;} else {uptime=0;} //error!
 3152              		.loc 5 170 1 is_stmt 1 view .LVU736
 3153              		.loc 5 170 13 is_stmt 0 view .LVU737
 3154 0054 674B     		ldr	r3, .L214+20
 3155 0056 1B68     		ldr	r3, [r3]
 3156              		.loc 5 170 3 view .LVU738
 3157 0058 AB42     		cmp	r3, r5
 3158 005a 80F0BB80 		bcs	.L212
 3159              		.loc 5 170 26 is_stmt 1 discriminator 1 view .LVU739
 3160              		.loc 5 170 32 is_stmt 0 discriminator 1 view .LVU740
 3161 005e ED1A     		subs	r5, r5, r3
 3162              	.LVL263:
 3163              	.L208:
 171:Core/Src/USER/user.c **** 
 172:Core/Src/USER/user.c **** 
 173:Core/Src/USER/user.c **** 
 174:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+0,currTime.Hours/10);
 3164              		.loc 5 174 1 is_stmt 1 view .LVU741
 3165 0060 654C     		ldr	r4, .L214+24
 3166 0062 A4FB0232 		umull	r3, r2, r4, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 81


 3167              	.LVL264:
 3168              		.loc 5 174 1 is_stmt 0 view .LVU742
 3169 0066 D208     		lsrs	r2, r2, #3
 3170 0068 0121     		movs	r1, #1
 3171              	.LVL265:
 3172              		.loc 5 174 1 view .LVU743
 3173 006a 0020     		movs	r0, #0
 3174 006c FFF7FEFF 		bl	SSD1306_bigdigit
 3175              	.LVL266:
 175:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+2,currTime.Hours%10);
 3176              		.loc 5 175 1 is_stmt 1 view .LVU744
 3177              		.loc 5 175 32 is_stmt 0 view .LVU745
 3178 0070 5E4E     		ldr	r6, .L214+12
 3179 0072 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 3180              		.loc 5 175 1 view .LVU746
 3181 0074 A4FB0213 		umull	r1, r3, r4, r2
 3182 0078 DB08     		lsrs	r3, r3, #3
 3183 007a 03EB8303 		add	r3, r3, r3, lsl #2
 3184 007e 5900     		lsls	r1, r3, #1
 3185 0080 521A     		subs	r2, r2, r1
 3186 0082 D2B2     		uxtb	r2, r2
 3187 0084 0321     		movs	r1, #3
 3188 0086 0020     		movs	r0, #0
 3189 0088 FFF7FEFF 		bl	SSD1306_bigdigit
 3190              	.LVL267:
 176:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+5,currTime.Minutes/10);
 3191              		.loc 5 176 1 is_stmt 1 view .LVU747
 3192              		.loc 5 176 32 is_stmt 0 view .LVU748
 3193 008c 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3194              		.loc 5 176 1 view .LVU749
 3195 008e A4FB0232 		umull	r3, r2, r4, r2
 3196 0092 D208     		lsrs	r2, r2, #3
 3197 0094 0621     		movs	r1, #6
 3198 0096 0020     		movs	r0, #0
 3199 0098 FFF7FEFF 		bl	SSD1306_bigdigit
 3200              	.LVL268:
 177:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+7,currTime.Minutes%10);
 3201              		.loc 5 177 1 is_stmt 1 view .LVU750
 3202              		.loc 5 177 32 is_stmt 0 view .LVU751
 3203 009c 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 3204              		.loc 5 177 1 view .LVU752
 3205 009e A4FB0213 		umull	r1, r3, r4, r2
 3206 00a2 DB08     		lsrs	r3, r3, #3
 3207 00a4 03EB8303 		add	r3, r3, r3, lsl #2
 3208 00a8 5900     		lsls	r1, r3, #1
 3209 00aa 521A     		subs	r2, r2, r1
 3210 00ac D2B2     		uxtb	r2, r2
 3211 00ae 0821     		movs	r1, #8
 3212 00b0 0020     		movs	r0, #0
 3213 00b2 FFF7FEFF 		bl	SSD1306_bigdigit
 3214              	.LVL269:
 178:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+10,currTime.Seconds/10);
 3215              		.loc 5 178 1 is_stmt 1 view .LVU753
 3216              		.loc 5 178 33 is_stmt 0 view .LVU754
 3217 00b6 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 3218              		.loc 5 178 1 view .LVU755
 3219 00b8 A4FB0232 		umull	r3, r2, r4, r2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 82


 3220 00bc D208     		lsrs	r2, r2, #3
 3221 00be 0B21     		movs	r1, #11
 3222 00c0 0020     		movs	r0, #0
 3223 00c2 FFF7FEFF 		bl	SSD1306_bigdigit
 3224              	.LVL270:
 179:Core/Src/USER/user.c **** SSD1306_bigdigit(0,1+12,currTime.Seconds%10);
 3225              		.loc 5 179 1 is_stmt 1 view .LVU756
 3226              		.loc 5 179 33 is_stmt 0 view .LVU757
 3227 00c6 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 3228              		.loc 5 179 1 view .LVU758
 3229 00c8 A4FB0213 		umull	r1, r3, r4, r2
 3230 00cc DB08     		lsrs	r3, r3, #3
 3231 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 3232 00d2 5900     		lsls	r1, r3, #1
 3233 00d4 521A     		subs	r2, r2, r1
 3234 00d6 D2B2     		uxtb	r2, r2
 3235 00d8 0D21     		movs	r1, #13
 3236 00da 0020     		movs	r0, #0
 3237 00dc FFF7FEFF 		bl	SSD1306_bigdigit
 3238              	.LVL271:
 180:Core/Src/USER/user.c **** 
 181:Core/Src/USER/user.c **** SSD1306_move(1, 1+4);
 3239              		.loc 5 181 1 is_stmt 1 view .LVU759
 3240 00e0 0521     		movs	r1, #5
 3241 00e2 0120     		movs	r0, #1
 3242 00e4 FFF7FEFF 		bl	SSD1306_move
 3243              	.LVL272:
 182:Core/Src/USER/user.c **** 
 183:Core/Src/USER/user.c **** SSD1306_put_tile(font,8);
 3244              		.loc 5 183 1 view .LVU760
 3245 00e8 0821     		movs	r1, #8
 3246 00ea 04A8     		add	r0, sp, #16
 3247 00ec FFF7FEFF 		bl	SSD1306_put_tile
 3248              	.LVL273:
 184:Core/Src/USER/user.c **** 
 185:Core/Src/USER/user.c **** SSD1306_move(1, 1+9);
 3249              		.loc 5 185 1 view .LVU761
 3250 00f0 0A21     		movs	r1, #10
 3251 00f2 0120     		movs	r0, #1
 3252 00f4 FFF7FEFF 		bl	SSD1306_move
 3253              	.LVL274:
 186:Core/Src/USER/user.c **** SSD1306_put_tile(font,8);
 3254              		.loc 5 186 1 view .LVU762
 3255 00f8 0821     		movs	r1, #8
 3256 00fa 04A8     		add	r0, sp, #16
 3257 00fc FFF7FEFF 		bl	SSD1306_put_tile
 3258              	.LVL275:
 187:Core/Src/USER/user.c **** 
 188:Core/Src/USER/user.c **** currTime.Hours=uptime/3600;
 3259              		.loc 5 188 1 view .LVU763
 3260              		.loc 5 188 22 is_stmt 0 view .LVU764
 3261 0100 3E4A     		ldr	r2, .L214+28
 3262 0102 A2FB0532 		umull	r3, r2, r2, r5
 3263              		.loc 5 188 15 view .LVU765
 3264 0106 C2F3C722 		ubfx	r2, r2, #11, #8
 3265 010a 3270     		strb	r2, [r6]
 189:Core/Src/USER/user.c **** currTime.Minutes=(uptime-currTime.Hours*3600)/60;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 83


 3266              		.loc 5 189 1 is_stmt 1 view .LVU766
 3267              		.loc 5 189 25 is_stmt 0 view .LVU767
 3268 010c 4FF46163 		mov	r3, #3600
 3269 0110 03FB1253 		mls	r3, r3, r2, r5
 3270              		.loc 5 189 46 view .LVU768
 3271 0114 3A49     		ldr	r1, .L214+32
 3272 0116 A1FB0313 		umull	r1, r3, r1, r3
 3273              		.loc 5 189 17 view .LVU769
 3274 011a C3F34713 		ubfx	r3, r3, #5, #8
 3275 011e 7370     		strb	r3, [r6, #1]
 190:Core/Src/USER/user.c **** currTime.Seconds=uptime-currTime.Hours*3600-currTime.Minutes*60;
 3276              		.loc 5 190 1 is_stmt 1 view .LVU770
 3277              		.loc 5 190 24 is_stmt 0 view .LVU771
 3278 0120 A5EB0211 		sub	r1, r5, r2, lsl #4
 3279 0124 C9B2     		uxtb	r1, r1
 3280              		.loc 5 190 44 view .LVU772
 3281 0126 C3EB031C 		rsb	ip, r3, r3, lsl #4
 3282 012a 4FEA8C00 		lsl	r0, ip, #2
 3283 012e 091A     		subs	r1, r1, r0
 3284 0130 C9B2     		uxtb	r1, r1
 3285              		.loc 5 190 17 view .LVU773
 3286 0132 B170     		strb	r1, [r6, #2]
 191:Core/Src/USER/user.c **** 
 192:Core/Src/USER/user.c **** 
 193:Core/Src/USER/user.c **** 
 194:Core/Src/USER/user.c **** text[0]=(currTime.Hours)/10+'0';
 3287              		.loc 5 194 1 is_stmt 1 view .LVU774
 3288              		.loc 5 194 28 is_stmt 0 view .LVU775
 3289 0134 A4FB0260 		umull	r6, r0, r4, r2
 3290 0138 C008     		lsrs	r0, r0, #3
 3291 013a 00F13006 		add	r6, r0, #48
 3292              		.loc 5 194 8 view .LVU776
 3293 013e 8DF80460 		strb	r6, [sp, #4]
 195:Core/Src/USER/user.c **** text[1]=(currTime.Hours)%10+'0';
 3294              		.loc 5 195 1 is_stmt 1 view .LVU777
 3295              		.loc 5 195 28 is_stmt 0 view .LVU778
 3296 0142 00EB8000 		add	r0, r0, r0, lsl #2
 3297 0146 4600     		lsls	r6, r0, #1
 3298 0148 921B     		subs	r2, r2, r6
 3299 014a 3032     		adds	r2, r2, #48
 3300              		.loc 5 195 8 view .LVU779
 3301 014c 8DF80520 		strb	r2, [sp, #5]
 196:Core/Src/USER/user.c **** text[2]=':';	
 3302              		.loc 5 196 1 is_stmt 1 view .LVU780
 3303              		.loc 5 196 8 is_stmt 0 view .LVU781
 3304 0150 3A20     		movs	r0, #58
 3305 0152 8DF80600 		strb	r0, [sp, #6]
 197:Core/Src/USER/user.c **** 
 198:Core/Src/USER/user.c **** text[3]=(currTime.Minutes)/10+'0';
 3306              		.loc 5 198 1 is_stmt 1 view .LVU782
 3307              		.loc 5 198 30 is_stmt 0 view .LVU783
 3308 0156 A4FB0362 		umull	r6, r2, r4, r3
 3309 015a D208     		lsrs	r2, r2, #3
 3310 015c 02F13006 		add	r6, r2, #48
 3311              		.loc 5 198 8 view .LVU784
 3312 0160 8DF80760 		strb	r6, [sp, #7]
 199:Core/Src/USER/user.c **** text[4]=(currTime.Minutes)%10+'0';
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 84


 3313              		.loc 5 199 1 is_stmt 1 view .LVU785
 3314              		.loc 5 199 30 is_stmt 0 view .LVU786
 3315 0164 02EB8202 		add	r2, r2, r2, lsl #2
 3316 0168 5600     		lsls	r6, r2, #1
 3317 016a 9B1B     		subs	r3, r3, r6
 3318 016c 3033     		adds	r3, r3, #48
 3319              		.loc 5 199 8 view .LVU787
 3320 016e 8DF80830 		strb	r3, [sp, #8]
 200:Core/Src/USER/user.c **** text[5]=':';	
 3321              		.loc 5 200 1 is_stmt 1 view .LVU788
 3322              		.loc 5 200 8 is_stmt 0 view .LVU789
 3323 0172 8DF80900 		strb	r0, [sp, #9]
 201:Core/Src/USER/user.c **** 
 202:Core/Src/USER/user.c **** 
 203:Core/Src/USER/user.c **** text[6]=(currTime.Seconds)/10+'0';
 3324              		.loc 5 203 1 is_stmt 1 view .LVU790
 3325              		.loc 5 203 30 is_stmt 0 view .LVU791
 3326 0176 A4FB0134 		umull	r3, r4, r4, r1
 3327 017a E408     		lsrs	r4, r4, #3
 3328 017c 04F13003 		add	r3, r4, #48
 3329              		.loc 5 203 8 view .LVU792
 3330 0180 8DF80A30 		strb	r3, [sp, #10]
 204:Core/Src/USER/user.c **** text[7]=(currTime.Seconds)%10+'0';
 3331              		.loc 5 204 1 is_stmt 1 view .LVU793
 3332              		.loc 5 204 30 is_stmt 0 view .LVU794
 3333 0184 04EB8404 		add	r4, r4, r4, lsl #2
 3334 0188 6300     		lsls	r3, r4, #1
 3335 018a C91A     		subs	r1, r1, r3
 3336 018c 3031     		adds	r1, r1, #48
 3337              		.loc 5 204 8 view .LVU795
 3338 018e 8DF80B10 		strb	r1, [sp, #11]
 205:Core/Src/USER/user.c **** text[8]=0;
 3339              		.loc 5 205 1 is_stmt 1 view .LVU796
 3340              		.loc 5 205 8 is_stmt 0 view .LVU797
 3341 0192 0023     		movs	r3, #0
 3342 0194 8DF80C30 		strb	r3, [sp, #12]
 206:Core/Src/USER/user.c **** 
 207:Core/Src/USER/user.c **** //itoa(uptime,text,10);
 208:Core/Src/USER/user.c **** 
 209:Core/Src/USER/user.c **** 
 210:Core/Src/USER/user.c **** 
 211:Core/Src/USER/user.c **** SSD1306_move(3,4);
 3343              		.loc 5 211 1 is_stmt 1 view .LVU798
 3344 0198 0421     		movs	r1, #4
 3345 019a 0320     		movs	r0, #3
 3346 019c FFF7FEFF 		bl	SSD1306_move
 3347              	.LVL276:
 212:Core/Src/USER/user.c **** SSD1306_puts(text);
 3348              		.loc 5 212 1 view .LVU799
 3349 01a0 01A8     		add	r0, sp, #4
 3350 01a2 FFF7FEFF 		bl	SSD1306_puts
 3351              	.LVL277:
 213:Core/Src/USER/user.c **** 
 214:Core/Src/USER/user.c **** if(uptime>3*3600) {invertuotas=1;}
 3352              		.loc 5 214 1 view .LVU800
 3353              		.loc 5 214 3 is_stmt 0 view .LVU801
 3354 01a6 42F63023 		movw	r3, #10800
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 85


 3355 01aa 9D42     		cmp	r5, r3
 3356 01ac 02D9     		bls	.L209
 3357              		.loc 5 214 20 is_stmt 1 discriminator 1 view .LVU802
 3358              		.loc 5 214 31 is_stmt 0 discriminator 1 view .LVU803
 3359 01ae 154B     		ldr	r3, .L214+36
 3360 01b0 0122     		movs	r2, #1
 3361 01b2 1A70     		strb	r2, [r3]
 3362              	.L209:
 215:Core/Src/USER/user.c **** 
 216:Core/Src/USER/user.c **** if(invertuotas>0){SSD1306_invert(); invertuotas--;} else {SSD1306_normal();}
 3363              		.loc 5 216 1 is_stmt 1 view .LVU804
 3364              		.loc 5 216 15 is_stmt 0 view .LVU805
 3365 01b4 134B     		ldr	r3, .L214+36
 3366 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3367              		.loc 5 216 3 view .LVU806
 3368 01b8 73B1     		cbz	r3, .L210
 3369              		.loc 5 216 19 is_stmt 1 discriminator 1 view .LVU807
 3370 01ba FFF7FEFF 		bl	SSD1306_invert
 3371              	.LVL278:
 3372              		.loc 5 216 37 discriminator 1 view .LVU808
 3373              		.loc 5 216 48 is_stmt 0 discriminator 1 view .LVU809
 3374 01be 114A     		ldr	r2, .L214+36
 3375 01c0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3376 01c2 013B     		subs	r3, r3, #1
 3377 01c4 1370     		strb	r3, [r2]
 3378              	.L211:
 217:Core/Src/USER/user.c **** 
 218:Core/Src/USER/user.c **** HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 3379              		.loc 5 218 1 is_stmt 1 view .LVU810
 3380 01c6 0122     		movs	r2, #1
 3381 01c8 1146     		mov	r1, r2
 3382 01ca 0648     		ldr	r0, .L214+4
 3383 01cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 3384              	.LVL279:
 219:Core/Src/USER/user.c **** }
 3385              		.loc 5 219 1 is_stmt 0 view .LVU811
 3386 01d0 06B0     		add	sp, sp, #24
 3387              	.LCFI70:
 3388              		.cfi_remember_state
 3389              		.cfi_def_cfa_offset 16
 3390              		@ sp needed
 3391 01d2 70BD     		pop	{r4, r5, r6, pc}
 3392              	.LVL280:
 3393              	.L212:
 3394              	.LCFI71:
 3395              		.cfi_restore_state
 170:Core/Src/USER/user.c **** 
 3396              		.loc 5 170 68 view .LVU812
 3397 01d4 0025     		movs	r5, #0
 3398              	.LVL281:
 170:Core/Src/USER/user.c **** 
 3399              		.loc 5 170 68 view .LVU813
 3400 01d6 43E7     		b	.L208
 3401              	.LVL282:
 3402              	.L210:
 216:Core/Src/USER/user.c **** 
 3403              		.loc 5 216 59 is_stmt 1 discriminator 2 view .LVU814
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 86


 3404 01d8 FFF7FEFF 		bl	SSD1306_normal
 3405              	.LVL283:
 3406 01dc F3E7     		b	.L211
 3407              	.L215:
 3408 01de 00BF     		.align	2
 3409              	.L214:
 3410 01e0 00000000 		.word	.LANCHOR12
 3411 01e4 00080140 		.word	1073809408
 3412 01e8 00000000 		.word	.LANCHOR3
 3413 01ec 00000000 		.word	.LANCHOR2
 3414 01f0 80510100 		.word	86400
 3415 01f4 00000000 		.word	.LANCHOR11
 3416 01f8 CDCCCCCC 		.word	-858993459
 3417 01fc C5B3A291 		.word	-1851608123
 3418 0200 89888888 		.word	-2004318071
 3419 0204 00000000 		.word	.LANCHOR13
 3420              		.cfi_endproc
 3421              	.LFE122:
 3423              		.section	.text.user_seconds_job,"ax",%progbits
 3424              		.align	1
 3425              		.global	user_seconds_job
 3426              		.syntax unified
 3427              		.thumb
 3428              		.thumb_func
 3430              	user_seconds_job:
 3431              	.LFB121:
 133:Core/Src/USER/user.c **** 	HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 3432              		.loc 5 133 1 view -0
 3433              		.cfi_startproc
 3434              		@ args = 0, pretend = 0, frame = 0
 3435              		@ frame_needed = 0, uses_anonymous_args = 0
 3436 0000 08B5     		push	{r3, lr}
 3437              	.LCFI72:
 3438              		.cfi_def_cfa_offset 8
 3439              		.cfi_offset 3, -8
 3440              		.cfi_offset 14, -4
 134:Core/Src/USER/user.c **** 
 3441              		.loc 5 134 2 view .LVU816
 3442 0002 0022     		movs	r2, #0
 3443 0004 0A49     		ldr	r1, .L218
 3444 0006 0B48     		ldr	r0, .L218+4
 3445 0008 FFF7FEFF 		bl	HAL_RTC_GetTime
 3446              	.LVL284:
 136:Core/Src/USER/user.c **** 	
 3447              		.loc 5 136 2 view .LVU817
 3448 000c 0121     		movs	r1, #1
 3449 000e 0A48     		ldr	r0, .L218+8
 3450 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 3451              	.LVL285:
 138:Core/Src/USER/user.c **** 	
 3452              		.loc 5 138 2 view .LVU818
 3453 0014 FFF7FEFF 		bl	show_time
 3454              	.LVL286:
 140:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,seconds*255);
 3455              		.loc 5 140 1 view .LVU819
 140:Core/Src/USER/user.c **** __HAL_TIM_SET_COMPARE(&htim1,TIM_CHANNEL_1,seconds*255);
 3456              		.loc 5 140 8 is_stmt 0 view .LVU820
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 87


 3457 0018 084A     		ldr	r2, .L218+12
 3458 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3459 001c 0133     		adds	r3, r3, #1
 3460 001e DBB2     		uxtb	r3, r3
 3461 0020 1370     		strb	r3, [r2]
 141:Core/Src/USER/user.c **** }
 3462              		.loc 5 141 1 is_stmt 1 view .LVU821
 3463 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3464 0024 064A     		ldr	r2, .L218+16
 3465 0026 1268     		ldr	r2, [r2]
 3466 0028 C3EB0323 		rsb	r3, r3, r3, lsl #8
 3467 002c 5363     		str	r3, [r2, #52]
 142:Core/Src/USER/user.c **** 
 3468              		.loc 5 142 1 is_stmt 0 view .LVU822
 3469 002e 08BD     		pop	{r3, pc}
 3470              	.L219:
 3471              		.align	2
 3472              	.L218:
 3473 0030 00000000 		.word	.LANCHOR2
 3474 0034 00000000 		.word	.LANCHOR3
 3475 0038 00080140 		.word	1073809408
 3476 003c 00000000 		.word	.LANCHOR14
 3477 0040 00000000 		.word	.LANCHOR10
 3478              		.cfi_endproc
 3479              	.LFE121:
 3481              		.section	.text.HAL_RTCEx_RTCEventCallback,"ax",%progbits
 3482              		.align	1
 3483              		.global	HAL_RTCEx_RTCEventCallback
 3484              		.syntax unified
 3485              		.thumb
 3486              		.thumb_func
 3488              	HAL_RTCEx_RTCEventCallback:
 3489              	.LVL287:
 3490              	.LFB78:
 235:Core/Src/USER/rtc.c **** 
 236:Core/Src/USER/rtc.c **** 
 237:Core/Src/USER/rtc.c **** /**
 238:Core/Src/USER/rtc.c ****   * @brief  Second event callback.
 239:Core/Src/USER/rtc.c **** **/
 240:Core/Src/USER/rtc.c **** /* kas sekunde, turi buti ijungtas INT */
 241:Core/Src/USER/rtc.c **** void HAL_RTCEx_RTCEventCallback(RTC_HandleTypeDef *hrtc)
 242:Core/Src/USER/rtc.c **** {
 3491              		.loc 3 242 1 is_stmt 1 view -0
 3492              		.cfi_startproc
 3493              		@ args = 0, pretend = 0, frame = 0
 3494              		@ frame_needed = 0, uses_anonymous_args = 0
 3495              		.loc 3 242 1 is_stmt 0 view .LVU824
 3496 0000 08B5     		push	{r3, lr}
 3497              	.LCFI73:
 3498              		.cfi_def_cfa_offset 8
 3499              		.cfi_offset 3, -8
 3500              		.cfi_offset 14, -4
 243:Core/Src/USER/rtc.c **** 	user_seconds_job();
 3501              		.loc 3 243 2 is_stmt 1 view .LVU825
 3502 0002 FFF7FEFF 		bl	user_seconds_job
 3503              	.LVL288:
 244:Core/Src/USER/rtc.c **** 	//if(LastHour != currTime.Hours) {rtc_backup_date(); LastHour=currTime.Hours;}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 88


 245:Core/Src/USER/rtc.c **** }...
 3504              		.loc 3 245 1 is_stmt 0 view .LVU826
 3505 0006 08BD     		pop	{r3, pc}
 3506              		.cfi_endproc
 3507              	.LFE78:
 3509              		.section	.text.Error_Handler,"ax",%progbits
 3510              		.align	1
 3511              		.global	Error_Handler
 3512              		.syntax unified
 3513              		.thumb
 3514              		.thumb_func
 3516              	Error_Handler:
 3517              	.LFB130:
 428:Core/Src/main.c **** 
 429:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c **** /* USER CODE END 4 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c **** /**
 434:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 435:Core/Src/main.c ****   * @retval None
 436:Core/Src/main.c ****   */
 437:Core/Src/main.c **** void Error_Handler(void)
 438:Core/Src/main.c **** {
 3518              		.loc 2 438 1 is_stmt 1 view -0
 3519              		.cfi_startproc
 3520              		@ Volatile: function does not return.
 3521              		@ args = 0, pretend = 0, frame = 0
 3522              		@ frame_needed = 0, uses_anonymous_args = 0
 3523              		@ link register save eliminated.
 439:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 440:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 441:Core/Src/main.c ****   __disable_irq();
 3524              		.loc 2 441 3 view .LVU828
 3525              	.LBB14:
 3526              	.LBI14:
 3527              		.file 6 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 89


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 90


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 91


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 3528              		.loc 6 140 27 view .LVU829
 3529              	.LBB15:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 3530              		.loc 6 142 3 view .LVU830
 3531              		.syntax unified
 3532              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3533 0000 72B6     		cpsid i
 3534              	@ 0 "" 2
 3535              		.thumb
 3536              		.syntax unified
 3537              	.L223:
 3538              	.LBE15:
 3539              	.LBE14:
 442:Core/Src/main.c ****   while (1)
 3540              		.loc 2 442 3 discriminator 1 view .LVU831
 443:Core/Src/main.c ****   {
 444:Core/Src/main.c ****   }
 3541              		.loc 2 444 3 discriminator 1 view .LVU832
 442:Core/Src/main.c ****   while (1)
 3542              		.loc 2 442 9 discriminator 1 view .LVU833
 3543 0002 FEE7     		b	.L223
 3544              		.cfi_endproc
 3545              	.LFE130:
 3547              		.section	.text.rtc_set_date_text,"ax",%progbits
 3548              		.align	1
 3549              		.global	rtc_set_date_text
 3550              		.syntax unified
 3551              		.thumb
 3552              		.thumb_func
 3554              	rtc_set_date_text:
 3555              	.LVL289:
 3556              	.LFB70:
  95:Core/Src/USER/rtc.c **** {
 3557              		.loc 3 95 1 view -0
 3558              		.cfi_startproc
 3559              		@ args = 0, pretend = 0, frame = 8
 3560              		@ frame_needed = 0, uses_anonymous_args = 0
  95:Core/Src/USER/rtc.c **** {
 3561              		.loc 3 95 1 is_stmt 0 view .LVU835
 3562 0000 10B5     		push	{r4, lr}
 3563              	.LCFI74:
 3564              		.cfi_def_cfa_offset 8
 3565              		.cfi_offset 4, -8
 3566              		.cfi_offset 14, -4
 3567 0002 82B0     		sub	sp, sp, #8
 3568              	.LCFI75:
 3569              		.cfi_def_cfa_offset 16
 3570 0004 0446     		mov	r4, r0
  96:Core/Src/USER/rtc.c **** filter_string(Buf);
 3571              		.loc 3 96 1 is_stmt 1 view .LVU836
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 92


 3572 0006 FFF7FEFF 		bl	filter_string
 3573              	.LVL290:
  99:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 3574              		.loc 3 99 1 view .LVU837
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 3575              		.loc 3 101 1 view .LVU838
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 3576              		.loc 3 101 4 is_stmt 0 view .LVU839
 3577 000a 2046     		mov	r0, r4
 3578 000c FFF7FEFF 		bl	strlen
 3579              	.LVL291:
 101:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 3580              		.loc 3 101 3 view .LVU840
 3581 0010 0728     		cmp	r0, #7
 3582 0012 01D8     		bhi	.L229
 3583              	.L224:
 119:Core/Src/USER/rtc.c **** }
 3584              		.loc 3 119 1 view .LVU841
 3585 0014 02B0     		add	sp, sp, #8
 3586              	.LCFI76:
 3587              		.cfi_remember_state
 3588              		.cfi_def_cfa_offset 8
 3589              		@ sp needed
 3590 0016 10BD     		pop	{r4, pc}
 3591              	.LVL292:
 3592              	.L229:
 3593              	.LCFI77:
 3594              		.cfi_restore_state
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 3595              		.loc 3 102 2 is_stmt 1 view .LVU842
 102:Core/Src/USER/rtc.c **** 	char delim[] = ".";
 3596              		.loc 3 102 7 is_stmt 0 view .LVU843
 3597 0018 2E23     		movs	r3, #46
 3598 001a ADF80030 		strh	r3, [sp]	@ movhi
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 3599              		.loc 3 104 2 is_stmt 1 view .LVU844
 104:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 3600              		.loc 3 104 14 is_stmt 0 view .LVU845
 3601 001e 6946     		mov	r1, sp
 3602 0020 2046     		mov	r0, r4
 3603 0022 FFF7FEFF 		bl	strtok
 3604              	.LVL293:
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 3605              		.loc 3 105 2 is_stmt 1 view .LVU846
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 3606              		.loc 3 105 14 is_stmt 0 view .LVU847
 3607 0026 FFF7FEFF 		bl	atoi
 3608              	.LVL294:
 105:Core/Src/USER/rtc.c **** 	dienos.Year=atoi(ptr);
 3609              		.loc 3 105 13 view .LVU848
 3610 002a 8DF80700 		strb	r0, [sp, #7]
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3611              		.loc 3 107 2 is_stmt 1 view .LVU849
 107:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3612              		.loc 3 107 8 is_stmt 0 view .LVU850
 3613 002e 6946     		mov	r1, sp
 3614 0030 0020     		movs	r0, #0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 93


 3615 0032 FFF7FEFF 		bl	strtok
 3616              	.LVL295:
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 3617              		.loc 3 108 2 is_stmt 1 view .LVU851
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 3618              		.loc 3 108 15 is_stmt 0 view .LVU852
 3619 0036 FFF7FEFF 		bl	atoi
 3620              	.LVL296:
 108:Core/Src/USER/rtc.c **** 	dienos.Month=atoi(ptr);
 3621              		.loc 3 108 14 view .LVU853
 3622 003a 8DF80500 		strb	r0, [sp, #5]
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3623              		.loc 3 110 2 is_stmt 1 view .LVU854
 110:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3624              		.loc 3 110 8 is_stmt 0 view .LVU855
 3625 003e 6946     		mov	r1, sp
 3626 0040 0020     		movs	r0, #0
 3627 0042 FFF7FEFF 		bl	strtok
 3628              	.LVL297:
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 3629              		.loc 3 111 2 is_stmt 1 view .LVU856
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 3630              		.loc 3 111 14 is_stmt 0 view .LVU857
 3631 0046 FFF7FEFF 		bl	atoi
 3632              	.LVL298:
 111:Core/Src/USER/rtc.c **** 	dienos.Date=atoi(ptr);
 3633              		.loc 3 111 13 view .LVU858
 3634 004a 8DF80600 		strb	r0, [sp, #6]
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 3635              		.loc 3 113 2 is_stmt 1 view .LVU859
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 3636              		.loc 3 113 6 is_stmt 0 view .LVU860
 3637 004e 0022     		movs	r2, #0
 3638 0050 01A9     		add	r1, sp, #4
 3639 0052 0448     		ldr	r0, .L231
 3640 0054 FFF7FEFF 		bl	HAL_RTC_SetDate
 3641              	.LVL299:
 113:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 3642              		.loc 3 113 5 view .LVU861
 3643 0058 10B9     		cbnz	r0, .L230
 118:Core/Src/USER/rtc.c ****   rtc_backup_date();
 3644              		.loc 3 118 3 is_stmt 1 view .LVU862
 3645 005a FFF7FEFF 		bl	rtc_backup_date
 3646              	.LVL300:
 3647 005e D9E7     		b	.L224
 3648              	.L230:
 115:Core/Src/USER/rtc.c ****     Error_Handler();
 3649              		.loc 3 115 5 view .LVU863
 3650 0060 FFF7FEFF 		bl	Error_Handler
 3651              	.LVL301:
 3652              	.L232:
 3653              		.align	2
 3654              	.L231:
 3655 0064 00000000 		.word	.LANCHOR3
 3656              		.cfi_endproc
 3657              	.LFE70:
 3659              		.section	.text.rtc_set_time_text,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 94


 3660              		.align	1
 3661              		.global	rtc_set_time_text
 3662              		.syntax unified
 3663              		.thumb
 3664              		.thumb_func
 3666              	rtc_set_time_text:
 3667              	.LVL302:
 3668              	.LFB71:
 123:Core/Src/USER/rtc.c **** {
 3669              		.loc 3 123 1 view -0
 3670              		.cfi_startproc
 3671              		@ args = 0, pretend = 0, frame = 8
 3672              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Core/Src/USER/rtc.c **** {
 3673              		.loc 3 123 1 is_stmt 0 view .LVU865
 3674 0000 10B5     		push	{r4, lr}
 3675              	.LCFI78:
 3676              		.cfi_def_cfa_offset 8
 3677              		.cfi_offset 4, -8
 3678              		.cfi_offset 14, -4
 3679 0002 82B0     		sub	sp, sp, #8
 3680              	.LCFI79:
 3681              		.cfi_def_cfa_offset 16
 3682 0004 0446     		mov	r4, r0
 128:Core/Src/USER/rtc.c **** filter_string(Buf);
 3683              		.loc 3 128 1 is_stmt 1 view .LVU866
 3684 0006 FFF7FEFF 		bl	filter_string
 3685              	.LVL303:
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 3686              		.loc 3 130 1 view .LVU867
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 3687              		.loc 3 130 4 is_stmt 0 view .LVU868
 3688 000a 2046     		mov	r0, r4
 3689 000c FFF7FEFF 		bl	strlen
 3690              	.LVL304:
 130:Core/Src/USER/rtc.c **** if(strlen(Buf)<8) return;
 3691              		.loc 3 130 3 view .LVU869
 3692 0010 0728     		cmp	r0, #7
 3693 0012 01D8     		bhi	.L238
 3694              	.LVL305:
 3695              	.L233:
 148:Core/Src/USER/rtc.c **** }
 3696              		.loc 3 148 1 view .LVU870
 3697 0014 02B0     		add	sp, sp, #8
 3698              	.LCFI80:
 3699              		.cfi_remember_state
 3700              		.cfi_def_cfa_offset 8
 3701              		@ sp needed
 3702 0016 10BD     		pop	{r4, pc}
 3703              	.LVL306:
 3704              	.L238:
 3705              	.LCFI81:
 3706              		.cfi_restore_state
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 3707              		.loc 3 132 2 is_stmt 1 view .LVU871
 132:Core/Src/USER/rtc.c **** 	char delim[] = ":";
 3708              		.loc 3 132 7 is_stmt 0 view .LVU872
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 95


 3709 0018 3A23     		movs	r3, #58
 3710 001a ADF80430 		strh	r3, [sp, #4]	@ movhi
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 3711              		.loc 3 134 2 is_stmt 1 view .LVU873
 134:Core/Src/USER/rtc.c **** 	char *ptr = strtok(Buf, delim);
 3712              		.loc 3 134 14 is_stmt 0 view .LVU874
 3713 001e 01A9     		add	r1, sp, #4
 3714 0020 2046     		mov	r0, r4
 3715 0022 FFF7FEFF 		bl	strtok
 3716              	.LVL307:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 3717              		.loc 3 135 2 is_stmt 1 view .LVU875
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 3718              		.loc 3 135 17 is_stmt 0 view .LVU876
 3719 0026 FFF7FEFF 		bl	atoi
 3720              	.LVL308:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 3721              		.loc 3 135 16 view .LVU877
 3722 002a 0C4C     		ldr	r4, .L239
 3723              	.LVL309:
 135:Core/Src/USER/rtc.c **** 	currTime.Hours=atoi(ptr);
 3724              		.loc 3 135 16 view .LVU878
 3725 002c 2070     		strb	r0, [r4]
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3726              		.loc 3 137 2 is_stmt 1 view .LVU879
 137:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3727              		.loc 3 137 8 is_stmt 0 view .LVU880
 3728 002e 01A9     		add	r1, sp, #4
 3729 0030 0020     		movs	r0, #0
 3730 0032 FFF7FEFF 		bl	strtok
 3731              	.LVL310:
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 3732              		.loc 3 138 2 is_stmt 1 view .LVU881
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 3733              		.loc 3 138 19 is_stmt 0 view .LVU882
 3734 0036 FFF7FEFF 		bl	atoi
 3735              	.LVL311:
 138:Core/Src/USER/rtc.c **** 	currTime.Minutes=atoi(ptr);
 3736              		.loc 3 138 18 view .LVU883
 3737 003a 6070     		strb	r0, [r4, #1]
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3738              		.loc 3 140 2 is_stmt 1 view .LVU884
 140:Core/Src/USER/rtc.c **** 	ptr = strtok(NULL, delim);
 3739              		.loc 3 140 8 is_stmt 0 view .LVU885
 3740 003c 01A9     		add	r1, sp, #4
 3741 003e 0020     		movs	r0, #0
 3742 0040 FFF7FEFF 		bl	strtok
 3743              	.LVL312:
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 3744              		.loc 3 141 2 is_stmt 1 view .LVU886
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 3745              		.loc 3 141 19 is_stmt 0 view .LVU887
 3746 0044 FFF7FEFF 		bl	atoi
 3747              	.LVL313:
 141:Core/Src/USER/rtc.c **** 	currTime.Seconds=atoi(ptr);
 3748              		.loc 3 141 18 view .LVU888
 3749 0048 A070     		strb	r0, [r4, #2]
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 96


 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 3750              		.loc 3 143 2 is_stmt 1 view .LVU889
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 3751              		.loc 3 143 6 is_stmt 0 view .LVU890
 3752 004a 0022     		movs	r2, #0
 3753 004c 2146     		mov	r1, r4
 3754 004e 0448     		ldr	r0, .L239+4
 3755 0050 FFF7FEFF 		bl	HAL_RTC_SetTime
 3756              	.LVL314:
 143:Core/Src/USER/rtc.c ****  if (HAL_RTC_SetTime(&hrtc, &currTime, RTC_FORMAT_BIN) != HAL_OK)
 3757              		.loc 3 143 5 view .LVU891
 3758 0054 0028     		cmp	r0, #0
 3759 0056 DDD0     		beq	.L233
 145:Core/Src/USER/rtc.c ****     Error_Handler();
 3760              		.loc 3 145 5 is_stmt 1 view .LVU892
 3761 0058 FFF7FEFF 		bl	Error_Handler
 3762              	.LVL315:
 3763              	.L240:
 3764              		.align	2
 3765              	.L239:
 3766 005c 00000000 		.word	.LANCHOR2
 3767 0060 00000000 		.word	.LANCHOR3
 3768              		.cfi_endproc
 3769              	.LFE71:
 3771              		.section	.rodata.commandcom.str1.4,"aMS",%progbits,1
 3772              		.align	2
 3773              	.LC2:
 3774 0000 39482043 		.ascii	"9H CLOCK\015\012(c)2023 Vabolis.lt\015\012\000"
 3774      4C4F434B 
 3774      0D0A2863 
 3774      29323032 
 3774      33205661 
 3775              		.section	.text.commandcom,"ax",%progbits
 3776              		.align	1
 3777              		.global	commandcom
 3778              		.syntax unified
 3779              		.thumb
 3780              		.thumb_func
 3782              	commandcom:
 3783              	.LVL316:
 3784              	.LFB119:
  78:Core/Src/USER/user.c **** 
 3785              		.loc 5 78 1 view -0
 3786              		.cfi_startproc
 3787              		@ args = 0, pretend = 0, frame = 0
 3788              		@ frame_needed = 0, uses_anonymous_args = 0
  78:Core/Src/USER/user.c **** 
 3789              		.loc 5 78 1 is_stmt 0 view .LVU894
 3790 0000 08B5     		push	{r3, lr}
 3791              	.LCFI82:
 3792              		.cfi_def_cfa_offset 8
 3793              		.cfi_offset 3, -8
 3794              		.cfi_offset 14, -4
  80:Core/Src/USER/user.c **** 
 3795              		.loc 5 80 1 is_stmt 1 view .LVU895
  80:Core/Src/USER/user.c **** 
 3796              		.loc 5 80 8 is_stmt 0 view .LVU896
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 97


 3797 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  80:Core/Src/USER/user.c **** 
 3798              		.loc 5 80 4 view .LVU897
 3799 0004 412B     		cmp	r3, #65
 3800 0006 15D1     		bne	.L241
  80:Core/Src/USER/user.c **** 
 3801              		.loc 5 80 24 discriminator 2 view .LVU898
 3802 0008 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  80:Core/Src/USER/user.c **** 
 3803              		.loc 5 80 18 discriminator 2 view .LVU899
 3804 000a 542B     		cmp	r3, #84
 3805 000c 12D1     		bne	.L241
  82:Core/Src/USER/user.c **** 	{
 3806              		.loc 5 82 2 is_stmt 1 view .LVU900
  82:Core/Src/USER/user.c **** 	{
 3807              		.loc 5 82 12 is_stmt 0 view .LVU901
 3808 000e 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
  82:Core/Src/USER/user.c **** 	{
 3809              		.loc 5 82 2 view .LVU902
 3810 0010 413B     		subs	r3, r3, #65
 3811 0012 132B     		cmp	r3, #19
 3812 0014 0ED8     		bhi	.L241
 3813 0016 DFE803F0 		tbb	[pc, r3]
 3814              	.L244:
 3815 001a 17       		.byte	(.L247-.L244)/2
 3816 001b 0D       		.byte	(.L241-.L244)/2
 3817 001c 0D       		.byte	(.L241-.L244)/2
 3818 001d 0E       		.byte	(.L246-.L244)/2
 3819 001e 0D       		.byte	(.L241-.L244)/2
 3820 001f 0D       		.byte	(.L241-.L244)/2
 3821 0020 0D       		.byte	(.L241-.L244)/2
 3822 0021 0D       		.byte	(.L241-.L244)/2
 3823 0022 12       		.byte	(.L245-.L244)/2
 3824 0023 0D       		.byte	(.L241-.L244)/2
 3825 0024 0D       		.byte	(.L241-.L244)/2
 3826 0025 0D       		.byte	(.L241-.L244)/2
 3827 0026 0D       		.byte	(.L241-.L244)/2
 3828 0027 0D       		.byte	(.L241-.L244)/2
 3829 0028 0D       		.byte	(.L241-.L244)/2
 3830 0029 0D       		.byte	(.L241-.L244)/2
 3831 002a 0D       		.byte	(.L241-.L244)/2
 3832 002b 0D       		.byte	(.L241-.L244)/2
 3833 002c 0D       		.byte	(.L241-.L244)/2
 3834 002d 0A       		.byte	(.L243-.L244)/2
 3835              		.p2align 1
 3836              	.L243:
  85:Core/Src/USER/user.c **** 		break;
 3837              		.loc 5 85 4 is_stmt 1 view .LVU903
 3838 002e 0330     		adds	r0, r0, #3
 3839              	.LVL317:
  85:Core/Src/USER/user.c **** 		break;
 3840              		.loc 5 85 4 is_stmt 0 view .LVU904
 3841 0030 FFF7FEFF 		bl	rtc_set_time_text
 3842              	.LVL318:
  86:Core/Src/USER/user.c **** 		case 'D':
 3843              		.loc 5 86 3 is_stmt 1 view .LVU905
 3844              	.L241:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 98


  97:Core/Src/USER/user.c **** 
 3845              		.loc 5 97 1 is_stmt 0 view .LVU906
 3846 0034 08BD     		pop	{r3, pc}
 3847              	.LVL319:
 3848              	.L246:
  88:Core/Src/USER/user.c **** 		break; 
 3849              		.loc 5 88 4 is_stmt 1 view .LVU907
 3850 0036 0330     		adds	r0, r0, #3
 3851              	.LVL320:
  88:Core/Src/USER/user.c **** 		break; 
 3852              		.loc 5 88 4 is_stmt 0 view .LVU908
 3853 0038 FFF7FEFF 		bl	rtc_set_date_text
 3854              	.LVL321:
  89:Core/Src/USER/user.c **** 		case 'I':
 3855              		.loc 5 89 3 is_stmt 1 view .LVU909
 3856 003c FAE7     		b	.L241
 3857              	.LVL322:
 3858              	.L245:
  91:Core/Src/USER/user.c **** 		break;
 3859              		.loc 5 91 4 view .LVU910
 3860 003e 2121     		movs	r1, #33
 3861 0040 0448     		ldr	r0, .L249
 3862              	.LVL323:
  91:Core/Src/USER/user.c **** 		break;
 3863              		.loc 5 91 4 is_stmt 0 view .LVU911
 3864 0042 FFF7FEFF 		bl	CDC_Transmit_FS
 3865              	.LVL324:
  92:Core/Src/USER/user.c **** 		case 'A':
 3866              		.loc 5 92 3 is_stmt 1 view .LVU912
 3867 0046 F5E7     		b	.L241
 3868              	.LVL325:
 3869              	.L247:
  94:Core/Src/USER/user.c **** 		break;
 3870              		.loc 5 94 4 view .LVU913
 3871 0048 034B     		ldr	r3, .L249+4
 3872 004a 1B68     		ldr	r3, [r3]
 3873 004c 43F2C962 		movw	r2, #14025
 3874 0050 5A63     		str	r2, [r3, #52]
  95:Core/Src/USER/user.c **** 	}
 3875              		.loc 5 95 3 view .LVU914
 3876 0052 EFE7     		b	.L241
 3877              	.L250:
 3878              		.align	2
 3879              	.L249:
 3880 0054 00000000 		.word	.LC2
 3881 0058 00000000 		.word	.LANCHOR10
 3882              		.cfi_endproc
 3883              	.LFE119:
 3885              		.section	.text.user_loop,"ax",%progbits
 3886              		.align	1
 3887              		.global	user_loop
 3888              		.syntax unified
 3889              		.thumb
 3890              		.thumb_func
 3892              	user_loop:
 3893              	.LFB120:
 101:Core/Src/USER/user.c **** char a;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 99


 3894              		.loc 5 101 1 view -0
 3895              		.cfi_startproc
 3896              		@ args = 0, pretend = 0, frame = 32
 3897              		@ frame_needed = 0, uses_anonymous_args = 0
 3898 0000 10B5     		push	{r4, lr}
 3899              	.LCFI83:
 3900              		.cfi_def_cfa_offset 8
 3901              		.cfi_offset 4, -8
 3902              		.cfi_offset 14, -4
 3903 0002 88B0     		sub	sp, sp, #32
 3904              	.LCFI84:
 3905              		.cfi_def_cfa_offset 40
 102:Core/Src/USER/user.c **** char txt[32];
 3906              		.loc 5 102 1 view .LVU916
 103:Core/Src/USER/user.c **** unsigned char txtp=0;
 3907              		.loc 5 103 1 view .LVU917
 104:Core/Src/USER/user.c **** 
 3908              		.loc 5 104 1 view .LVU918
 3909              	.LVL326:
 104:Core/Src/USER/user.c **** 
 3910              		.loc 5 104 15 is_stmt 0 view .LVU919
 3911 0004 0024     		movs	r4, #0
 3912              	.LVL327:
 3913              	.L257:
 106:Core/Src/USER/user.c **** 	{
 3914              		.loc 5 106 1 is_stmt 1 view .LVU920
 108:Core/Src/USER/user.c **** 	while(circle_available(&cc)>0) 
 3915              		.loc 5 108 2 view .LVU921
 3916 0006 1648     		ldr	r0, .L261
 3917 0008 FFF7FEFF 		bl	HAL_IWDG_Refresh
 3918              	.LVL328:
 109:Core/Src/USER/user.c **** 		{
 3919              		.loc 5 109 2 view .LVU922
 3920              	.L252:
 109:Core/Src/USER/user.c **** 		{
 3921              		.loc 5 109 7 view .LVU923
 109:Core/Src/USER/user.c **** 		{
 3922              		.loc 5 109 8 is_stmt 0 view .LVU924
 3923 000c 1548     		ldr	r0, .L261+4
 3924 000e FFF7FEFF 		bl	circle_available
 3925              	.LVL329:
 109:Core/Src/USER/user.c **** 		{
 3926              		.loc 5 109 7 view .LVU925
 3927 0012 0028     		cmp	r0, #0
 3928 0014 F7D0     		beq	.L257
 111:Core/Src/USER/user.c **** 			
 3929              		.loc 5 111 4 is_stmt 1 view .LVU926
 111:Core/Src/USER/user.c **** 			
 3930              		.loc 5 111 6 is_stmt 0 view .LVU927
 3931 0016 1348     		ldr	r0, .L261+4
 3932 0018 FFF7FEFF 		bl	circle_pull
 3933              	.LVL330:
 113:Core/Src/USER/user.c **** 			{
 3934              		.loc 5 113 4 is_stmt 1 view .LVU928
 113:Core/Src/USER/user.c **** 			{
 3935              		.loc 5 113 15 is_stmt 0 view .LVU929
 3936 001c A0F12003 		sub	r3, r0, #32
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 100


 3937 0020 DBB2     		uxtb	r3, r3
 113:Core/Src/USER/user.c **** 			{
 3938              		.loc 5 113 7 view .LVU930
 3939 0022 5A2B     		cmp	r3, #90
 3940 0024 10D8     		bhi	.L253
 115:Core/Src/USER/user.c **** 				txtp++;
 3941              		.loc 5 115 5 is_stmt 1 view .LVU931
 115:Core/Src/USER/user.c **** 				txtp++;
 3942              		.loc 5 115 14 is_stmt 0 view .LVU932
 3943 0026 04F12003 		add	r3, r4, #32
 3944 002a 6B44     		add	r3, sp, r3
 3945 002c 03F8200C 		strb	r0, [r3, #-32]
 116:Core/Src/USER/user.c **** 				txt[txtp]=0;
 3946              		.loc 5 116 5 is_stmt 1 view .LVU933
 116:Core/Src/USER/user.c **** 				txt[txtp]=0;
 3947              		.loc 5 116 9 is_stmt 0 view .LVU934
 3948 0030 0134     		adds	r4, r4, #1
 3949              	.LVL331:
 116:Core/Src/USER/user.c **** 				txt[txtp]=0;
 3950              		.loc 5 116 9 view .LVU935
 3951 0032 E4B2     		uxtb	r4, r4
 3952              	.LVL332:
 117:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 3953              		.loc 5 117 5 is_stmt 1 view .LVU936
 117:Core/Src/USER/user.c **** 				if (txtp >30) {txtp=0;}
 3954              		.loc 5 117 14 is_stmt 0 view .LVU937
 3955 0034 04F12003 		add	r3, r4, #32
 3956 0038 6B44     		add	r3, sp, r3
 3957 003a 0022     		movs	r2, #0
 3958 003c 03F8202C 		strb	r2, [r3, #-32]
 118:Core/Src/USER/user.c **** 			}
 3959              		.loc 5 118 5 is_stmt 1 view .LVU938
 118:Core/Src/USER/user.c **** 			}
 3960              		.loc 5 118 8 is_stmt 0 view .LVU939
 3961 0040 1E2C     		cmp	r4, #30
 3962 0042 E3D9     		bls	.L252
 118:Core/Src/USER/user.c **** 			}
 3963              		.loc 5 118 24 view .LVU940
 3964 0044 0024     		movs	r4, #0
 3965              	.LVL333:
 118:Core/Src/USER/user.c **** 			}
 3966              		.loc 5 118 24 view .LVU941
 3967 0046 E1E7     		b	.L252
 3968              	.LVL334:
 3969              	.L253:
 120:Core/Src/USER/user.c **** 			{
 3970              		.loc 5 120 9 is_stmt 1 view .LVU942
 120:Core/Src/USER/user.c **** 			{
 3971              		.loc 5 120 12 is_stmt 0 view .LVU943
 3972 0048 1F28     		cmp	r0, #31
 3973 004a DFD8     		bhi	.L252
 122:Core/Src/USER/user.c **** 				txt[0]=0;
 3974              		.loc 5 122 5 is_stmt 1 view .LVU944
 122:Core/Src/USER/user.c **** 				txt[0]=0;
 3975              		.loc 5 122 8 is_stmt 0 view .LVU945
 3976 004c 022C     		cmp	r4, #2
 3977 004e 03D8     		bhi	.L260
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 101


 3978              	.LVL335:
 3979              	.L255:
 123:Core/Src/USER/user.c **** 				txtp=0;
 3980              		.loc 5 123 5 is_stmt 1 view .LVU946
 123:Core/Src/USER/user.c **** 				txtp=0;
 3981              		.loc 5 123 11 is_stmt 0 view .LVU947
 3982 0050 0024     		movs	r4, #0
 3983              	.LVL336:
 123:Core/Src/USER/user.c **** 				txtp=0;
 3984              		.loc 5 123 11 view .LVU948
 3985 0052 8DF80040 		strb	r4, [sp]
 124:Core/Src/USER/user.c **** 			}
 3986              		.loc 5 124 5 is_stmt 1 view .LVU949
 3987              	.LVL337:
 124:Core/Src/USER/user.c **** 			}
 3988              		.loc 5 124 5 is_stmt 0 view .LVU950
 3989 0056 D9E7     		b	.L252
 3990              	.LVL338:
 3991              	.L260:
 122:Core/Src/USER/user.c **** 				txt[0]=0;
 3992              		.loc 5 122 16 is_stmt 1 discriminator 1 view .LVU951
 3993 0058 6846     		mov	r0, sp
 3994              	.LVL339:
 122:Core/Src/USER/user.c **** 				txt[0]=0;
 3995              		.loc 5 122 16 is_stmt 0 discriminator 1 view .LVU952
 3996 005a FFF7FEFF 		bl	commandcom
 3997              	.LVL340:
 3998 005e F7E7     		b	.L255
 3999              	.L262:
 4000              		.align	2
 4001              	.L261:
 4002 0060 00000000 		.word	.LANCHOR15
 4003 0064 00000000 		.word	.LANCHOR8
 4004              		.cfi_endproc
 4005              	.LFE120:
 4007              		.section	.text.rtc_check_screwd_calendar,"ax",%progbits
 4008              		.align	1
 4009              		.global	rtc_check_screwd_calendar
 4010              		.syntax unified
 4011              		.thumb
 4012              		.thumb_func
 4014              	rtc_check_screwd_calendar:
 4015              	.LFB76:
 201:Core/Src/USER/rtc.c **** {
 4016              		.loc 3 201 1 is_stmt 1 view -0
 4017              		.cfi_startproc
 4018              		@ args = 0, pretend = 0, frame = 8
 4019              		@ frame_needed = 0, uses_anonymous_args = 0
 4020 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4021              	.LCFI85:
 4022              		.cfi_def_cfa_offset 24
 4023              		.cfi_offset 4, -24
 4024              		.cfi_offset 5, -20
 4025              		.cfi_offset 6, -16
 4026              		.cfi_offset 7, -12
 4027              		.cfi_offset 8, -8
 4028              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 102


 4029 0004 82B0     		sub	sp, sp, #8
 4030              	.LCFI86:
 4031              		.cfi_def_cfa_offset 32
 202:Core/Src/USER/rtc.c **** RTC_DateTypeDef dienos;
 4032              		.loc 3 202 1 view .LVU954
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 4033              		.loc 3 203 2 view .LVU955
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 4034              		.loc 3 203 5 is_stmt 0 view .LVU956
 4035 0006 0121     		movs	r1, #1
 4036 0008 2A48     		ldr	r0, .L269
 4037 000a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4038              	.LVL341:
 203:Core/Src/USER/rtc.c **** 	if(HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR1)== 0x5051) //magic number, valid backup
 4039              		.loc 3 203 4 view .LVU957
 4040 000e 45F25103 		movw	r3, #20561
 4041 0012 9842     		cmp	r0, r3
 4042 0014 02D0     		beq	.L267
 4043              	.L263:
 225:Core/Src/USER/rtc.c **** }
 4044              		.loc 3 225 1 view .LVU958
 4045 0016 02B0     		add	sp, sp, #8
 4046              	.LCFI87:
 4047              		.cfi_remember_state
 4048              		.cfi_def_cfa_offset 24
 4049              		@ sp needed
 4050 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4051              	.L267:
 4052              	.LCFI88:
 4053              		.cfi_restore_state
 4054              	.LBB16:
 205:Core/Src/USER/rtc.c **** 		HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 4055              		.loc 3 205 3 is_stmt 1 view .LVU959
 4056 001c DFF89480 		ldr	r8, .L269
 4057 0020 0022     		movs	r2, #0
 4058 0022 01A9     		add	r1, sp, #4
 4059 0024 4046     		mov	r0, r8
 4060 0026 FFF7FEFF 		bl	HAL_RTC_GetDate
 4061              	.LVL342:
 206:Core/Src/USER/rtc.c **** 		HAL_RTC_GetTime(&hrtc, &currTime, RTC_FORMAT_BIN);
 4062              		.loc 3 206 3 view .LVU960
 4063 002a 234C     		ldr	r4, .L269+4
 4064 002c 0022     		movs	r2, #0
 4065 002e 2146     		mov	r1, r4
 4066 0030 4046     		mov	r0, r8
 4067 0032 FFF7FEFF 		bl	HAL_RTC_GetTime
 4068              	.LVL343:
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4069              		.loc 3 207 3 view .LVU961
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4070              		.loc 3 207 27 is_stmt 0 view .LVU962
 4071 0036 2478     		ldrb	r4, [r4]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4072              		.loc 3 207 40 view .LVU963
 4073 0038 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4074              		.loc 3 207 45 view .LVU964
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 103


 4075 003c 03EB4303 		add	r3, r3, r3, lsl #1
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4076              		.loc 3 207 33 view .LVU965
 4077 0040 04EBC304 		add	r4, r4, r3, lsl #3
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4078              		.loc 3 207 55 view .LVU966
 4079 0044 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4080              		.loc 3 207 64 view .LVU967
 4081 0048 4FF43A77 		mov	r7, #744
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4082              		.loc 3 207 48 view .LVU968
 4083 004c 07FB0344 		mla	r4, r7, r3, r4
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4084              		.loc 3 207 74 view .LVU969
 4085 0050 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4086              		.loc 3 207 83 view .LVU970
 4087 0054 42F25026 		movw	r6, #8784
 207:Core/Src/USER/rtc.c **** 		uint32_t now_is=currTime.Hours+dienos.Date*24+dienos.Month*31*24+dienos.Year*366*24;
 4088              		.loc 3 207 67 view .LVU971
 4089 0058 06FB0344 		mla	r4, r6, r3, r4
 4090              	.LVL344:
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 4091              		.loc 3 209 3 is_stmt 1 view .LVU972
 209:Core/Src/USER/rtc.c **** 		uint32_t tmp=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR2);
 4092              		.loc 3 209 16 is_stmt 0 view .LVU973
 4093 005c 0221     		movs	r1, #2
 4094 005e 4046     		mov	r0, r8
 4095 0060 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4096              	.LVL345:
 4097 0064 0546     		mov	r5, r0
 4098              	.LVL346:
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 4099              		.loc 3 210 3 is_stmt 1 view .LVU974
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 4100              		.loc 3 210 17 is_stmt 0 view .LVU975
 4101 0066 0321     		movs	r1, #3
 4102 0068 4046     		mov	r0, r8
 4103              	.LVL347:
 210:Core/Src/USER/rtc.c **** 		uint32_t tmp2=HAL_RTCEx_BKUPRead(&hrtc,RTC_BKP_DR3);	
 4104              		.loc 3 210 17 view .LVU976
 4105 006a FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4106              	.LVL348:
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4107              		.loc 3 212 3 is_stmt 1 view .LVU977
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4108              		.loc 3 212 24 is_stmt 0 view .LVU978
 4109 006e 290A     		lsrs	r1, r5, #8
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4110              		.loc 3 212 41 view .LVU979
 4111 0070 05F00F03 		and	r3, r5, #15
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4112              		.loc 3 212 53 view .LVU980
 4113 0074 07FB03F3 		mul	r3, r7, r3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4114              		.loc 3 212 35 view .LVU981
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 104


 4115 0078 06FB0133 		mla	r3, r6, r1, r3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4116              		.loc 3 212 62 view .LVU982
 4117 007c 020A     		lsrs	r2, r0, #8
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4118              		.loc 3 212 66 view .LVU983
 4119 007e 02EB4206 		add	r6, r2, r2, lsl #1
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4120              		.loc 3 212 56 view .LVU984
 4121 0082 03EBC603 		add	r3, r3, r6, lsl #3
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4122              		.loc 3 212 76 view .LVU985
 4123 0086 C0B2     		uxtb	r0, r0
 4124              	.LVL349:
 212:Core/Src/USER/rtc.c **** 		uint32_t now_was=(tmp>>8)*366*24+(tmp & 0x000F)*31*24+(tmp2>>8)*24+(tmp2 & 0xFF);
 4125              		.loc 3 212 12 view .LVU986
 4126 0088 0344     		add	r3, r3, r0
 4127              	.LVL350:
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 4128              		.loc 3 213 3 is_stmt 1 view .LVU987
 213:Core/Src/USER/rtc.c **** 		if(now_was > now_is)
 4129              		.loc 3 213 5 is_stmt 0 view .LVU988
 4130 008a 9C42     		cmp	r4, r3
 4131 008c C3D2     		bcs	.L263
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 4132              		.loc 3 215 4 is_stmt 1 view .LVU989
 215:Core/Src/USER/rtc.c **** 			dienos.Year=(tmp >> 8);
 4133              		.loc 3 215 15 is_stmt 0 view .LVU990
 4134 008e 8DF80710 		strb	r1, [sp, #7]
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 4135              		.loc 3 216 4 is_stmt 1 view .LVU991
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 4136              		.loc 3 216 21 is_stmt 0 view .LVU992
 4137 0092 05F00F05 		and	r5, r5, #15
 4138              	.LVL351:
 216:Core/Src/USER/rtc.c **** 			dienos.Month=tmp & 0x0F;
 4139              		.loc 3 216 16 view .LVU993
 4140 0096 8DF80550 		strb	r5, [sp, #5]
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 4141              		.loc 3 217 4 is_stmt 1 view .LVU994
 217:Core/Src/USER/rtc.c **** 			dienos.Date=(tmp2 >> 8);
 4142              		.loc 3 217 15 is_stmt 0 view .LVU995
 4143 009a 8DF80620 		strb	r2, [sp, #6]
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4144              		.loc 3 218 5 is_stmt 1 view .LVU996
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4145              		.loc 3 218 9 is_stmt 0 view .LVU997
 4146 009e 0022     		movs	r2, #0
 4147 00a0 01A9     		add	r1, sp, #4
 4148 00a2 4046     		mov	r0, r8
 4149 00a4 FFF7FEFF 		bl	HAL_RTC_SetDate
 4150              	.LVL352:
 218:Core/Src/USER/rtc.c **** 			 if (HAL_RTC_SetDate(&hrtc, &dienos, RTC_FORMAT_BIN) != HAL_OK)
 4151              		.loc 3 218 8 view .LVU998
 4152 00a8 10B9     		cbnz	r0, .L268
 222:Core/Src/USER/rtc.c **** 			 rtc_backup_date();
 4153              		.loc 3 222 5 is_stmt 1 view .LVU999
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 105


 4154 00aa FFF7FEFF 		bl	rtc_backup_date
 4155              	.LVL353:
 4156              	.LBE16:
 225:Core/Src/USER/rtc.c **** }
 4157              		.loc 3 225 1 is_stmt 0 view .LVU1000
 4158 00ae B2E7     		b	.L263
 4159              	.L268:
 4160              	.LBB17:
 220:Core/Src/USER/rtc.c **** 				Error_Handler();
 4161              		.loc 3 220 5 is_stmt 1 view .LVU1001
 4162 00b0 FFF7FEFF 		bl	Error_Handler
 4163              	.LVL354:
 4164              	.L270:
 4165              		.align	2
 4166              	.L269:
 4167 00b4 00000000 		.word	.LANCHOR3
 4168 00b8 00000000 		.word	.LANCHOR2
 4169              	.LBE17:
 4170              		.cfi_endproc
 4171              	.LFE76:
 4173              		.section	.text.MX_RTC_Init,"ax",%progbits
 4174              		.align	1
 4175              		.syntax unified
 4176              		.thumb
 4177              		.thumb_func
 4179              	MX_RTC_Init:
 4180              	.LFB127:
 239:Core/Src/main.c **** 
 4181              		.loc 2 239 1 view -0
 4182              		.cfi_startproc
 4183              		@ args = 0, pretend = 0, frame = 16
 4184              		@ frame_needed = 0, uses_anonymous_args = 0
 4185 0000 10B5     		push	{r4, lr}
 4186              	.LCFI89:
 4187              		.cfi_def_cfa_offset 8
 4188              		.cfi_offset 4, -8
 4189              		.cfi_offset 14, -4
 4190 0002 84B0     		sub	sp, sp, #16
 4191              	.LCFI90:
 4192              		.cfi_def_cfa_offset 24
 245:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 4193              		.loc 2 245 3 view .LVU1003
 245:Core/Src/main.c ****   RTC_DateTypeDef DateToUpdate = {0};
 4194              		.loc 2 245 19 is_stmt 0 view .LVU1004
 4195 0004 0023     		movs	r3, #0
 4196 0006 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 4197 000a 8DF80E30 		strb	r3, [sp, #14]
 246:Core/Src/main.c **** 
 4198              		.loc 2 246 3 is_stmt 1 view .LVU1005
 246:Core/Src/main.c **** 
 4199              		.loc 2 246 19 is_stmt 0 view .LVU1006
 4200 000e 0293     		str	r3, [sp, #8]
 249:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 4201              		.loc 2 249 3 is_stmt 1 view .LVU1007
 249:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 4202              		.loc 2 249 17 is_stmt 0 view .LVU1008
 4203 0010 2F4B     		ldr	r3, .L281
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 106


 4204 0012 304A     		ldr	r2, .L281+4
 4205 0014 1A60     		str	r2, [r3]
 250:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 4206              		.loc 2 250 3 is_stmt 1 view .LVU1009
 250:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 4207              		.loc 2 250 26 is_stmt 0 view .LVU1010
 4208 0016 4FF0FF32 		mov	r2, #-1
 4209 001a 5A60     		str	r2, [r3, #4]
 251:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
 4210              		.loc 2 251 3 is_stmt 1 view .LVU1011
 251:Core/Src/main.c ****   if ((RCC->BDCR & RCC_BDCR_RTCEN) == 0) {
 4211              		.loc 2 251 20 is_stmt 0 view .LVU1012
 4212 001c 4FF48072 		mov	r2, #256
 4213 0020 9A60     		str	r2, [r3, #8]
 252:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 4214              		.loc 2 252 3 is_stmt 1 view .LVU1013
 252:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 4215              		.loc 2 252 11 is_stmt 0 view .LVU1014
 4216 0022 2D4B     		ldr	r3, .L281+8
 4217 0024 1B6A     		ldr	r3, [r3, #32]
 252:Core/Src/main.c ****   /* USER CODE END RTC_Init 1 */
 4218              		.loc 2 252 6 view .LVU1015
 4219 0026 13F4004F 		tst	r3, #32768
 4220 002a 05D1     		bne	.L272
 257:Core/Src/main.c ****   hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 4221              		.loc 2 257 3 is_stmt 1 view .LVU1016
 258:Core/Src/main.c ****   hrtc.Init.OutPut = RTC_OUTPUTSOURCE_ALARM;
 4222              		.loc 2 258 3 view .LVU1017
 259:Core/Src/main.c ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 4223              		.loc 2 259 3 view .LVU1018
 260:Core/Src/main.c ****   {
 4224              		.loc 2 260 3 view .LVU1019
 260:Core/Src/main.c ****   {
 4225              		.loc 2 260 7 is_stmt 0 view .LVU1020
 4226 002c 2848     		ldr	r0, .L281
 4227 002e FFF7FEFF 		bl	HAL_RTC_Init
 4228              	.LVL355:
 260:Core/Src/main.c ****   {
 4229              		.loc 2 260 6 view .LVU1021
 4230 0032 48B1     		cbz	r0, .L273
 262:Core/Src/main.c ****   }
 4231              		.loc 2 262 5 is_stmt 1 view .LVU1022
 4232 0034 FFF7FEFF 		bl	Error_Handler
 4233              	.LVL356:
 4234              	.L272:
 268:Core/Src/main.c **** 	  HAL_NVIC_EnableIRQ(RTC_IRQn);
 4235              		.loc 2 268 4 view .LVU1023
 4236 0038 0022     		movs	r2, #0
 4237 003a 0F21     		movs	r1, #15
 4238 003c 0320     		movs	r0, #3
 4239 003e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 4240              	.LVL357:
 269:Core/Src/main.c **** 	}
 4241              		.loc 2 269 4 view .LVU1024
 4242 0042 0320     		movs	r0, #3
 4243 0044 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 4244              	.LVL358:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 107


 4245              	.L273:
 271:Core/Src/main.c **** 	{
 4246              		.loc 2 271 2 view .LVU1025
 271:Core/Src/main.c **** 	{
 4247              		.loc 2 271 5 is_stmt 0 view .LVU1026
 4248 0048 0121     		movs	r1, #1
 4249 004a 2148     		ldr	r0, .L281
 4250 004c FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 4251              	.LVL359:
 271:Core/Src/main.c **** 	{
 4252              		.loc 2 271 4 view .LVU1027
 4253 0050 45F25103 		movw	r3, #20561
 4254 0054 9842     		cmp	r0, r3
 4255 0056 1BD0     		beq	.L274
 277:Core/Src/main.c ****   sTime.Minutes = 0x0;
 4256              		.loc 2 277 3 is_stmt 1 view .LVU1028
 277:Core/Src/main.c ****   sTime.Minutes = 0x0;
 4257              		.loc 2 277 15 is_stmt 0 view .LVU1029
 4258 0058 0023     		movs	r3, #0
 4259 005a 8DF80C30 		strb	r3, [sp, #12]
 278:Core/Src/main.c ****   sTime.Seconds = 0x0;
 4260              		.loc 2 278 3 is_stmt 1 view .LVU1030
 278:Core/Src/main.c ****   sTime.Seconds = 0x0;
 4261              		.loc 2 278 17 is_stmt 0 view .LVU1031
 4262 005e 8DF80D30 		strb	r3, [sp, #13]
 279:Core/Src/main.c **** 
 4263              		.loc 2 279 3 is_stmt 1 view .LVU1032
 279:Core/Src/main.c **** 
 4264              		.loc 2 279 17 is_stmt 0 view .LVU1033
 4265 0062 8DF80E30 		strb	r3, [sp, #14]
 281:Core/Src/main.c ****   {
 4266              		.loc 2 281 3 is_stmt 1 view .LVU1034
 281:Core/Src/main.c ****   {
 4267              		.loc 2 281 7 is_stmt 0 view .LVU1035
 4268 0066 0122     		movs	r2, #1
 4269 0068 03A9     		add	r1, sp, #12
 4270 006a 1948     		ldr	r0, .L281
 4271 006c FFF7FEFF 		bl	HAL_RTC_SetTime
 4272              	.LVL360:
 281:Core/Src/main.c ****   {
 4273              		.loc 2 281 6 view .LVU1036
 4274 0070 30BB     		cbnz	r0, .L278
 285:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 4275              		.loc 2 285 3 is_stmt 1 view .LVU1037
 285:Core/Src/main.c ****   DateToUpdate.Month = RTC_MONTH_JANUARY;
 4276              		.loc 2 285 24 is_stmt 0 view .LVU1038
 4277 0072 0122     		movs	r2, #1
 4278 0074 8DF80820 		strb	r2, [sp, #8]
 286:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 4279              		.loc 2 286 3 is_stmt 1 view .LVU1039
 286:Core/Src/main.c ****   DateToUpdate.Date = 0x1;
 4280              		.loc 2 286 22 is_stmt 0 view .LVU1040
 4281 0078 8DF80920 		strb	r2, [sp, #9]
 287:Core/Src/main.c ****   DateToUpdate.Year = 0x0;
 4282              		.loc 2 287 3 is_stmt 1 view .LVU1041
 287:Core/Src/main.c ****   DateToUpdate.Year = 0x0;
 4283              		.loc 2 287 21 is_stmt 0 view .LVU1042
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 108


 4284 007c 8DF80A20 		strb	r2, [sp, #10]
 288:Core/Src/main.c **** 
 4285              		.loc 2 288 3 is_stmt 1 view .LVU1043
 288:Core/Src/main.c **** 
 4286              		.loc 2 288 21 is_stmt 0 view .LVU1044
 4287 0080 0023     		movs	r3, #0
 4288 0082 8DF80B30 		strb	r3, [sp, #11]
 290:Core/Src/main.c ****   {
 4289              		.loc 2 290 3 is_stmt 1 view .LVU1045
 290:Core/Src/main.c ****   {
 4290              		.loc 2 290 7 is_stmt 0 view .LVU1046
 4291 0086 02A9     		add	r1, sp, #8
 4292 0088 1148     		ldr	r0, .L281
 4293 008a FFF7FEFF 		bl	HAL_RTC_SetDate
 4294              	.LVL361:
 290:Core/Src/main.c ****   {
 4295              		.loc 2 290 6 view .LVU1047
 4296 008e C8B9     		cbnz	r0, .L279
 4297              	.L274:
 302:Core/Src/main.c **** /* read time seconds for epoch */
 4298              		.loc 2 302 2 is_stmt 1 view .LVU1048
 4299 0090 0F4C     		ldr	r4, .L281
 4300 0092 0022     		movs	r2, #0
 4301 0094 1149     		ldr	r1, .L281+12
 4302 0096 2046     		mov	r0, r4
 4303 0098 FFF7FEFF 		bl	HAL_RTC_GetTime
 4304              	.LVL362:
 309:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 4305              		.loc 2 309 2 view .LVU1049
 309:Core/Src/main.c **** 	HAL_RTC_GetDate(&hrtc, &dienos, RTC_FORMAT_BIN);
 4306              		.loc 2 309 18 is_stmt 0 view .LVU1050
 4307 009c 0022     		movs	r2, #0
 4308 009e 0192     		str	r2, [sp, #4]
 310:Core/Src/main.c **** 	if(dienos.Year < 20) {rtc_check_screwd_calendar();}
 4309              		.loc 2 310 2 is_stmt 1 view .LVU1051
 4310 00a0 01A9     		add	r1, sp, #4
 4311 00a2 2046     		mov	r0, r4
 4312 00a4 FFF7FEFF 		bl	HAL_RTC_GetDate
 4313              	.LVL363:
 311:Core/Src/main.c **** 	
 4314              		.loc 2 311 2 view .LVU1052
 311:Core/Src/main.c **** 	
 4315              		.loc 2 311 11 is_stmt 0 view .LVU1053
 4316 00a8 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 311:Core/Src/main.c **** 	
 4317              		.loc 2 311 4 view .LVU1054
 4318 00ac 132B     		cmp	r3, #19
 4319 00ae 0BD9     		bls	.L280
 4320              	.L276:
 316:Core/Src/main.c **** 
 4321              		.loc 2 316 2 is_stmt 1 view .LVU1055
 4322 00b0 45F25102 		movw	r2, #20561
 4323 00b4 0121     		movs	r1, #1
 4324 00b6 0648     		ldr	r0, .L281
 4325 00b8 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 4326              	.LVL364:
 321:Core/Src/main.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 109


 4327              		.loc 2 321 1 is_stmt 0 view .LVU1056
 4328 00bc 04B0     		add	sp, sp, #16
 4329              	.LCFI91:
 4330              		.cfi_remember_state
 4331              		.cfi_def_cfa_offset 8
 4332              		@ sp needed
 4333 00be 10BD     		pop	{r4, pc}
 4334              	.L278:
 4335              	.LCFI92:
 4336              		.cfi_restore_state
 283:Core/Src/main.c ****   }
 4337              		.loc 2 283 5 is_stmt 1 view .LVU1057
 4338 00c0 FFF7FEFF 		bl	Error_Handler
 4339              	.LVL365:
 4340              	.L279:
 292:Core/Src/main.c ****   }
 4341              		.loc 2 292 5 view .LVU1058
 4342 00c4 FFF7FEFF 		bl	Error_Handler
 4343              	.LVL366:
 4344              	.L280:
 311:Core/Src/main.c **** 	
 4345              		.loc 2 311 24 discriminator 1 view .LVU1059
 4346 00c8 FFF7FEFF 		bl	rtc_check_screwd_calendar
 4347              	.LVL367:
 4348 00cc F0E7     		b	.L276
 4349              	.L282:
 4350 00ce 00BF     		.align	2
 4351              	.L281:
 4352 00d0 00000000 		.word	.LANCHOR3
 4353 00d4 00280040 		.word	1073752064
 4354 00d8 00100240 		.word	1073876992
 4355 00dc 00000000 		.word	.LANCHOR2
 4356              		.cfi_endproc
 4357              	.LFE127:
 4359              		.section	.text.MX_TIM1_Init,"ax",%progbits
 4360              		.align	1
 4361              		.syntax unified
 4362              		.thumb
 4363              		.thumb_func
 4365              	MX_TIM1_Init:
 4366              	.LFB128:
 329:Core/Src/main.c **** 
 4367              		.loc 2 329 1 view -0
 4368              		.cfi_startproc
 4369              		@ args = 0, pretend = 0, frame = 88
 4370              		@ frame_needed = 0, uses_anonymous_args = 0
 4371 0000 10B5     		push	{r4, lr}
 4372              	.LCFI93:
 4373              		.cfi_def_cfa_offset 8
 4374              		.cfi_offset 4, -8
 4375              		.cfi_offset 14, -4
 4376 0002 96B0     		sub	sp, sp, #88
 4377              	.LCFI94:
 4378              		.cfi_def_cfa_offset 96
 335:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 4379              		.loc 2 335 3 view .LVU1061
 335:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 110


 4380              		.loc 2 335 26 is_stmt 0 view .LVU1062
 4381 0004 0024     		movs	r4, #0
 4382 0006 1294     		str	r4, [sp, #72]
 4383 0008 1394     		str	r4, [sp, #76]
 4384 000a 1494     		str	r4, [sp, #80]
 4385 000c 1594     		str	r4, [sp, #84]
 336:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 4386              		.loc 2 336 3 is_stmt 1 view .LVU1063
 336:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 4387              		.loc 2 336 27 is_stmt 0 view .LVU1064
 4388 000e 1094     		str	r4, [sp, #64]
 4389 0010 1194     		str	r4, [sp, #68]
 337:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 4390              		.loc 2 337 3 is_stmt 1 view .LVU1065
 337:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 4391              		.loc 2 337 22 is_stmt 0 view .LVU1066
 4392 0012 0994     		str	r4, [sp, #36]
 4393 0014 0A94     		str	r4, [sp, #40]
 4394 0016 0B94     		str	r4, [sp, #44]
 4395 0018 0C94     		str	r4, [sp, #48]
 4396 001a 0D94     		str	r4, [sp, #52]
 4397 001c 0E94     		str	r4, [sp, #56]
 4398 001e 0F94     		str	r4, [sp, #60]
 338:Core/Src/main.c **** 
 4399              		.loc 2 338 3 is_stmt 1 view .LVU1067
 338:Core/Src/main.c **** 
 4400              		.loc 2 338 34 is_stmt 0 view .LVU1068
 4401 0020 2022     		movs	r2, #32
 4402 0022 2146     		mov	r1, r4
 4403 0024 01A8     		add	r0, sp, #4
 4404 0026 FFF7FEFF 		bl	memset
 4405              	.LVL368:
 343:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 4406              		.loc 2 343 3 is_stmt 1 view .LVU1069
 343:Core/Src/main.c ****   htim1.Init.Prescaler = 0;
 4407              		.loc 2 343 18 is_stmt 0 view .LVU1070
 4408 002a 2B48     		ldr	r0, .L297
 4409 002c 2B4B     		ldr	r3, .L297+4
 4410 002e 0360     		str	r3, [r0]
 344:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 4411              		.loc 2 344 3 is_stmt 1 view .LVU1071
 344:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 4412              		.loc 2 344 24 is_stmt 0 view .LVU1072
 4413 0030 4460     		str	r4, [r0, #4]
 345:Core/Src/main.c ****   htim1.Init.Period = 65535;
 4414              		.loc 2 345 3 is_stmt 1 view .LVU1073
 345:Core/Src/main.c ****   htim1.Init.Period = 65535;
 4415              		.loc 2 345 26 is_stmt 0 view .LVU1074
 4416 0032 8460     		str	r4, [r0, #8]
 346:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 4417              		.loc 2 346 3 is_stmt 1 view .LVU1075
 346:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 4418              		.loc 2 346 21 is_stmt 0 view .LVU1076
 4419 0034 4FF6FF73 		movw	r3, #65535
 4420 0038 C360     		str	r3, [r0, #12]
 347:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 4421              		.loc 2 347 3 is_stmt 1 view .LVU1077
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 111


 347:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 4422              		.loc 2 347 28 is_stmt 0 view .LVU1078
 4423 003a 0461     		str	r4, [r0, #16]
 348:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 4424              		.loc 2 348 3 is_stmt 1 view .LVU1079
 348:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 4425              		.loc 2 348 32 is_stmt 0 view .LVU1080
 4426 003c 4461     		str	r4, [r0, #20]
 349:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 4427              		.loc 2 349 3 is_stmt 1 view .LVU1081
 349:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 4428              		.loc 2 349 32 is_stmt 0 view .LVU1082
 4429 003e 8023     		movs	r3, #128
 4430 0040 8361     		str	r3, [r0, #24]
 350:Core/Src/main.c ****   {
 4431              		.loc 2 350 3 is_stmt 1 view .LVU1083
 350:Core/Src/main.c ****   {
 4432              		.loc 2 350 7 is_stmt 0 view .LVU1084
 4433 0042 FFF7FEFF 		bl	HAL_TIM_Base_Init
 4434              	.LVL369:
 350:Core/Src/main.c ****   {
 4435              		.loc 2 350 6 view .LVU1085
 4436 0046 0028     		cmp	r0, #0
 4437 0048 39D1     		bne	.L291
 354:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 4438              		.loc 2 354 3 is_stmt 1 view .LVU1086
 354:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 4439              		.loc 2 354 34 is_stmt 0 view .LVU1087
 4440 004a 4FF48053 		mov	r3, #4096
 4441 004e 1293     		str	r3, [sp, #72]
 355:Core/Src/main.c ****   {
 4442              		.loc 2 355 3 is_stmt 1 view .LVU1088
 355:Core/Src/main.c ****   {
 4443              		.loc 2 355 7 is_stmt 0 view .LVU1089
 4444 0050 12A9     		add	r1, sp, #72
 4445 0052 2148     		ldr	r0, .L297
 4446 0054 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 4447              	.LVL370:
 355:Core/Src/main.c ****   {
 4448              		.loc 2 355 6 view .LVU1090
 4449 0058 0028     		cmp	r0, #0
 4450 005a 32D1     		bne	.L292
 359:Core/Src/main.c ****   {
 4451              		.loc 2 359 3 is_stmt 1 view .LVU1091
 359:Core/Src/main.c ****   {
 4452              		.loc 2 359 7 is_stmt 0 view .LVU1092
 4453 005c 1E48     		ldr	r0, .L297
 4454 005e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 4455              	.LVL371:
 359:Core/Src/main.c ****   {
 4456              		.loc 2 359 6 view .LVU1093
 4457 0062 0028     		cmp	r0, #0
 4458 0064 2FD1     		bne	.L293
 363:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 4459              		.loc 2 363 3 is_stmt 1 view .LVU1094
 363:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 4460              		.loc 2 363 37 is_stmt 0 view .LVU1095
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 112


 4461 0066 0023     		movs	r3, #0
 4462 0068 1093     		str	r3, [sp, #64]
 364:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 4463              		.loc 2 364 3 is_stmt 1 view .LVU1096
 364:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 4464              		.loc 2 364 33 is_stmt 0 view .LVU1097
 4465 006a 1193     		str	r3, [sp, #68]
 365:Core/Src/main.c ****   {
 4466              		.loc 2 365 3 is_stmt 1 view .LVU1098
 365:Core/Src/main.c ****   {
 4467              		.loc 2 365 7 is_stmt 0 view .LVU1099
 4468 006c 10A9     		add	r1, sp, #64
 4469 006e 1A48     		ldr	r0, .L297
 4470 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 4471              	.LVL372:
 365:Core/Src/main.c ****   {
 4472              		.loc 2 365 6 view .LVU1100
 4473 0074 48BB     		cbnz	r0, .L294
 369:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 4474              		.loc 2 369 3 is_stmt 1 view .LVU1101
 369:Core/Src/main.c ****   sConfigOC.Pulse = 15000;
 4475              		.loc 2 369 20 is_stmt 0 view .LVU1102
 4476 0076 6023     		movs	r3, #96
 4477 0078 0993     		str	r3, [sp, #36]
 370:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 4478              		.loc 2 370 3 is_stmt 1 view .LVU1103
 370:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 4479              		.loc 2 370 19 is_stmt 0 view .LVU1104
 4480 007a 43F69823 		movw	r3, #15000
 4481 007e 0A93     		str	r3, [sp, #40]
 371:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 4482              		.loc 2 371 3 is_stmt 1 view .LVU1105
 371:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 4483              		.loc 2 371 24 is_stmt 0 view .LVU1106
 4484 0080 0022     		movs	r2, #0
 4485 0082 0B92     		str	r2, [sp, #44]
 372:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 4486              		.loc 2 372 3 is_stmt 1 view .LVU1107
 372:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 4487              		.loc 2 372 25 is_stmt 0 view .LVU1108
 4488 0084 0C92     		str	r2, [sp, #48]
 373:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 4489              		.loc 2 373 3 is_stmt 1 view .LVU1109
 373:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 4490              		.loc 2 373 24 is_stmt 0 view .LVU1110
 4491 0086 0D92     		str	r2, [sp, #52]
 374:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 4492              		.loc 2 374 3 is_stmt 1 view .LVU1111
 374:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 4493              		.loc 2 374 25 is_stmt 0 view .LVU1112
 4494 0088 0E92     		str	r2, [sp, #56]
 375:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 4495              		.loc 2 375 3 is_stmt 1 view .LVU1113
 375:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 4496              		.loc 2 375 26 is_stmt 0 view .LVU1114
 4497 008a 0F92     		str	r2, [sp, #60]
 376:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 113


 4498              		.loc 2 376 3 is_stmt 1 view .LVU1115
 376:Core/Src/main.c ****   {
 4499              		.loc 2 376 7 is_stmt 0 view .LVU1116
 4500 008c 09A9     		add	r1, sp, #36
 4501 008e 1248     		ldr	r0, .L297
 4502 0090 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 4503              	.LVL373:
 376:Core/Src/main.c ****   {
 4504              		.loc 2 376 6 view .LVU1117
 4505 0094 D8B9     		cbnz	r0, .L295
 380:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 4506              		.loc 2 380 3 is_stmt 1 view .LVU1118
 380:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 4507              		.loc 2 380 40 is_stmt 0 view .LVU1119
 4508 0096 0023     		movs	r3, #0
 4509 0098 0193     		str	r3, [sp, #4]
 381:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 4510              		.loc 2 381 3 is_stmt 1 view .LVU1120
 381:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 4511              		.loc 2 381 41 is_stmt 0 view .LVU1121
 4512 009a 0293     		str	r3, [sp, #8]
 382:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 4513              		.loc 2 382 3 is_stmt 1 view .LVU1122
 382:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 4514              		.loc 2 382 34 is_stmt 0 view .LVU1123
 4515 009c 0393     		str	r3, [sp, #12]
 383:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 4516              		.loc 2 383 3 is_stmt 1 view .LVU1124
 383:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 4517              		.loc 2 383 33 is_stmt 0 view .LVU1125
 4518 009e 0493     		str	r3, [sp, #16]
 384:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 4519              		.loc 2 384 3 is_stmt 1 view .LVU1126
 384:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 4520              		.loc 2 384 35 is_stmt 0 view .LVU1127
 4521 00a0 0593     		str	r3, [sp, #20]
 385:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 4522              		.loc 2 385 3 is_stmt 1 view .LVU1128
 385:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 4523              		.loc 2 385 38 is_stmt 0 view .LVU1129
 4524 00a2 4FF40052 		mov	r2, #8192
 4525 00a6 0692     		str	r2, [sp, #24]
 386:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 4526              		.loc 2 386 3 is_stmt 1 view .LVU1130
 386:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 4527              		.loc 2 386 40 is_stmt 0 view .LVU1131
 4528 00a8 0893     		str	r3, [sp, #32]
 387:Core/Src/main.c ****   {
 4529              		.loc 2 387 3 is_stmt 1 view .LVU1132
 387:Core/Src/main.c ****   {
 4530              		.loc 2 387 7 is_stmt 0 view .LVU1133
 4531 00aa 01A9     		add	r1, sp, #4
 4532 00ac 0A48     		ldr	r0, .L297
 4533 00ae FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 4534              	.LVL374:
 387:Core/Src/main.c ****   {
 4535              		.loc 2 387 6 view .LVU1134
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 114


 4536 00b2 70B9     		cbnz	r0, .L296
 394:Core/Src/main.c **** 
 4537              		.loc 2 394 3 is_stmt 1 view .LVU1135
 4538 00b4 0848     		ldr	r0, .L297
 4539 00b6 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 4540              	.LVL375:
 396:Core/Src/main.c **** 
 4541              		.loc 2 396 1 is_stmt 0 view .LVU1136
 4542 00ba 16B0     		add	sp, sp, #88
 4543              	.LCFI95:
 4544              		.cfi_remember_state
 4545              		.cfi_def_cfa_offset 8
 4546              		@ sp needed
 4547 00bc 10BD     		pop	{r4, pc}
 4548              	.L291:
 4549              	.LCFI96:
 4550              		.cfi_restore_state
 352:Core/Src/main.c ****   }
 4551              		.loc 2 352 5 is_stmt 1 view .LVU1137
 4552 00be FFF7FEFF 		bl	Error_Handler
 4553              	.LVL376:
 4554              	.L292:
 357:Core/Src/main.c ****   }
 4555              		.loc 2 357 5 view .LVU1138
 4556 00c2 FFF7FEFF 		bl	Error_Handler
 4557              	.LVL377:
 4558              	.L293:
 361:Core/Src/main.c ****   }
 4559              		.loc 2 361 5 view .LVU1139
 4560 00c6 FFF7FEFF 		bl	Error_Handler
 4561              	.LVL378:
 4562              	.L294:
 367:Core/Src/main.c ****   }
 4563              		.loc 2 367 5 view .LVU1140
 4564 00ca FFF7FEFF 		bl	Error_Handler
 4565              	.LVL379:
 4566              	.L295:
 378:Core/Src/main.c ****   }
 4567              		.loc 2 378 5 view .LVU1141
 4568 00ce FFF7FEFF 		bl	Error_Handler
 4569              	.LVL380:
 4570              	.L296:
 389:Core/Src/main.c ****   }
 4571              		.loc 2 389 5 view .LVU1142
 4572 00d2 FFF7FEFF 		bl	Error_Handler
 4573              	.LVL381:
 4574              	.L298:
 4575 00d6 00BF     		.align	2
 4576              	.L297:
 4577 00d8 00000000 		.word	.LANCHOR10
 4578 00dc 002C0140 		.word	1073818624
 4579              		.cfi_endproc
 4580              	.LFE128:
 4582              		.section	.text.MX_IWDG_Init,"ax",%progbits
 4583              		.align	1
 4584              		.syntax unified
 4585              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 115


 4586              		.thumb_func
 4588              	MX_IWDG_Init:
 4589              	.LFB126:
 211:Core/Src/main.c **** 
 4590              		.loc 2 211 1 view -0
 4591              		.cfi_startproc
 4592              		@ args = 0, pretend = 0, frame = 0
 4593              		@ frame_needed = 0, uses_anonymous_args = 0
 4594 0000 08B5     		push	{r3, lr}
 4595              	.LCFI97:
 4596              		.cfi_def_cfa_offset 8
 4597              		.cfi_offset 3, -8
 4598              		.cfi_offset 14, -4
 220:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 4599              		.loc 2 220 3 view .LVU1144
 220:Core/Src/main.c ****   hiwdg.Init.Prescaler = IWDG_PRESCALER_4;
 4600              		.loc 2 220 18 is_stmt 0 view .LVU1145
 4601 0002 0748     		ldr	r0, .L303
 4602 0004 074B     		ldr	r3, .L303+4
 4603 0006 0360     		str	r3, [r0]
 221:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 4604              		.loc 2 221 3 is_stmt 1 view .LVU1146
 221:Core/Src/main.c ****   hiwdg.Init.Reload = 4095;
 4605              		.loc 2 221 24 is_stmt 0 view .LVU1147
 4606 0008 0023     		movs	r3, #0
 4607 000a 4360     		str	r3, [r0, #4]
 222:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 4608              		.loc 2 222 3 is_stmt 1 view .LVU1148
 222:Core/Src/main.c ****   if (HAL_IWDG_Init(&hiwdg) != HAL_OK)
 4609              		.loc 2 222 21 is_stmt 0 view .LVU1149
 4610 000c 40F6FF73 		movw	r3, #4095
 4611 0010 8360     		str	r3, [r0, #8]
 223:Core/Src/main.c ****   {
 4612              		.loc 2 223 3 is_stmt 1 view .LVU1150
 223:Core/Src/main.c ****   {
 4613              		.loc 2 223 7 is_stmt 0 view .LVU1151
 4614 0012 FFF7FEFF 		bl	HAL_IWDG_Init
 4615              	.LVL382:
 223:Core/Src/main.c ****   {
 4616              		.loc 2 223 6 view .LVU1152
 4617 0016 00B9     		cbnz	r0, .L302
 231:Core/Src/main.c **** 
 4618              		.loc 2 231 1 view .LVU1153
 4619 0018 08BD     		pop	{r3, pc}
 4620              	.L302:
 225:Core/Src/main.c ****   }
 4621              		.loc 2 225 5 is_stmt 1 view .LVU1154
 4622 001a FFF7FEFF 		bl	Error_Handler
 4623              	.LVL383:
 4624              	.L304:
 4625 001e 00BF     		.align	2
 4626              	.L303:
 4627 0020 00000000 		.word	.LANCHOR15
 4628 0024 00300040 		.word	1073754112
 4629              		.cfi_endproc
 4630              	.LFE126:
 4632              		.section	.text.MX_I2C2_Init,"ax",%progbits
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 116


 4633              		.align	1
 4634              		.syntax unified
 4635              		.thumb
 4636              		.thumb_func
 4638              	MX_I2C2_Init:
 4639              	.LFB125:
 177:Core/Src/main.c **** 
 4640              		.loc 2 177 1 view -0
 4641              		.cfi_startproc
 4642              		@ args = 0, pretend = 0, frame = 0
 4643              		@ frame_needed = 0, uses_anonymous_args = 0
 4644 0000 08B5     		push	{r3, lr}
 4645              	.LCFI98:
 4646              		.cfi_def_cfa_offset 8
 4647              		.cfi_offset 3, -8
 4648              		.cfi_offset 14, -4
 186:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 4649              		.loc 2 186 3 view .LVU1156
 186:Core/Src/main.c ****   hi2c2.Init.ClockSpeed = 100000;
 4650              		.loc 2 186 18 is_stmt 0 view .LVU1157
 4651 0002 0A48     		ldr	r0, .L309
 4652 0004 0A4B     		ldr	r3, .L309+4
 4653 0006 0360     		str	r3, [r0]
 187:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 4654              		.loc 2 187 3 is_stmt 1 view .LVU1158
 187:Core/Src/main.c ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 4655              		.loc 2 187 25 is_stmt 0 view .LVU1159
 4656 0008 0A4B     		ldr	r3, .L309+8
 4657 000a 4360     		str	r3, [r0, #4]
 188:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 4658              		.loc 2 188 3 is_stmt 1 view .LVU1160
 188:Core/Src/main.c ****   hi2c2.Init.OwnAddress1 = 0;
 4659              		.loc 2 188 24 is_stmt 0 view .LVU1161
 4660 000c 0023     		movs	r3, #0
 4661 000e 8360     		str	r3, [r0, #8]
 189:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 4662              		.loc 2 189 3 is_stmt 1 view .LVU1162
 189:Core/Src/main.c ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 4663              		.loc 2 189 26 is_stmt 0 view .LVU1163
 4664 0010 C360     		str	r3, [r0, #12]
 190:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 4665              		.loc 2 190 3 is_stmt 1 view .LVU1164
 190:Core/Src/main.c ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 4666              		.loc 2 190 29 is_stmt 0 view .LVU1165
 4667 0012 4FF48042 		mov	r2, #16384
 4668 0016 0261     		str	r2, [r0, #16]
 191:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 4669              		.loc 2 191 3 is_stmt 1 view .LVU1166
 191:Core/Src/main.c ****   hi2c2.Init.OwnAddress2 = 0;
 4670              		.loc 2 191 30 is_stmt 0 view .LVU1167
 4671 0018 4361     		str	r3, [r0, #20]
 192:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 4672              		.loc 2 192 3 is_stmt 1 view .LVU1168
 192:Core/Src/main.c ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 4673              		.loc 2 192 26 is_stmt 0 view .LVU1169
 4674 001a 8361     		str	r3, [r0, #24]
 193:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 117


 4675              		.loc 2 193 3 is_stmt 1 view .LVU1170
 193:Core/Src/main.c ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 4676              		.loc 2 193 30 is_stmt 0 view .LVU1171
 4677 001c C361     		str	r3, [r0, #28]
 194:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 4678              		.loc 2 194 3 is_stmt 1 view .LVU1172
 194:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 4679              		.loc 2 194 28 is_stmt 0 view .LVU1173
 4680 001e 0362     		str	r3, [r0, #32]
 195:Core/Src/main.c ****   {
 4681              		.loc 2 195 3 is_stmt 1 view .LVU1174
 195:Core/Src/main.c ****   {
 4682              		.loc 2 195 7 is_stmt 0 view .LVU1175
 4683 0020 FFF7FEFF 		bl	HAL_I2C_Init
 4684              	.LVL384:
 195:Core/Src/main.c ****   {
 4685              		.loc 2 195 6 view .LVU1176
 4686 0024 00B9     		cbnz	r0, .L308
 203:Core/Src/main.c **** 
 4687              		.loc 2 203 1 view .LVU1177
 4688 0026 08BD     		pop	{r3, pc}
 4689              	.L308:
 197:Core/Src/main.c ****   }
 4690              		.loc 2 197 5 is_stmt 1 view .LVU1178
 4691 0028 FFF7FEFF 		bl	Error_Handler
 4692              	.LVL385:
 4693              	.L310:
 4694              		.align	2
 4695              	.L309:
 4696 002c 00000000 		.word	.LANCHOR0
 4697 0030 00580040 		.word	1073764352
 4698 0034 A0860100 		.word	100000
 4699              		.cfi_endproc
 4700              	.LFE125:
 4702              		.section	.text.SystemClock_Config,"ax",%progbits
 4703              		.align	1
 4704              		.global	SystemClock_Config
 4705              		.syntax unified
 4706              		.thumb
 4707              		.thumb_func
 4709              	SystemClock_Config:
 4710              	.LFB124:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 4711              		.loc 2 126 1 view -0
 4712              		.cfi_startproc
 4713              		@ args = 0, pretend = 0, frame = 88
 4714              		@ frame_needed = 0, uses_anonymous_args = 0
 4715 0000 00B5     		push	{lr}
 4716              	.LCFI99:
 4717              		.cfi_def_cfa_offset 4
 4718              		.cfi_offset 14, -4
 4719 0002 97B0     		sub	sp, sp, #92
 4720              	.LCFI100:
 4721              		.cfi_def_cfa_offset 96
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 4722              		.loc 2 127 3 view .LVU1180
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 118


 4723              		.loc 2 127 22 is_stmt 0 view .LVU1181
 4724 0004 2822     		movs	r2, #40
 4725 0006 0021     		movs	r1, #0
 4726 0008 0CA8     		add	r0, sp, #48
 4727 000a FFF7FEFF 		bl	memset
 4728              	.LVL386:
 128:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 4729              		.loc 2 128 3 is_stmt 1 view .LVU1182
 128:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 4730              		.loc 2 128 22 is_stmt 0 view .LVU1183
 4731 000e 0023     		movs	r3, #0
 4732 0010 0793     		str	r3, [sp, #28]
 4733 0012 0893     		str	r3, [sp, #32]
 4734 0014 0993     		str	r3, [sp, #36]
 4735 0016 0A93     		str	r3, [sp, #40]
 4736 0018 0B93     		str	r3, [sp, #44]
 129:Core/Src/main.c **** 
 4737              		.loc 2 129 3 is_stmt 1 view .LVU1184
 129:Core/Src/main.c **** 
 4738              		.loc 2 129 28 is_stmt 0 view .LVU1185
 4739 001a 0193     		str	r3, [sp, #4]
 4740 001c 0293     		str	r3, [sp, #8]
 4741 001e 0393     		str	r3, [sp, #12]
 4742 0020 0493     		str	r3, [sp, #16]
 4743 0022 0593     		str	r3, [sp, #20]
 4744 0024 0693     		str	r3, [sp, #24]
 134:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 4745              		.loc 2 134 3 is_stmt 1 view .LVU1186
 134:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_LSE;
 4746              		.loc 2 134 36 is_stmt 0 view .LVU1187
 4747 0026 0D23     		movs	r3, #13
 4748 0028 0C93     		str	r3, [sp, #48]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 4749              		.loc 2 136 3 is_stmt 1 view .LVU1188
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 4750              		.loc 2 136 30 is_stmt 0 view .LVU1189
 4751 002a 4FF48032 		mov	r2, #65536
 4752 002e 0D92     		str	r2, [sp, #52]
 137:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 4753              		.loc 2 137 3 is_stmt 1 view .LVU1190
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 4754              		.loc 2 138 3 view .LVU1191
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 4755              		.loc 2 138 30 is_stmt 0 view .LVU1192
 4756 0030 0123     		movs	r3, #1
 4757 0032 0F93     		str	r3, [sp, #60]
 139:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 4758              		.loc 2 139 3 is_stmt 1 view .LVU1193
 139:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 4759              		.loc 2 139 30 is_stmt 0 view .LVU1194
 4760 0034 1093     		str	r3, [sp, #64]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 4761              		.loc 2 140 3 is_stmt 1 view .LVU1195
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 4762              		.loc 2 140 30 is_stmt 0 view .LVU1196
 4763 0036 1293     		str	r3, [sp, #72]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 119


 4764              		.loc 2 141 3 is_stmt 1 view .LVU1197
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 4765              		.loc 2 141 34 is_stmt 0 view .LVU1198
 4766 0038 0223     		movs	r3, #2
 4767 003a 1393     		str	r3, [sp, #76]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 4768              		.loc 2 142 3 is_stmt 1 view .LVU1199
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 4769              		.loc 2 142 35 is_stmt 0 view .LVU1200
 4770 003c 1492     		str	r2, [sp, #80]
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 4771              		.loc 2 143 3 is_stmt 1 view .LVU1201
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 4772              		.loc 2 143 32 is_stmt 0 view .LVU1202
 4773 003e 4FF48013 		mov	r3, #1048576
 4774 0042 1593     		str	r3, [sp, #84]
 144:Core/Src/main.c ****   {
 4775              		.loc 2 144 3 is_stmt 1 view .LVU1203
 144:Core/Src/main.c ****   {
 4776              		.loc 2 144 7 is_stmt 0 view .LVU1204
 4777 0044 0CA8     		add	r0, sp, #48
 4778 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 4779              	.LVL387:
 144:Core/Src/main.c ****   {
 4780              		.loc 2 144 6 view .LVU1205
 4781 004a E8B9     		cbnz	r0, .L316
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 4782              		.loc 2 151 3 is_stmt 1 view .LVU1206
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 4783              		.loc 2 151 31 is_stmt 0 view .LVU1207
 4784 004c 0F23     		movs	r3, #15
 4785 004e 0793     		str	r3, [sp, #28]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 4786              		.loc 2 153 3 is_stmt 1 view .LVU1208
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 4787              		.loc 2 153 34 is_stmt 0 view .LVU1209
 4788 0050 0223     		movs	r3, #2
 4789 0052 0893     		str	r3, [sp, #32]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 4790              		.loc 2 154 3 is_stmt 1 view .LVU1210
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 4791              		.loc 2 154 35 is_stmt 0 view .LVU1211
 4792 0054 0023     		movs	r3, #0
 4793 0056 0993     		str	r3, [sp, #36]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 4794              		.loc 2 155 3 is_stmt 1 view .LVU1212
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 4795              		.loc 2 155 36 is_stmt 0 view .LVU1213
 4796 0058 4FF48062 		mov	r2, #1024
 4797 005c 0A92     		str	r2, [sp, #40]
 156:Core/Src/main.c **** 
 4798              		.loc 2 156 3 is_stmt 1 view .LVU1214
 156:Core/Src/main.c **** 
 4799              		.loc 2 156 36 is_stmt 0 view .LVU1215
 4800 005e 0B93     		str	r3, [sp, #44]
 158:Core/Src/main.c ****   {
 4801              		.loc 2 158 3 is_stmt 1 view .LVU1216
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 120


 158:Core/Src/main.c ****   {
 4802              		.loc 2 158 7 is_stmt 0 view .LVU1217
 4803 0060 0121     		movs	r1, #1
 4804 0062 07A8     		add	r0, sp, #28
 4805 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 4806              	.LVL388:
 158:Core/Src/main.c ****   {
 4807              		.loc 2 158 6 view .LVU1218
 4808 0068 80B9     		cbnz	r0, .L317
 162:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 4809              		.loc 2 162 3 is_stmt 1 view .LVU1219
 162:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 4810              		.loc 2 162 38 is_stmt 0 view .LVU1220
 4811 006a 1123     		movs	r3, #17
 4812 006c 0193     		str	r3, [sp, #4]
 163:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 4813              		.loc 2 163 3 is_stmt 1 view .LVU1221
 163:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL;
 4814              		.loc 2 163 35 is_stmt 0 view .LVU1222
 4815 006e 4FF48073 		mov	r3, #256
 4816 0072 0293     		str	r3, [sp, #8]
 164:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 4817              		.loc 2 164 3 is_stmt 1 view .LVU1223
 164:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 4818              		.loc 2 164 35 is_stmt 0 view .LVU1224
 4819 0074 4FF48003 		mov	r3, #4194304
 4820 0078 0693     		str	r3, [sp, #24]
 165:Core/Src/main.c ****   {
 4821              		.loc 2 165 3 is_stmt 1 view .LVU1225
 165:Core/Src/main.c ****   {
 4822              		.loc 2 165 7 is_stmt 0 view .LVU1226
 4823 007a 01A8     		add	r0, sp, #4
 4824 007c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 4825              	.LVL389:
 165:Core/Src/main.c ****   {
 4826              		.loc 2 165 6 view .LVU1227
 4827 0080 30B9     		cbnz	r0, .L318
 169:Core/Src/main.c **** 
 4828              		.loc 2 169 1 view .LVU1228
 4829 0082 17B0     		add	sp, sp, #92
 4830              	.LCFI101:
 4831              		.cfi_remember_state
 4832              		.cfi_def_cfa_offset 4
 4833              		@ sp needed
 4834 0084 5DF804FB 		ldr	pc, [sp], #4
 4835              	.L316:
 4836              	.LCFI102:
 4837              		.cfi_restore_state
 146:Core/Src/main.c ****   }
 4838              		.loc 2 146 5 is_stmt 1 view .LVU1229
 4839 0088 FFF7FEFF 		bl	Error_Handler
 4840              	.LVL390:
 4841              	.L317:
 160:Core/Src/main.c ****   }
 4842              		.loc 2 160 5 view .LVU1230
 4843 008c FFF7FEFF 		bl	Error_Handler
 4844              	.LVL391:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 121


 4845              	.L318:
 167:Core/Src/main.c ****   }
 4846              		.loc 2 167 5 view .LVU1231
 4847 0090 FFF7FEFF 		bl	Error_Handler
 4848              	.LVL392:
 4849              		.cfi_endproc
 4850              	.LFE124:
 4852              		.section	.text.main,"ax",%progbits
 4853              		.align	1
 4854              		.global	main
 4855              		.syntax unified
 4856              		.thumb
 4857              		.thumb_func
 4859              	main:
 4860              	.LFB123:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 4861              		.loc 2 77 1 view -0
 4862              		.cfi_startproc
 4863              		@ Volatile: function does not return.
 4864              		@ args = 0, pretend = 0, frame = 0
 4865              		@ frame_needed = 0, uses_anonymous_args = 0
 4866 0000 08B5     		push	{r3, lr}
 4867              	.LCFI103:
 4868              		.cfi_def_cfa_offset 8
 4869              		.cfi_offset 3, -8
 4870              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
 4871              		.loc 2 85 3 view .LVU1233
 4872 0002 FFF7FEFF 		bl	HAL_Init
 4873              	.LVL393:
  92:Core/Src/main.c **** 
 4874              		.loc 2 92 3 view .LVU1234
 4875 0006 FFF7FEFF 		bl	SystemClock_Config
 4876              	.LVL394:
  99:Core/Src/main.c ****   MX_RTC_Init();
 4877              		.loc 2 99 3 view .LVU1235
 4878 000a FFF7FEFF 		bl	MX_GPIO_Init
 4879              	.LVL395:
 100:Core/Src/main.c ****   MX_TIM1_Init();
 4880              		.loc 2 100 3 view .LVU1236
 4881 000e FFF7FEFF 		bl	MX_RTC_Init
 4882              	.LVL396:
 101:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 4883              		.loc 2 101 3 view .LVU1237
 4884 0012 FFF7FEFF 		bl	MX_TIM1_Init
 4885              	.LVL397:
 102:Core/Src/main.c ****   MX_IWDG_Init();
 4886              		.loc 2 102 3 view .LVU1238
 4887 0016 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 4888              	.LVL398:
 103:Core/Src/main.c ****   MX_I2C2_Init();
 4889              		.loc 2 103 3 view .LVU1239
 4890 001a FFF7FEFF 		bl	MX_IWDG_Init
 4891              	.LVL399:
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 4892              		.loc 2 104 3 view .LVU1240
 4893 001e FFF7FEFF 		bl	MX_I2C2_Init
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 122


 4894              	.LVL400:
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 4895              		.loc 2 106 1 view .LVU1241
 4896 0022 FFF7FEFF 		bl	user_init
 4897              	.LVL401:
 111:Core/Src/main.c ****   {
 4898              		.loc 2 111 3 view .LVU1242
 116:Core/Src/main.c ****   }
 4899              		.loc 2 116 2 view .LVU1243
 4900 0026 FFF7FEFF 		bl	user_loop
 4901              	.LVL402:
 4902              		.cfi_endproc
 4903              	.LFE123:
 4905              		.global	htim1
 4906              		.global	hrtc
 4907              		.global	hiwdg
 4908              		.global	hi2c2
 4909              		.global	seconds
 4910              		.global	cc
 4911              		.global	testas
 4912              		.global	bootsecons
 4913              		.global	invertuotas
 4914              		.global	chartable
 4915              		.global	oled_line
 4916              		.global	font
 4917              		.global	LastHour
 4918              		.global	oldTime
 4919              		.global	currTime
 4920              		.section	.rodata
 4921              		.align	2
 4922              		.set	.LANCHOR12,. + 0
 4923              	.LC1:
 4924 0000 0000E7E7 		.ascii	"\000\000\347\347\347\347\000\000"
 4924      E7E70000 
 4925              		.section	.bss.bootsecons,"aw",%nobits
 4926              		.align	2
 4927              		.set	.LANCHOR11,. + 0
 4930              	bootsecons:
 4931 0000 00000000 		.space	4
 4932              		.section	.bss.cc,"aw",%nobits
 4933              		.align	2
 4934              		.set	.LANCHOR8,. + 0
 4937              	cc:
 4938 0000 00000000 		.space	20
 4938      00000000 
 4938      00000000 
 4938      00000000 
 4938      00000000 
 4939              		.section	.bss.currTime,"aw",%nobits
 4940              		.align	2
 4941              		.set	.LANCHOR2,. + 0
 4944              	currTime:
 4945 0000 000000   		.space	3
 4946              		.section	.bss.hi2c2,"aw",%nobits
 4947              		.align	2
 4948              		.set	.LANCHOR0,. + 0
 4951              	hi2c2:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 123


 4952 0000 00000000 		.space	84
 4952      00000000 
 4952      00000000 
 4952      00000000 
 4952      00000000 
 4953              		.section	.bss.hiwdg,"aw",%nobits
 4954              		.align	2
 4955              		.set	.LANCHOR15,. + 0
 4958              	hiwdg:
 4959 0000 00000000 		.space	12
 4959      00000000 
 4959      00000000 
 4960              		.section	.bss.hrtc,"aw",%nobits
 4961              		.align	2
 4962              		.set	.LANCHOR3,. + 0
 4965              	hrtc:
 4966 0000 00000000 		.space	20
 4966      00000000 
 4966      00000000 
 4966      00000000 
 4966      00000000 
 4967              		.section	.bss.htim1,"aw",%nobits
 4968              		.align	2
 4969              		.set	.LANCHOR10,. + 0
 4972              	htim1:
 4973 0000 00000000 		.space	72
 4973      00000000 
 4973      00000000 
 4973      00000000 
 4973      00000000 
 4974              		.section	.bss.invertuotas,"aw",%nobits
 4975              		.set	.LANCHOR13,. + 0
 4978              	invertuotas:
 4979 0000 00       		.space	1
 4980              		.section	.bss.oled_line,"aw",%nobits
 4981              		.set	.LANCHOR6,. + 0
 4984              	oled_line:
 4985 0000 00       		.space	1
 4986              		.section	.bss.seconds,"aw",%nobits
 4987              		.set	.LANCHOR14,. + 0
 4990              	seconds:
 4991 0000 00       		.space	1
 4992              		.section	.bss.testas,"aw",%nobits
 4993              		.align	2
 4994              		.set	.LANCHOR9,. + 0
 4997              	testas:
 4998 0000 00000000 		.space	64
 4998      00000000 
 4998      00000000 
 4998      00000000 
 4998      00000000 
 4999              		.section	.data.LastHour,"aw"
 5002              	LastHour:
 5003 0000 FF       		.byte	-1
 5004              		.section	.data.font,"aw"
 5005              		.align	2
 5006              		.set	.LANCHOR5,. + 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 124


 5009              	font:
 5010 0000 003E7F41 		.ascii	"\000>\177AMO.\000\000 tTT|x\000\000~~HHx0\000\0008|"
 5010      4D4F2E00 
 5010      00207454 
 5010      547C7800 
 5010      007E7E48 
 5011 001b 44444400 		.ascii	"DDD\000\000\0000xHH~~\000\0008|TT\\\030\000\000\000"
 5011      00003078 
 5011      48487E7E 
 5011      0000387C 
 5011      54545C18 
 5012 0032 087C7E0A 		.ascii	"\010|~\012\012\000\000\230\274\244\244\374|\000\000"
 5012      0A000098 
 5012      BCA4A4FC 
 5012      7C0000
 5013 0041 7E7E0808 		.ascii	"~~\010\010xp\000\000\000Hzz@\000\000\000\000\200\200"
 5013      78700000 
 5013      00487A7A 
 5013      40000000 
 5013      008080
 5014 0054 80FA7A00 		.ascii	"\200\372z\000\000~~\0208h@\000\000\000B~~@\000\000\000"
 5014      007E7E10 
 5014      38684000 
 5014      0000427E 
 5014      7E400000 
 5015 0069 7C7C1838 		.ascii	"||\0308\034|x\000||\004\004|x\000\0008|DD|8\000\000"
 5015      1C7C7800 
 5015      7C7C0404 
 5015      7C780000 
 5015      387C4444 
 5016 0081 FCFC2424 		.ascii	"\374\374$$<\030\000\000\030<$$\374\374\000\000||\004"
 5016      3C180000 
 5016      183C2424 
 5016      FCFC0000 
 5016      7C7C04
 5017 0094 040C0800 		.ascii	"\004\014\010\000\000H\\TTt$\000\000\004\004>~DD\000"
 5017      00485C54 
 5017      54742400 
 5017      0004043E 
 5017      7E444400 
 5018 00a8 003C7C40 		.ascii	"\000<|@@||\000\000\034<``<\034\000\000\034|p8p|\034"
 5018      407C7C00 
 5018      001C3C60 
 5018      603C1C00 
 5018      001C7C70 
 5019 00c0 00446C38 		.ascii	"\000Dl88lD\000\000\234\274\240\340|<\000\000Ddt\\LD"
 5019      386C4400 
 5019      009CBCA0 
 5019      E07C3C00 
 5019      00446474 
 5020 00d7 0000007F 		.ascii	"\000\000\000\177\177AA\000\000@h|^II\"\000\000\000A"
 5020      7F414100 
 5020      0040687C 
 5020      5E494922 
 5020      00000041 
 5021 00eb 417F7F00 		.ascii	"A\177\177\000\000\000\010\014\376\376\014\010\000\000"
 5021      0000080C 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 125


 5021      FEFE0C08 
 5021      0000
 5022 00f9 183C7E18 		.ascii	"\030<~\030\030\030\030\000\000\000\000\000\000\000\000"
 5022      18181800 
 5022      00000000 
 5022      000000
 5023 0108 0000004F 		.ascii	"\000\000\000OO\000\000\000\000\007\007\000\000\007\007"
 5023      4F000000 
 5023      00070700 
 5023      000707
 5024 0117 00147F7F 		.ascii	"\000\024\177\177\024\024\177\177\024\000$.kk:\022\000"
 5024      14147F7F 
 5024      1400242E 
 5024      6B6B3A12 
 5024      00
 5025 0128 00633318 		.ascii	"\000c3\030\014fc\000\0002\177MMwrP\000\000\000\004\006"
 5025      0C666300 
 5025      00327F4D 
 5025      4D777250 
 5025      00000004 
 5026 013d 03010000 		.ascii	"\003\001\000\000\000\034>cA\000\000\000\000Ac>\034\000"
 5026      001C3E63 
 5026      41000000 
 5026      0041633E 
 5026      1C00
 5027 014f 00082A3E 		.ascii	"\000\010*>\034\034>*\010\000\010\010>>\010\010\000\000"
 5027      1C1C3E2A 
 5027      08000808 
 5027      3E3E0808 
 5027      0000
 5028 0161 0080E060 		.ascii	"\000\200\340`\000\000\000\000\010\010\010\010\010\010"
 5028      00000000 
 5028      08080808 
 5028      0808
 5029 016f 00000000 		.ascii	"\000\000\000\000``\000\000\000\000@`0\030\014\006\002"
 5029      60600000 
 5029      00004060 
 5029      30180C06 
 5029      02
 5030 0180 003E7F49 		.ascii	"\000>\177IE\177>\000\000@D\177\177@@\000\000bsQIOF\000"
 5030      457F3E00 
 5030      0040447F 
 5030      7F404000 
 5030      00627351 
 5031 0198 00226349 		.ascii	"\000\"cII\1776\000\000\030\030\024\026\177\177\020\000"
 5031      497F3600 
 5031      00181814 
 5031      167F7F10 
 5031      00
 5032 01a9 27674545 		.ascii	"'gEE}9\000\000>\177II{2\000\000\003\003y}\007\003\000"
 5032      7D390000 
 5032      3E7F4949 
 5032      7B320000 
 5032      0303797D 
 5033 01c0 00367F49 		.ascii	"\0006\177II\1776\000\000&oII\177>\000\000\000\000$$"
 5033      497F3600 
 5033      00266F49 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 126


 5033      497F3E00 
 5033      00000024 
 5034 01d5 00000000 		.ascii	"\000\000\000\000\000\200\344d\000\000\000\000\010\034"
 5034      0080E464 
 5034      00000000 
 5034      081C
 5035 01e3 36634141 		.ascii	"6cAA\000\000\024\024\024\024\024\024\000\000AAc6\034"
 5035      00001414 
 5035      14141414 
 5035      00004141 
 5035      63361C
 5036 01f6 08000002 		.ascii	"\010\000\000\002\003QY\017\006\000\030\030\030\030\030"
 5036      0351590F 
 5036      06001818 
 5036      181818
 5037 0205 18181800 		.ascii	"\030\030\030\000|~\013\013~|\000\000\177\177II\1776"
 5037      7C7E0B0B 
 5037      7E7C0000 
 5037      7F7F4949 
 5037      7F36
 5038 0217 00003E7F 		.ascii	"\000\000>\177AAc\"\000\000\177\177Ac>\034\000\000\177"
 5038      41416322 
 5038      00007F7F 
 5038      41633E1C 
 5038      00007F
 5039 022a 7F494941 		.ascii	"\177IIAA\000\000\177\177\011\011\001\001\000\000>\177"
 5039      4100007F 
 5039      7F090901 
 5039      0100003E 
 5039      7F
 5040 023b 41497B3A 		.ascii	"AI{:\000\000\177\177\010\010\177\177\000\000\000A\177"
 5040      00007F7F 
 5040      08087F7F 
 5040      00000041 
 5040      7F
 5041 024c 7F410000 		.ascii	"\177A\000\000\000 `A\177?\001\000\000\177\177\0346c"
 5041      00206041 
 5041      7F3F0100 
 5041      007F7F1C 
 5041      3663
 5042 025e 4100007F 		.ascii	"A\000\000\177\177@@@@\000\000\177\177\006\014\006\177"
 5042      7F404040 
 5042      4000007F 
 5042      7F060C06 
 5042      7F
 5043 026f 7F007F7F 		.ascii	"\177\000\177\177\016\034\177\177\000\000>\177AA\177"
 5043      0E1C7F7F 
 5043      00003E7F 
 5043      41417F
 5044 027e 3E00007F 		.ascii	">\000\000\177\177\011\011\017\006\000\000\036?!a\177"
 5044      7F09090F 
 5044      0600001E 
 5044      3F21617F 
 5045 028e 5E00007F 		.ascii	"^\000\000\177\177\0319oF\000\000&oII{2\000\000\001\001"
 5045      7F19396F 
 5045      46000026 
 5045      6F49497B 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 127


 5045      32000001 
 5046 02a3 7F7F0101 		.ascii	"\177\177\001\001\000\000?\177@@\177?\000\000\037?``"
 5046      00003F7F 
 5046      40407F3F 
 5046      00001F3F 
 5046      6060
 5047 02b5 3F1F0000 		.ascii	"?\037\000\000\177\1770\0300\177\177\000cw\034\034wc"
 5047      7F7F3018 
 5047      307F7F00 
 5047      63771C1C 
 5047      7763
 5048 02c7 0000070F 		.ascii	"\000\000\007\017xx\017\007\000\000aqYMGC\000\030\030"
 5048      78780F07 
 5048      00006171 
 5048      594D4743 
 5048      001818
 5049 02da 18FFFF18 		.ascii	"\030\377\377\030\030\03033\314\314\000\000\000\000\000"
 5049      18183333 
 5049      CCCC0000 
 5049      000000
 5050 02e9 0000FFFF 		.ascii	"\000\000\377\377\000\000\000\000\000\000\017\017\000"
 5050      00000000 
 5050      00000F0F 
 5050      00
 5051 02f6 00000000 		.ascii	"\000\000\000\000\000\360\360\000\000\000\377\377\377"
 5051      00F0F000 
 5051      0000FFFF 
 5051      FF
 5052 0303 FFFFFFFF 		.ascii	"\377\377\377\377\377\000|~\013\013~|\000\360\360\360"
 5052      FF007C7E 
 5052      0B0B7E7C 
 5052      00F0F0F0 
 5053 0313 F0F0F0F0 		.ascii	"\360\360\360\360\360\001\001\001\001\001\001\001\001"
 5053      F0010101 
 5053      01010101 
 5053      01
 5054 0320 80808080 		.ascii	"\200\200\200\200\200\200\200\200\377\377\000\000\000"
 5054      80808080 
 5054      FFFF0000 
 5054      00
 5055 032d 00000033 		.ascii	"\000\000\00033\314\31433\314\314\000\000\000\000\000"
 5055      33CCCC33 
 5055      33CCCC00 
 5055      00000000 
 5056 033d 00FFFF30 		.ascii	"\000\377\37700\300\30000\300\3003\231\314f3\231\314"
 5056      30C0C030 
 5056      30C0C033 
 5056      99CC6633 
 5056      99CC
 5057 034f 66000000 		.ascii	"f\000\000\000\000\000\000\377\377\000\000\000\377\377"
 5057      000000FF 
 5057      FF000000 
 5057      FFFF
 5058 035d 18181800 		.ascii	"\030\030\030\000\000\000\000\360\360\360\360\000\000"
 5058      000000F0 
 5058      F0F0F000 
 5058      00
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 128


 5059 036a 001F1F18 		.ascii	"\000\037\037\030\030\030\030\030\030\370\370\000\000"
 5059      18181818 
 5059      18F8F800 
 5059      00
 5060 0377 00C0C0C0 		.ascii	"\000\300\300\300\300\300\300\300\300\000\000\000\370"
 5060      C0C0C0C0 
 5060      C0000000 
 5060      F8
 5061 0384 F8181818 		.ascii	"\370\030\030\030\030\030\030\037\037\030\030\030\030"
 5061      1818181F 
 5061      1F181818 
 5061      18
 5062 0391 1818F8F8 		.ascii	"\030\030\370\370\030\030\030\030\030\030\377\377\000"
 5062      18181818 
 5062      1818FFFF 
 5062      00
 5063 039e 0000FFFF 		.ascii	"\000\000\377\377\000\000\000\000\000\000\377\377\377"
 5063      00000000 
 5063      0000FFFF 
 5063      FF
 5064 03ab 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\377\377\377"
 5064      00000000 
 5064      0000FFFF 
 5064      FF
 5065 03b8 03030303 		.ascii	"\003\003\003\003\003\003\003\003\007\007\007\007\007"
 5065      03030303 
 5065      07070707 
 5065      07
 5066 03c5 070707E0 		.ascii	"\007\007\007\340\340\340\340\340\340\340\340\000xx0"
 5066      E0E0E0E0 
 5066      E0E0E000 
 5066      787830
 5067 03d4 180C0603 		.ascii	"\030\014\006\003\360\360\360\360\000\000\000\000\000"
 5067      F0F0F0F0 
 5067      00000000 
 5067      00
 5068 03e1 0000000F 		.ascii	"\000\000\000\017\017\017\017\030\030\030\037\037\000"
 5068      0F0F0F18 
 5068      18181F1F 
 5068      00
 5069 03ee 00000F0F 		.ascii	"\000\000\017\017\017\017\000\000\000\000\017\017\017"
 5069      0F0F0000 
 5069      00000F0F 
 5069      0F
 5070 03fb 0FF0F0F0 		.ascii	"\017\360\360\360\360"
 5070      F0
 5071              		.section	.data.init1.0,"aw"
 5072              		.align	2
 5073              		.set	.LANCHOR4,. + 0
 5076              	init1.0:
 5077 0000 00AED580 		.ascii	"\000\256\325\200\250\037\323\000@\215\024 \000\241\310"
 5077      A81FD300 
 5077      408D1420 
 5077      00A1C8
 5078 000f DA02818F 		.ascii	"\332\002\201\217\331\361\333@\244\246.\257"
 5078      D9F1DB40 
 5078      A4A62EAF 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 129


 5079              		.section	.data.oldTime,"aw"
 5080              		.align	2
 5081              		.set	.LANCHOR1,. + 0
 5084              	oldTime:
 5085 0000 FF       		.byte	-1
 5086 0001 FF       		.byte	-1
 5087 0002 FF       		.byte	-1
 5088              		.section	.rodata.chartable,"a"
 5089              		.align	2
 5090              		.set	.LANCHOR7,. + 0
 5093              	chartable:
 5094 0000 100E5D5D 		.ascii	"\020\016]]\015\035 \016 ] \021\020\016\020\035\015\035"
 5094      0D1D200E 
 5094      205D2011 
 5094      100E101D 
 5094      0D1D
 5095 0012 100E2013 		.ascii	"\020\016 \023\015\035__\015\023 ^\020\016\015\016\015"
 5095      0D1D5F5F 
 5095      0D13205E 
 5095      100E0D0E 
 5095      0D
 5096 0023 1D100E0B 		.ascii	"\035\020\016\013\016\015\035\020\016 [ ^\020\016\013"
 5096      0E0D1D10 
 5096      0E205B20 
 5096      5E100E0B 
 5097 0033 130D1D10 		.ascii	"\023\015\035\020\016\015\023\015\035"
 5097      0E0D130D 
 5097      1D
 5098              		.text
 5099              	.Letext0:
 5100              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\machine
 5101              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\sys\\_s
 5102              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 5103              		.file 10 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\lib\\gcc\\arm-none-eabi\\10.3.
 5104              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 5105              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 5106              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 5107              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 5108              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 5109              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 5110              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 5111              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 5112              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 5113              		.file 20 "Core/Src/USER/circular_buffer.h"
 5114              		.file 21 "Core/Src/USER/oled/font_c64_lower.h"
 5115              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 5116              		.file 23 "Core/Inc/main.h"
 5117              		.file 24 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 5118              		.file 25 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc_ex.h"
 5119              		.file 26 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 5120              		.file 27 "USB_DEVICE/App/usb_device.h"
 5121              		.file 28 "USB_DEVICE/App/usbd_cdc_if.h"
 5122              		.file 29 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\stdlib
 5123              		.file 30 "<built-in>"
 5124              		.file 31 "c:\\program files (x86)\\gnu arm embedded toolchain\\arm\\arm-none-eabi\\include\\string
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 130


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:18     .text.SSD1306_present:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:23     .text.SSD1306_present:00000000 SSD1306_present
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:62     .text.SSD1306_present:00000018 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:67     .text.MX_GPIO_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:72     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:191    .text.MX_GPIO_Init:0000007c $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:197    .text.rtc_clean:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:203    .text.rtc_clean:00000000 rtc_clean
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:227    .text.rtc_clean:0000000c $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:232    .text.filter_string:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:238    .text.filter_string:00000000 filter_string
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:321    .text.rtc_update:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:327    .text.rtc_update:00000000 rtc_update
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:349    .text.rtc_update:00000010 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:355    .text.rtc_time_string:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:361    .text.rtc_time_string:00000000 rtc_time_string
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:457    .text.rtc_time_string:00000074 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:464    .text.rtc_date_string:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:470    .text.rtc_date_string:00000000 rtc_date_string
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:567    .text.rtc_date_string:00000078 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:573    .text.rtc_backup_date:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:579    .text.rtc_backup_date:00000000 rtc_backup_date
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:657    .text.rtc_backup_date:00000058 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:663    .text.rtc_int_init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:669    .text.rtc_int_init:00000000 rtc_int_init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:687    .text.rtc_int_init:00000010 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:692    .text.circle_reset:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:698    .text.circle_reset:00000000 circle_reset
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:726    .text.circle_push:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:732    .text.circle_push:00000000 circle_push
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:778    .text.circle_pull:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:784    .text.circle_pull:00000000 circle_pull
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:833    .text.circle_push_buf:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:839    .text.circle_push_buf:00000000 circle_push_buf
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:889    .text.circle_available:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:895    .text.circle_available:00000000 circle_available
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:913    .text.circle_free:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:919    .text.circle_free:00000000 circle_free
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:940    .text.getRotation:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:946    .text.getRotation:00000000 getRotation
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:961    .text.SSD1306_command1:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:967    .text.SSD1306_command1:00000000 SSD1306_command1
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1010   .text.SSD1306_command1:00000024 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1015   .text.SSD1306_sendbuffer:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1021   .text.SSD1306_sendbuffer:00000000 SSD1306_sendbuffer
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1058   .text.SSD1306_sendbuffer:0000001c $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1063   .text.SSD1306_write:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1069   .text.SSD1306_write:00000000 SSD1306_write
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1128   .text.SSD1306_write:00000030 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1133   .text.SSD1306_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1139   .text.SSD1306_Init:00000000 SSD1306_Init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1181   .text.SSD1306_Init:00000024 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1186   .text.SSD1306_off:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1192   .text.SSD1306_off:00000000 SSD1306_off
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1213   .text.SSD1306_on:00000000 $t
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 131


C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1219   .text.SSD1306_on:00000000 SSD1306_on
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1240   .text.SSD1306_invert:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1246   .text.SSD1306_invert:00000000 SSD1306_invert
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1267   .text.SSD1306_normal:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1273   .text.SSD1306_normal:00000000 SSD1306_normal
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1294   .text.SSD1306_flip:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1300   .text.SSD1306_flip:00000000 SSD1306_flip
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1334   .text.SSD1306_set_addr_mode:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1340   .text.SSD1306_set_addr_mode:00000000 SSD1306_set_addr_mode
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1383   .text.SSD1306_scroll:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1389   .text.SSD1306_scroll:00000000 SSD1306_scroll
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1430   .text.SSD1306_put_tile:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1436   .text.SSD1306_put_tile:00000000 SSD1306_put_tile
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1495   .text.SSD1306_putc_raw:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1501   .text.SSD1306_putc_raw:00000000 SSD1306_putc_raw
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1527   .text.SSD1306_putc_raw:00000010 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1532   .text.SSD1306_putc:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1538   .text.SSD1306_putc:00000000 SSD1306_putc
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1604   .text.SSD1306_move_raw:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1610   .text.SSD1306_move_raw:00000000 SSD1306_move_raw
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1682   .text.SSD1306_move:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1688   .text.SSD1306_move:00000000 SSD1306_move
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1730   .text.SSD1306_home:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1736   .text.SSD1306_home:00000000 SSD1306_home
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1758   .text.SSD1306_clear:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1764   .text.SSD1306_clear:00000000 SSD1306_clear
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1844   .text.SSD1306_clear:00000054 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1849   .text.SSD1306_fill:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1855   .text.SSD1306_fill:00000000 SSD1306_fill
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1969   .text.SSD1306_putxy:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:1975   .text.SSD1306_putxy:00000000 SSD1306_putxy
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2108   .text.SSD1306_puts:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2114   .text.SSD1306_puts:00000000 SSD1306_puts
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2154   .text.SSD1306_bigdigit:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2160   .text.SSD1306_bigdigit:00000000 SSD1306_bigdigit
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2249   .text.SSD1306_bigdigit:00000048 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2254   .text.SSD1306_box:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2260   .text.SSD1306_box:00000000 SSD1306_box
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2427   .text.SSD1306_scroll_print:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2433   .text.SSD1306_scroll_print:00000000 SSD1306_scroll_print
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2505   .text.SSD1306_scroll_print:00000040 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2510   .text.SSD1306_stopscroll:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2516   .text.SSD1306_stopscroll:00000000 SSD1306_stopscroll
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2537   .text.SSD1306_dim:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2543   .text.SSD1306_dim:00000000 SSD1306_dim
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2585   .text.SSD1306_startscrollright:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2591   .text.SSD1306_startscrollright:00000000 SSD1306_startscrollright
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2648   .text.SSD1306_startscrollleft:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2654   .text.SSD1306_startscrollleft:00000000 SSD1306_startscrollleft
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2711   .text.SSD1306_startscrolldiagright:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2717   .text.SSD1306_startscrolldiagright:00000000 SSD1306_startscrolldiagright
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2782   .text.SSD1306_startscrolldiagleft:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2788   .text.SSD1306_startscrolldiagleft:00000000 SSD1306_startscrolldiagleft
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2853   .text.user_usb_rx:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2859   .text.user_usb_rx:00000000 user_usb_rx
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2922   .text.user_usb_rx:00000024 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2927   .rodata.user_init.str1.4:00000000 $d
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 132


C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2931   .text.user_init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:2937   .text.user_init:00000000 user_init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3066   .text.user_init:000000ac $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3078   .text.show_time:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3084   .text.show_time:00000000 show_time
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3410   .text.show_time:000001e0 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3424   .text.user_seconds_job:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3430   .text.user_seconds_job:00000000 user_seconds_job
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3473   .text.user_seconds_job:00000030 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3482   .text.HAL_RTCEx_RTCEventCallback:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3488   .text.HAL_RTCEx_RTCEventCallback:00000000 HAL_RTCEx_RTCEventCallback
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3510   .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3516   .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3548   .text.rtc_set_date_text:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3554   .text.rtc_set_date_text:00000000 rtc_set_date_text
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3655   .text.rtc_set_date_text:00000064 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3660   .text.rtc_set_time_text:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3666   .text.rtc_set_time_text:00000000 rtc_set_time_text
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3766   .text.rtc_set_time_text:0000005c $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3772   .rodata.commandcom.str1.4:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3776   .text.commandcom:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3782   .text.commandcom:00000000 commandcom
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3815   .text.commandcom:0000001a $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3835   .text.commandcom:0000002e $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3880   .text.commandcom:00000054 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3886   .text.user_loop:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:3892   .text.user_loop:00000000 user_loop
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4002   .text.user_loop:00000060 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4008   .text.rtc_check_screwd_calendar:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4014   .text.rtc_check_screwd_calendar:00000000 rtc_check_screwd_calendar
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4167   .text.rtc_check_screwd_calendar:000000b4 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4174   .text.MX_RTC_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4179   .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4352   .text.MX_RTC_Init:000000d0 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4360   .text.MX_TIM1_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4365   .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4577   .text.MX_TIM1_Init:000000d8 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4583   .text.MX_IWDG_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4588   .text.MX_IWDG_Init:00000000 MX_IWDG_Init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4627   .text.MX_IWDG_Init:00000020 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4633   .text.MX_I2C2_Init:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4638   .text.MX_I2C2_Init:00000000 MX_I2C2_Init
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4696   .text.MX_I2C2_Init:0000002c $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4703   .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4709   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4853   .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4859   .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4972   .bss.htim1:00000000 htim1
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4965   .bss.hrtc:00000000 hrtc
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4958   .bss.hiwdg:00000000 hiwdg
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4951   .bss.hi2c2:00000000 hi2c2
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4990   .bss.seconds:00000000 seconds
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4937   .bss.cc:00000000 cc
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4997   .bss.testas:00000000 testas
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4930   .bss.bootsecons:00000000 bootsecons
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4978   .bss.invertuotas:00000000 invertuotas
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5093   .rodata.chartable:00000000 chartable
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 133


C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4984   .bss.oled_line:00000000 oled_line
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5009   .data.font:00000000 font
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5002   .data.LastHour:00000000 LastHour
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5084   .data.oldTime:00000000 oldTime
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4944   .bss.currTime:00000000 currTime
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4921   .rodata:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4926   .bss.bootsecons:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4933   .bss.cc:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4940   .bss.currTime:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4947   .bss.hi2c2:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4954   .bss.hiwdg:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4961   .bss.hrtc:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4968   .bss.htim1:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4979   .bss.invertuotas:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4985   .bss.oled_line:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4991   .bss.seconds:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:4993   .bss.testas:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5005   .data.font:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5072   .data.init1.0:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5076   .data.init1.0:00000000 init1.0
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5080   .data.oldTime:00000000 $d
C:\Users\User\AppData\Local\Temp\ccgb5ajg.s:5089   .rodata.chartable:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_IsDeviceReady
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_RTC_GetTime
HAL_RTC_GetDate
HAL_RTCEx_BKUPRead
HAL_RTCEx_BKUPWrite
HAL_I2C_Master_Transmit
HAL_Delay
malloc
memcpy
free
HAL_TIM_PWM_Start
HAL_GPIO_TogglePin
strlen
strtok
atoi
HAL_RTC_SetDate
HAL_RTC_SetTime
CDC_Transmit_FS
HAL_IWDG_Refresh
HAL_RTC_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_IWDG_Init
ARM GAS  C:\Users\User\AppData\Local\Temp\ccgb5ajg.s 			page 134


HAL_I2C_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
